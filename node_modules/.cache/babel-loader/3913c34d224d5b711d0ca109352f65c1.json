{"ast":null,"code":"var _jsxFileName = \"/home/seungju_oh@tmax.co.kr/seung/all-in-one/All-In-One-front/src/components/OrderList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ListGroup, Container, Row, Col, Button } from \"react-bootstrap\";\nimport Title from \"./Title\";\nimport { useSelector } from \"react-redux\";\nimport placeholder from \"../assets/images/placeholder2.jpg\";\nimport EmptyCheck from \"./EmptyCheck\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport { setMoney, setDate } from \"./Convenient\";\nimport Modal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction OrderList({\n  history\n}) {\n  _s();\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [modalContents, setModalContents] = useState(\"\");\n\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  const [flag, setFlag] = useState(true);\n  const [orders, setOrders] = useState([]);\n  const {\n    isLoggedIn,\n    userData\n  } = useSelector(state => ({\n    isLoggedIn: state.user.isLoggedIn,\n    userData: state.user.payload\n  }));\n\n  const fetchOrders = async () => {\n    await axios.get(\"/apis/v1/order/\" + userData.user_id).then(res => {\n      console.log(res.data.payload);\n      let tmp_orders = res.data.payload.filter(order => order.sales_stage != \"SO\");\n      let orderlist = tmp_orders.map((order, index) => {\n        return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            style: {\n              padding: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              sm: \"6\",\n              lg: \"5\",\n              xs: \"12\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                style: {\n                  height: \"auto\",\n                  maxWidth: \"100%\",\n                  padding: 10\n                },\n                src: order.base64_image_url ? order.base64_image_url : placeholder\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: \"6\",\n              lg: {\n                span: 6,\n                offset: 1\n              },\n              xs: \"12\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  paddingTop: 10\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontSize: \"1.5rem\",\n                    fontWeight: \"bold\"\n                  },\n                  children: order.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontSize: \"1.3rem\"\n                  },\n                  children: [\"\\uC8FC\\uBB38 \\uC218\\uB7C9: \", order.demand_quantity]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontSize: \"1.3rem\"\n                  },\n                  children: [\"\\uC9C0\\uBD88 \\uAE08\\uC561: \", setMoney(order.price), \" \\u20A9\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontSize: \"1.3rem\"\n                  },\n                  children: [\"\\uC8FC\\uBB38\\uC77C: \", setDate(order.created_at)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontSize: \"1.4rem\"\n                  },\n                  children: [\"\\uC8FC\\uBB38 \\uC0C1\\uD0DC:\", \" \", order.sales_stage == \"S\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: \"red\"\n                    },\n                    children: \"\\uD310\\uB9E4\\uC790\\uC758 \\uD655\\uC778\\uC744 \\uAE30\\uB2E4\\uB824\\uC8FC\\uC138\\uC694\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 45\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: \"green\",\n                      fontWeight: \"bold\"\n                    },\n                    children: \"\\uC608\\uC57D\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4! \\uD310\\uB9E4\\uC790\\uC640 \\uAC70\\uB798\\uD558\\uC138\\uC694\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  lg: \"6\",\n                  xs: \"12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-grid gap-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"emptyButton\",\n                      style: {\n                        height: 40,\n                        fontSize: \"1.3rem\",\n                        marginTop: 10\n                      },\n                      onClick: () => {\n                        connectSeller(order.seller_id);\n                      },\n                      children: \"\\uD310\\uB9E4\\uC790\\uC5D0\\uAC8C \\uC5F0\\uB77D\\uD558\\uAE30\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  lg: \"6\",\n                  xs: \"12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-grid gap-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"filledButton\",\n                      style: {\n                        height: 40,\n                        fontSize: \"1.3rem\",\n                        marginTop: 10\n                      },\n                      onClick: () => {\n                        onDeleteOrder(order.order_id);\n                      },\n                      children: \"\\uC8FC\\uBB38 \\uCDE8\\uC18C\\uD558\\uAE30\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this);\n      });\n      setOrders(orderlist);\n    });\n  };\n\n  useEffect(() => {\n    fetchOrders();\n  }, [userData.user_id, flag]);\n\n  const connectSeller = async seller_id => {\n    let res = await axios.get(`/apis/v1/user/${seller_id}`);\n    let tmp = res.data.payload.phone_number;\n    let phone_number = tmp.slice(0, 3) + \"-\" + tmp.slice(3, 7) + \"-\" + tmp.slice(7, 11);\n    setModalOpen(true);\n    setModalContents(`[${phone_number}]로 연락해주세요!`);\n  };\n\n  const onDeleteOrder = order_id => {\n    axios.delete(`/apis/v1/order/${order_id}`).then(res => {\n      alert(\"주문이 취소되었습니다.\");\n      setFlag(!flag);\n    }).catch(e => {\n      alert(\"문제가 발생했습니다. 관리자에게 문의해주세요\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      open: modalOpen,\n      close: closeModal,\n      children: modalContents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(CategoryDirection, {\n        tag1: \"주문 목록\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EmptyCheck, {\n        text: \"주문한 상품이 없습니다\",\n        items: orders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OrderList, \"2oPzEITdbnmeMex8GHaZh6cGMjU=\", false, function () {\n  return [useSelector];\n});\n\n_c = OrderList;\nexport default OrderList;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderList\");","map":{"version":3,"sources":["/home/seungju_oh@tmax.co.kr/seung/all-in-one/All-In-One-front/src/components/OrderList.js"],"names":["React","useState","useEffect","axios","ListGroup","Container","Row","Col","Button","Title","useSelector","placeholder","EmptyCheck","CategoryDirection","setMoney","setDate","Modal","OrderList","history","modalOpen","setModalOpen","modalContents","setModalContents","closeModal","flag","setFlag","orders","setOrders","isLoggedIn","userData","state","user","payload","fetchOrders","get","user_id","then","res","console","log","data","tmp_orders","filter","order","sales_stage","orderlist","map","index","padding","height","maxWidth","base64_image_url","span","offset","paddingTop","fontSize","fontWeight","name","demand_quantity","price","created_at","color","marginTop","connectSeller","seller_id","onDeleteOrder","order_id","tmp","phone_number","slice","delete","alert","catch","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ListGroup, Container, Row, Col, Button } from \"react-bootstrap\";\nimport Title from \"./Title\";\nimport { useSelector } from \"react-redux\";\nimport placeholder from \"../assets/images/placeholder2.jpg\";\nimport EmptyCheck from \"./EmptyCheck\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport { setMoney, setDate } from \"./Convenient\";\nimport Modal from \"./Modal\";\n\nfunction OrderList({ history }) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [modalContents, setModalContents] = useState(\"\");\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    const [flag, setFlag] = useState(true);\n    const [orders, setOrders] = useState([]);\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n\n    const fetchOrders = async () => {\n        await axios.get(\"/apis/v1/order/\" + userData.user_id).then((res) => {\n            console.log(res.data.payload);\n            let tmp_orders = res.data.payload.filter(\n                (order) => order.sales_stage != \"SO\"\n            );\n            let orderlist = tmp_orders.map((order, index) => {\n                return (\n                    <ListGroup.Item key={index}>\n                        <Row style={{ padding: 10 }}>\n                            <Col sm=\"6\" lg=\"5\" xs=\"12\">\n                                <img\n                                    style={{\n                                        height: \"auto\",\n                                        maxWidth: \"100%\",\n                                        padding: 10,\n                                    }}\n                                    src={\n                                        order.base64_image_url\n                                            ? order.base64_image_url\n                                            : placeholder\n                                    }\n                                ></img>\n                            </Col>\n                            <Col sm=\"6\" lg={{ span: 6, offset: 1 }} xs=\"12\">\n                                <div style={{ paddingTop: 10 }}>\n                                    <p\n                                        style={{\n                                            fontSize: \"1.5rem\",\n                                            fontWeight: \"bold\",\n                                        }}\n                                    >\n                                        {order.name}\n                                    </p>\n                                    <p style={{ fontSize: \"1.3rem\" }}>\n                                        주문 수량: {order.demand_quantity}\n                                    </p>\n                                    <p style={{ fontSize: \"1.3rem\" }}>\n                                        지불 금액: {setMoney(order.price)} ₩\n                                    </p>\n                                    <p style={{ fontSize: \"1.3rem\" }}>\n                                        주문일: {setDate(order.created_at)}\n                                    </p>\n                                    <p style={{ fontSize: \"1.4rem\" }}>\n                                        주문 상태:{\" \"}\n                                        {order.sales_stage == \"S\" ? (\n                                            <span style={{ color: \"red\" }}>\n                                                판매자의 확인을 기다려주세요\n                                            </span>\n                                        ) : (\n                                            <span\n                                                style={{\n                                                    color: \"green\",\n                                                    fontWeight: \"bold\",\n                                                }}\n                                            >\n                                                예약되었습니다! 판매자와\n                                                거래하세요\n                                            </span>\n                                        )}\n                                    </p>\n                                </div>\n                                <Row>\n                                    <Col lg=\"6\" xs=\"12\">\n                                        <div className=\"d-grid gap-2\">\n                                            <button\n                                                className=\"emptyButton\"\n                                                style={{\n                                                    height: 40,\n                                                    fontSize: \"1.3rem\",\n                                                    marginTop: 10,\n                                                }}\n                                                onClick={() => {\n                                                    connectSeller(\n                                                        order.seller_id\n                                                    );\n                                                }}\n                                            >\n                                                판매자에게 연락하기\n                                            </button>\n                                        </div>\n                                    </Col>\n                                    <Col lg=\"6\" xs=\"12\">\n                                        <div className=\"d-grid gap-2\">\n                                            <button\n                                                className=\"filledButton\"\n                                                style={{\n                                                    height: 40,\n                                                    fontSize: \"1.3rem\",\n                                                    marginTop: 10,\n                                                }}\n                                                onClick={() => {\n                                                    onDeleteOrder(\n                                                        order.order_id\n                                                    );\n                                                }}\n                                            >\n                                                주문 취소하기\n                                            </button>\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </Col>\n\n                            <br />\n                        </Row>\n                    </ListGroup.Item>\n                );\n            });\n            setOrders(orderlist);\n        });\n    };\n\n    useEffect(() => {\n        fetchOrders();\n    }, [userData.user_id, flag]);\n\n    const connectSeller = async (seller_id) => {\n        let res = await axios.get(`/apis/v1/user/${seller_id}`);\n        let tmp = res.data.payload.phone_number;\n        let phone_number =\n            tmp.slice(0, 3) + \"-\" + tmp.slice(3, 7) + \"-\" + tmp.slice(7, 11);\n        setModalOpen(true);\n        setModalContents(`[${phone_number}]로 연락해주세요!`);\n    };\n\n    const onDeleteOrder = (order_id) => {\n        axios\n            .delete(`/apis/v1/order/${order_id}`)\n            .then((res) => {\n                alert(\"주문이 취소되었습니다.\");\n                setFlag(!flag);\n            })\n            .catch((e) => {\n                alert(\"문제가 발생했습니다. 관리자에게 문의해주세요\");\n            });\n    };\n\n    return (\n        <div>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n            <Container>\n                <CategoryDirection tag1={\"주문 목록\"}></CategoryDirection>\n\n                <EmptyCheck\n                    text={\"주문한 상품이 없습니다\"}\n                    items={orders}\n                ></EmptyCheck>\n            </Container>\n        </div>\n    );\n}\n\nexport default OrderList;\n"]},"metadata":{},"sourceType":"module"}