[{"/home/seung/projects/All-In-One-front/src/index.js":"1","/home/seung/projects/All-In-One-front/src/reportWebVitals.js":"2","/home/seung/projects/All-In-One-front/src/App.js":"3","/home/seung/projects/All-In-One-front/src/modules/index.js":"4","/home/seung/projects/All-In-One-front/src/components/Logout.js":"5","/home/seung/projects/All-In-One-front/src/components/Home.js":"6","/home/seung/projects/All-In-One-front/src/components/Move.js":"7","/home/seung/projects/All-In-One-front/src/components/Login.js":"8","/home/seung/projects/All-In-One-front/src/components/Register.js":"9","/home/seung/projects/All-In-One-front/src/components/ProductByCategory.js":"10","/home/seung/projects/All-In-One-front/src/components/UserBanner.js":"11","/home/seung/projects/All-In-One-front/src/components/ProductRegister.js":"12","/home/seung/projects/All-In-One-front/src/components/CategoryBanner.js":"13","/home/seung/projects/All-In-One-front/src/components/ProductDetail.js":"14","/home/seung/projects/All-In-One-front/src/components/OrderList.js":"15","/home/seung/projects/All-In-One-front/src/components/PurchasePage.js":"16","/home/seung/projects/All-In-One-front/src/components/Profile.js":"17","/home/seung/projects/All-In-One-front/src/components/Banner.js":"18","/home/seung/projects/All-In-One-front/src/components/MySales.js":"19","/home/seung/projects/All-In-One-front/src/components/PurchaseList.js":"20","/home/seung/projects/All-In-One-front/src/components/LikeList.js":"21","/home/seung/projects/All-In-One-front/src/components/NotFound.js":"22","/home/seung/projects/All-In-One-front/src/components/MySalesDetail.js":"23","/home/seung/projects/All-In-One-front/src/modules/user.js":"24","/home/seung/projects/All-In-One-front/src/modules/category.js":"25","/home/seung/projects/All-In-One-front/src/components/Modal.js":"26","/home/seung/projects/All-In-One-front/src/components/Loading.js":"27","/home/seung/projects/All-In-One-front/src/components/Title.js":"28","/home/seung/projects/All-In-One-front/src/components/Rating.js":"29","/home/seung/projects/All-In-One-front/src/components/Convenient.js":"30","/home/seung/projects/All-In-One-front/src/components/EmptyCheck.js":"31","/home/seung/projects/All-In-One-front/src/components/AreaButton.js":"32","/home/seung/projects/All-In-One-front/src/components/MakeCard.js":"33"},{"size":1254,"mtime":1650639303553,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":1650639303553,"results":"36","hashOfConfig":"35"},{"size":3032,"mtime":1650639303541,"results":"37","hashOfConfig":"35"},{"size":423,"mtime":1650639303553,"results":"38","hashOfConfig":"35"},{"size":2262,"mtime":1650639303549,"results":"39","hashOfConfig":"35"},{"size":3749,"mtime":1650639303549,"results":"40","hashOfConfig":"35"},{"size":1682,"mtime":1650639303549,"results":"41","hashOfConfig":"35"},{"size":6300,"mtime":1650639303549,"results":"42","hashOfConfig":"35"},{"size":8161,"mtime":1650639303553,"results":"43","hashOfConfig":"35"},{"size":1558,"mtime":1650639303553,"results":"44","hashOfConfig":"35"},{"size":3428,"mtime":1650639303553,"results":"45","hashOfConfig":"35"},{"size":18306,"mtime":1650639303553,"results":"46","hashOfConfig":"35"},{"size":2812,"mtime":1650639303549,"results":"47","hashOfConfig":"35"},{"size":10048,"mtime":1650639303553,"results":"48","hashOfConfig":"35"},{"size":8209,"mtime":1650639303553,"results":"49","hashOfConfig":"35"},{"size":12027,"mtime":1650639303553,"results":"50","hashOfConfig":"35"},{"size":8377,"mtime":1650639303553,"results":"51","hashOfConfig":"35"},{"size":2783,"mtime":1650639303549,"results":"52","hashOfConfig":"35"},{"size":6207,"mtime":1650639303549,"results":"53","hashOfConfig":"35"},{"size":8494,"mtime":1650639303553,"results":"54","hashOfConfig":"35"},{"size":4872,"mtime":1650639303549,"results":"55","hashOfConfig":"35"},{"size":352,"mtime":1650639303553,"results":"56","hashOfConfig":"35"},{"size":16482,"mtime":1650639303553,"results":"57","hashOfConfig":"35"},{"size":805,"mtime":1650639303553,"results":"58","hashOfConfig":"35"},{"size":485,"mtime":1650639303553,"results":"59","hashOfConfig":"35"},{"size":1261,"mtime":1650639303549,"results":"60","hashOfConfig":"35"},{"size":1142,"mtime":1650639303549,"results":"61","hashOfConfig":"35"},{"size":608,"mtime":1650639303553,"results":"62","hashOfConfig":"35"},{"size":2764,"mtime":1650639303553,"results":"63","hashOfConfig":"35"},{"size":418,"mtime":1650639303549,"results":"64","hashOfConfig":"35"},{"size":1433,"mtime":1650639303549,"results":"65","hashOfConfig":"35"},{"size":28715,"mtime":1650639303549,"results":"66","hashOfConfig":"35"},{"size":2047,"mtime":1650639303549,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rpvryy",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/seung/projects/All-In-One-front/src/index.js",[],"/home/seung/projects/All-In-One-front/src/reportWebVitals.js",[],"/home/seung/projects/All-In-One-front/src/App.js",[],"/home/seung/projects/All-In-One-front/src/modules/index.js",[],"/home/seung/projects/All-In-One-front/src/components/Logout.js",["154"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { logoutAction } from \"../modules/user\";\nimport { useDispatch } from \"react-redux\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport Modal from \"./Modal\";\nfunction Logout({ history }) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [modalContents, setModalContents] = useState(\"\");\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    const dispatch = useDispatch();\n\n    const onClickHandler = () => {\n        axios\n            .get(\"/apis/v1/user/logout\")\n            .then((res) => {\n                dispatch(logoutAction());\n                history.replace(\"/\");\n            })\n            .catch((e) => {\n                setModalOpen(true);\n                setModalContents(\n                    \"로그아웃에 실패했습니다. 관리자에게 문의해 주세요.\"\n                );\n            });\n    };\n    return (\n        <div>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n            <Container>\n                <CategoryDirection tag1={\"로그아웃\"}></CategoryDirection>\n                <br />\n                <Row>\n                    <Col\n                        lg={{ span: 4, offset: 4 }}\n                        sm={{ span: 6, offset: 3 }}\n                    >\n                        <h3>정말 로그아웃 하시겠습니까?</h3>\n                        <br />\n                        <br />\n                        <div className=\"d-grid gap-2\">\n                            <button\n                                className=\"emptyButton\"\n                                style={{\n                                    fontSize: \"1.3rem\",\n                                    height: 45,\n                                }}\n                                onClick={onClickHandler}\n                            >\n                                로그아웃\n                            </button>\n                            <br />\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default Logout;\n","/home/seung/projects/All-In-One-front/src/components/Home.js",["155","156","157","158"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setCategory } from \"../modules/category\";\nimport axios from \"axios\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport { Container, Navbar, Spinner } from \"react-bootstrap\";\nimport Loading from \"./Loading\";\n\nexport default function Home(props) {\n    const [products, Setproducts] = useState([]);\n\n    const dispatch = useDispatch();\n    const fetchProducts = async () => {\n        let res = await axios.get(\"/apis/v1/product\");\n        let product_list = res.data.payload.filter((p) => p.valid === true);\n        product_list = product_list.map((data) => {\n            return {\n                ...data,\n                id: data.pk,\n            };\n        });\n        Setproducts(product_list);\n    };\n\n    const fetchCategory = async () => {\n        let res = await axios.get(\"/apis/v1/category\");\n\n        let category_list = res.data.map((data) => {\n            return {\n                kind: data.fields.kind,\n                pk: data.pk,\n            };\n        });\n        dispatch(setCategory(category_list));\n    };\n\n    useEffect(() => {\n        fetchProducts();\n        fetchCategory();\n    }, []);\n\n    return (\n        <div>\n            <div>\n                <ControlledCarousel />\n\n                <br />\n                <Container>\n                    <div style={{ marginTop: 30 }} />\n                    <h3>오늘의 상품 추천</h3>\n\n                    <hr />\n                    <Loading products={products} />\n                </Container>\n            </div>\n        </div>\n    );\n}\n\nfunction ControlledCarousel() {\n    const [index, setIndex] = useState(0);\n\n    const handleSelect = (selectedIndex, e) => {\n        setIndex(selectedIndex);\n    };\n    return (\n        <Carousel activeIndex={index} onSelect={handleSelect}>\n            <Carousel.Item>\n                <img\n                    className=\"d-block w-100\"\n                    src=\"https://img.lovepik.com//back_pic/05/72/43/975bbd3c7e54c21.jpg_wh860.jpg\"\n                    alt=\"First slide\"\n                    style={{\n                        minWidth: \"100%\",\n                        height: \"30rem\",\n                    }}\n                />\n                <Carousel.Caption>\n                    {/* <h3>First slide label</h3>\n                    <p>First slide label ~~~~</p> */}\n                </Carousel.Caption>\n            </Carousel.Item>\n            <Carousel.Item>\n                <img\n                    className=\"d-block w-100\"\n                    src=\"https://image.freepik.com/free-vector/the-interior-of-mall-banner-scene-inside-a-shopping-store-at-night_93732-21.jpg\"\n                    alt=\"Second slide\"\n                    style={{\n                        minWidth: \"100%\",\n                        height: \"30rem\",\n                    }}\n                />\n\n                <Carousel.Caption>\n                    {/* <h3>Second slide label</h3>\n                    <p>아무거나 적어 </p> */}\n                </Carousel.Caption>\n            </Carousel.Item>\n            <Carousel.Item>\n                <img\n                    className=\"d-block w-100\"\n                    src=\"https://i.pinimg.com/originals/b9/42/dd/b942dd80ac8cba56dd90dc539d2040c0.jpg\"\n                    alt=\"Third slide\"\n                    style={{\n                        minWidth: \"100%\",\n                        height: \"30rem\",\n                    }}\n                />\n                <Carousel.Caption>\n                    {/* <h3>Third slide label</h3>\n                    <p>\n                    세번째\n                    </p> */}\n                </Carousel.Caption>\n            </Carousel.Item>\n        </Carousel>\n    );\n}\n","/home/seung/projects/All-In-One-front/src/components/Move.js",["159"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nconst Move = () => {\n    return (\n        <div>\n            <br />\n            <br />\n            <br />\n            <br />\n            <hr />\n            <br />\n            <Container>\n                <br />\n                <ul>\n                    <li>\n                        <a href=\"https://github.com/sjoh0704\">\n                            https://github.com/sjoh0704\n                        </a>\n                    </li>\n                    <li>\n                        <a href=\"https://seungjuitmemo.tistory.com/\">\n                            https://seungjuitmemo.tistory.com/\n                        </a>\n                    </li>\n                    <br />\n\n                    {/* <li><Link to=\"http://naver.com\" style={{textDecoration:'none', color:'inherit'}}>Home</Link></li>\n                <li><Link to=\"/login\" style={{textDecoration:'none', color:'inherit'}}>Login</Link></li>\n                <li><Link to=\"/logout\"style={{textDecoration:'none', color:'inherit'}}>Logout</Link></li>\n                <li><Link to=\"/register\"style={{textDecoration:'none', color:'inherit'}}>Register</Link></li>\n                <li><Link to=\"/product/register\"style={{textDecoration:'none', color:'inherit'}}>ProductRegister</Link></li>\n                <li><Link to=\"/category/1\"style={{textDecoration:'none', color:'inherit'}}>ProductByCategory</Link></li>\n                <li><Link to=\"/orderlist\"style={{textDecoration:'none', color:'inherit'}}>OrderList</Link></li> */}\n                </ul>\n            </Container>\n        </div>\n    );\n};\n\nexport default Move;\n","/home/seung/projects/All-In-One-front/src/components/Login.js",["160","161"],"import { loginAction } from \"../modules/user\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Form, Container, Button, Row, Col } from \"react-bootstrap\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport \"../App.css\";\nimport Modal from \"./Modal\";\n\nfunction Login({ history }) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    const [modalContents, setModalContents] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const [userData, setUserData] = useState({\n        username: \"\",\n        password: \"\",\n    });\n    const { username, password } = userData;\n\n    const onChangeHandler = (e) => {\n        const { name, value } = e.target;\n        setUserData({\n            ...userData,\n            [name]: value,\n        });\n    };\n    const onClickHandler = (e) => {\n        e.preventDefault();\n        let body = {\n            username: username,\n            password: password,\n        };\n        axios\n            .post(\"/apis/v1/user/login\", body)\n            .then((response) => {\n                history.replace(\"/\");\n                dispatch(loginAction(response.data.payload));\n            })\n            .catch((e) => {\n                setModalOpen(true);\n                setModalContents(\"아이디와 패스워드를 확인해 주세요\");\n            });\n    };\n\n    return (\n        <Container>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n            <CategoryDirection tag1={\"로그인\"}></CategoryDirection>\n            <br />\n            <div style={{ fontSize: \"1.3rem\" }}>\n                <Form onSubmit={onClickHandler}>\n                    <Form.Group as={Row} controlId=\"exampleForm.ControlInput1\">\n                        <Col\n                            sm={{ span: 2, offset: 2 }}\n                            lg={{ span: 1, offset: 3 }}\n                        >\n                            <Form.Label style={{ margin: 10 }}>\n                                아이디\n                            </Form.Label>\n                        </Col>\n                        <Col\n                            lg={{ span: 4, offset: 0 }}\n                            sm={{ span: 8, offset: 0 }}\n                        >\n                            <Form.Control\n                                size=\"lg\"\n                                name=\"username\"\n                                value={username}\n                                onChange={onChangeHandler}\n                                placeholder=\"아이디를 입력해주세요\"\n                            />\n                        </Col>\n                    </Form.Group>\n                    <br />\n                    <Form.Group as={Row} controlId=\"exampleForm.ControlInput1\">\n                        <Col\n                            sm={{ span: 2, offset: 2 }}\n                            lg={{ span: 1, offset: 3 }}\n                        >\n                            <Form.Label style={{ margin: 5 }}>\n                                패스워드\n                            </Form.Label>\n                        </Col>\n                        <Col\n                            lg={{ span: 4, offset: 0 }}\n                            sm={{ span: 8, offset: 0 }}\n                        >\n                            <Form.Control\n                                style={{ fontFamily: \"ubuntu\" }}\n                                size=\"lg\"\n                                type=\"password\"\n                                name=\"password\"\n                                value={password}\n                                onChange={onChangeHandler}\n                                placeholder=\"패스워드를 입력해주세요\"\n                            />\n                        </Col>\n                    </Form.Group>\n                    <br />\n                    <Row>\n                        <Col\n                            lg={{ span: 5, offset: 3 }}\n                            sm={{ span: 10, offset: 2 }}\n                        >\n                            <div className=\"d-grid gap-2\">\n                                <button\n                                    style={{ height: 50 }}\n                                    type=\"submit\"\n                                    className=\"filledButton\"\n                                >\n                                    로그인\n                                </button>\n                            </div>\n                        </Col>\n                    </Row>\n\n                    <Row style={{ marginTop: 15 }}>\n                        <Col\n                            lg={{ span: 5, offset: 3 }}\n                            sm={{ span: 10, offset: 2 }}\n                        >\n                            <div className=\"d-grid gap-2\">\n                                <button\n                                    style={{ height: 50 }}\n                                    className=\"emptyButton\"\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        history.replace(\"/register\");\n                                    }}\n                                >\n                                    회원가입\n                                </button>\n                            </div>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        </Container>\n    );\n\n    // return (<div style ={{\n    //     display : 'flex', justifyContent : 'center', alignItems: 'center',\n    //     width : '100%', height : '100vh'\n    // }}>\n    //     <form style ={{display : 'flex', flexDirection:'column'}}\n    //         onSubmit={onClickHandler}>\n    //         <label>username</label>\n    //         <input name = \"username\" value = {username} onChange={onChangeHandler}/>\n    //         <label>Password</label>\n    //         <input name = \"password\" value = {password} onChange={onChangeHandler}/>\n    //         <br/>\n    //         <button type = 'submit'>\n    //             Login\n    //         </button>\n    //     </form>\n    // </div>);\n}\n\nexport default Login;\n","/home/seung/projects/All-In-One-front/src/components/Register.js",["162","163","164","165","166"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Form, Container, Button, Row, Col } from \"react-bootstrap\";\nimport Banner from \"./Banner\";\nimport Title from \"./Title\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport Modal from \"./Modal\";\n\nfunction Register({ history }) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    const [modalContents, setModalContents] = useState(\"\");\n\n    const [userData, setUserData] = useState({\n        username: \"\",\n        password: \"\",\n        email: \"\",\n        phone_number: \"\",\n    });\n    const { username, password, email, phone_number } = userData;\n\n    const onChangeHandler = (e) => {\n        const { name, value } = e.target;\n        setUserData({\n            ...userData,\n            [name]: value,\n        });\n    };\n    const onClickHandler = (e) => {\n        e.preventDefault();\n        let body = {\n            username: username,\n            password: password,\n            email: email,\n            phone_number: phone_number,\n        };\n\n        if (!(username && password && email && phone_number)) {\n            setModalOpen(true);\n            setModalContents(\"모든 항목을 입력해 주세요\");\n            return;\n        }\n\n        axios\n            .post(\"/apis/v1/user\", body)\n            .then((response) => {\n                history.replace(\"/login\");\n            })\n            .catch((e) => {\n                setModalOpen(true);\n                setModalContents(\n                    \"회원가입에 실패했습니다. 관리자에게 문의해 주세요.\"\n                );\n            });\n\n        setUserData({\n            username: \"\",\n            password: \"\",\n            email: \"\",\n            phone_number: \"\",\n        });\n    };\n    return (\n        <Container>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n            <CategoryDirection tag1={\"회원가입\"}></CategoryDirection>\n            <br />\n            <div style={{ fontSize: \"1.3rem\" }}>\n                <Form onSubmit={onClickHandler}>\n                    <Form.Group as={Row} controlId=\"exampleForm.ControlInput1\">\n                        <Col\n                            sm={{ span: 2, offset: 1 }}\n                            lg={{ span: 1, offset: 2 }}\n                        >\n                            <Form.Label style={{ margin: 5 }}>\n                                아이디\n                            </Form.Label>\n                        </Col>\n                        <Col\n                            lg={{ span: 6, offset: 0 }}\n                            sm={{ span: 8, offset: 0 }}\n                        >\n                            <Form.Control\n                                name=\"username\"\n                                value={username}\n                                onChange={onChangeHandler}\n                                placeholder=\"아이디를 입력해주세요\"\n                            />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group\n                        style={{ paddingTop: 15 }}\n                        as={Row}\n                        controlId=\"exampleForm.ControlInput1\"\n                    >\n                        <Col\n                            sm={{ span: 2, offset: 1 }}\n                            lg={{ span: 1, offset: 2 }}\n                        >\n                            <Form.Label style={{ margin: 5 }}>\n                                이메일\n                            </Form.Label>\n                        </Col>\n                        <Col\n                            lg={{ span: 6, offset: 0 }}\n                            sm={{ span: 8, offset: 0 }}\n                        >\n                            <Form.Control\n                                name=\"email\"\n                                value={email}\n                                onChange={onChangeHandler}\n                                placeholder=\"이메일을 입력해주세요\"\n                            />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group\n                        style={{ paddingTop: 15 }}\n                        as={Row}\n                        controlId=\"exampleForm.ControlInput1\"\n                    >\n                        <Col\n                            sm={{ span: 2, offset: 1 }}\n                            lg={{ span: 1, offset: 2 }}\n                        >\n                            <Form.Label style={{ margin: 5 }}>\n                                패스워드\n                            </Form.Label>\n                        </Col>\n                        <Col\n                            lg={{ span: 6, offset: 0 }}\n                            sm={{ span: 8, offset: 0 }}\n                        >\n                            <Form.Control\n                                style={{ fontFamily: \"ubuntu\" }}\n                                type=\"password\"\n                                name=\"password\"\n                                value={password}\n                                onChange={onChangeHandler}\n                                placeholder=\"패스워드를 입력해 주세요\"\n                            />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group\n                        style={{ paddingTop: 15 }}\n                        as={Row}\n                        controlId=\"exampleForm.ControlInput1\"\n                    >\n                        <Col\n                            sm={{ span: 2, offset: 1 }}\n                            lg={{ span: 1, offset: 2 }}\n                        >\n                            <Form.Label style={{ margin: 5 }}>\n                                전화번호\n                            </Form.Label>\n                        </Col>\n                        <Col\n                            lg={{ span: 6, offset: 0 }}\n                            sm={{ span: 8, offset: 0 }}\n                        >\n                            <Form.Control\n                                name=\"phone_number\"\n                                value={phone_number}\n                                onChange={onChangeHandler}\n                                placeholder=\"대시(-) 없이 입력해 주세요\"\n                            />\n                        </Col>\n                    </Form.Group>\n\n                    <Row style={{ marginTop: 30 }}>\n                        <Col\n                            lg={{ span: 6, offset: 3 }}\n                            sm={{ span: 10, offset: 2 }}\n                        >\n                            <div className=\"d-grid gap-2\">\n                                <button\n                                    style={{ height: 50 }}\n                                    type=\"submit\"\n                                    className=\"emptyButton\"\n                                >\n                                    회원가입\n                                </button>\n                            </div>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        </Container>\n    );\n\n    // return (<div style ={{\n    //     display : 'flex', justifyContent : 'center', alignItems: 'center',\n    //     width : '100%', height : '100vh'\n    // }}>\n    //     <form style ={{display : 'flex', flexDirection:'column'}}\n    //         onSubmit={onClickHandler}>\n    //         <label>ID</label>\n    //         <input name = \"username\" value = {username} onChange={onChangeHandler}/>\n    //         <label>Email</label>\n    //         <input name = \"email\" value = {email} onChange={onChangeHandler}/>\n    //         <label>Password</label>\n    //         <input name = \"password\" value = {password} onChange={onChangeHandler}/>\n\n    //         <br/>\n    //         <button type = 'submit'>\n    //             Register\n    //         </button>\n    //     </form>\n    // </div>);\n}\n\nexport default Register;\n","/home/seung/projects/All-In-One-front/src/components/ProductByCategory.js",["167","168","169"],"import { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { EmptyCheckProductByCategory } from \"./EmptyCheck\";\nimport { CategoryDirection } from \"./CategoryBanner\";\n\nfunction ProductByCategory({ match }) {\n    const { kind } = useSelector((state) => ({\n        kind: state.category.payload,\n    }));\n    const [products, setProducts] = useState([]);\n\n    const fetchProducts = async () => {\n        let res = await axios.get(\"/apis/v1/category/\" + match.params.number);\n        let filtered_product_list = res.data.payload.filter(\n            (product) => product.valid == true\n        );\n        let product_list = filtered_product_list.map((data) => {\n            return {\n                ...data,\n                id: data.pk,\n            };\n        });\n        setProducts(product_list);\n    };\n\n    useEffect(() => {\n        fetchProducts();\n    }, [match.params.number]);\n\n    return (\n        <div>\n            <Container>\n                <CategoryDirection\n                    tag1={\n                        kind[kind.findIndex((k) => k.pk == match.params.number)]\n                            .kind\n                    }\n                ></CategoryDirection>\n\n                <EmptyCheckProductByCategory\n                    text=\"등록된 물건이 없습니다.\"\n                    items={products}\n                ></EmptyCheckProductByCategory>\n            </Container>\n        </div>\n    );\n}\n\nexport default ProductByCategory;\n","/home/seung/projects/All-In-One-front/src/components/UserBanner.js",[],"/home/seung/projects/All-In-One-front/src/components/ProductRegister.js",["170","171","172","173","174"],"import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { Form, Container, Button, Row, Col } from \"react-bootstrap\";\nimport ImageUploading from \"react-images-uploading\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport AreaButton from \"./AreaButton\";\nimport Modal from \"./Modal\";\n\nfunction ProductRegister({ history }) {\n    const [modalOpen, setModalOpen] = useState(false);\n\n    const [modalContents, setModalContents] = useState(\"\");\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    const [area, setArea] = useState(\"지역을 선택해 주세요\");\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n    const { kind } = useSelector((state) => ({\n        kind: state.category.payload,\n    }));\n    const [images, setImages] = useState([]);\n    const maxNumber = 4;\n\n    const onChangeImage = (imageList, addUpdateIndex) => {\n        console.log(imageList, addUpdateIndex);\n        setImages(imageList);\n    };\n\n    const onError = (errors, files) => {\n        if (errors.maxNumber) {\n            alert(`이미지는 ${maxNumber}개까지만 첨부할 수 있습니다`);\n        }\n    };\n\n    const displayCategory = kind.map((k, index) => {\n        return <option>{k.kind}</option>;\n    });\n\n    const [product, setProduct] = useState({\n        name: \"\",\n        category: kind[0].kind,\n        price: null,\n        quantity: 1,\n        description: \"\",\n    });\n\n    const { name, category, price, quantity, description } = product;\n\n    const onChangeHandler = (e) => {\n        const { name, value } = e.target;\n        setProduct({\n            ...product,\n            [name]: value,\n        });\n    };\n\n    const onChangeArea = (e) => {\n        const { name, value } = e.target;\n        setArea(value);\n    };\n\n    const onClickHandler = (e) => {\n        let category_id = kind[kind.findIndex((k) => k.kind === category)].pk;\n        let image_list = images.map((img, index) => img.data_url);\n        e.preventDefault();\n\n        if (\n            !(\n                name &&\n                category_id &&\n                price &&\n                quantity &&\n                description &&\n                image_list.length\n            )\n        ) {\n            setModalOpen(true);\n            setModalContents(\"모든 항목을 입력해 주세요\");\n            return;\n        }\n        if (\n            area == undefined ||\n            area == null ||\n            area == \"지역을 선택해 주세요\"\n        ) {\n            setModalOpen(true);\n            setModalContents(\"거래 지역을 선택해 주세요\");\n            return;\n        }\n        const body = {\n            seller_id: userData.user_id,\n            name: name,\n            category_id: category_id,\n            price: price,\n            quantity: quantity,\n            area: area,\n            description: description,\n            ...image_list, // 용량이 크면 안넘어가\n        };\n\n        axios\n            .post(\"/apis/v1/product\", body)\n            .then((response) => {\n                history.replace(\"/\");\n            })\n            .catch((e) => {\n                setModalOpen(true);\n                setModalContents(\n                    \"상품 등록에 실패하였습니다. 관리자에게 문의하세요.\"\n                );\n            });\n    };\n\n    return (\n        <div>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n\n            <Container>\n                <CategoryDirection tag1={\"판매하기\"}></CategoryDirection>\n                <br />\n                <div style={{ fontSize: \"1.3rem\" }}>\n                    <Row>\n                        <Col\n                            lg={{ span: 11, offset: 2 }}\n                            sm={{ span: 12, offset: 0 }}\n                            xs={{ span: 12 }}\n                        >\n                            <Form>\n                                <Form.Group\n                                    controlId=\"exampleForm.ControlSelect1\"\n                                    as={Row}\n                                >\n                                    <Form.Label column sm=\"2\" lg=\"1\" xs=\"4\">\n                                        카테고리\n                                    </Form.Label>\n                                    <Col sm=\"2\" xs=\"8\">\n                                        <Form.Control\n                                            as=\"select\"\n                                            name=\"category\"\n                                            onChange={onChangeHandler}\n                                            value={category}\n                                        >\n                                            {displayCategory}\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group\n                                    controlId=\"exampleForm.ControlInput1\"\n                                    as={Row}\n                                >\n                                    <Form.Label column sm=\"2\" lg=\"1\" xs=\"4\">\n                                        상품명\n                                    </Form.Label>\n                                    <Col sm=\"10\" lg=\"8\" xs=\"8\">\n                                        <Form.Control\n                                            name=\"name\"\n                                            value={name}\n                                            onChange={onChangeHandler}\n                                            placeholder=\"상품명을 적어주세요\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group\n                                    controlId=\"exampleForm.ControlInput1\"\n                                    as={Row}\n                                >\n                                    <Form.Label column sm=\"2\" lg=\"1\" xs=\"4\">\n                                        가격\n                                    </Form.Label>\n                                    <Col sm=\"4\" lg=\"2\" xs=\"7\">\n                                        <Form.Control\n                                            name=\"price\"\n                                            value={price}\n                                            onChange={onChangeHandler}\n                                            placeholder=\"가격을 적어주세요\"\n                                        />\n                                    </Col>\n                                    <Col xs=\"1\">\n                                        <p>₩</p>\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group\n                                    controlId=\"exampleForm.ControlInput1\"\n                                    as={Row}\n                                >\n                                    <Form.Label column sm=\"2\" lg=\"1\" xs=\"4\">\n                                        수량\n                                    </Form.Label>\n                                    <Col sm=\"2\" lg=\"1\" xs=\"8\">\n                                        <Form.Control\n                                            name=\"quantity\"\n                                            value={quantity}\n                                            onChange={onChangeHandler}\n                                            placeholder=\"수량을 적어주세요\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n\n                                <Row>\n                                    <Col\n                                        sm=\"2\"\n                                        lg=\"1\"\n                                        xs=\"4\"\n                                        style={{ paddingTop: 20 }}\n                                    >\n                                        거래 지역\n                                    </Col>\n                                    <Col\n                                        sm=\"6\"\n                                        lg=\"6\"\n                                        xs=\"6\"\n                                        style={{ paddingTop: 8 }}\n                                    >\n                                        <AreaButton\n                                            onChange={onChangeArea}\n                                            area={area}\n                                        />\n                                    </Col>\n                                </Row>\n                                <br />\n                                <Form.Group\n                                    controlId=\"exampleForm.ControlTextarea1\"\n                                    as={Row}\n                                >\n                                    <Form.Label column sm=\"2\" lg=\"1\">\n                                        상품설명\n                                    </Form.Label>\n                                    <Col sm=\"10\" lg=\"8\">\n                                        <Form.Control\n                                            as=\"textarea\"\n                                            rows={5}\n                                            onChange={onChangeHandler}\n                                            name=\"description\"\n                                            placeholder=\"상품 설명을 적어주세요\"\n                                            value={description}\n                                        />\n                                    </Col>\n                                </Form.Group>\n                                <br />\n                                <Form.Group\n                                    controlId=\"exampleForm.ControlTextarea1\"\n                                    as={Row}\n                                >\n                                    <Form.Label>상품 이미지 등록</Form.Label>\n                                    {/* <Button onClick={onClickGetImage}>이미지 가져오기 </Button> */}\n\n                                    <ImageUploading\n                                        multiple\n                                        value={images}\n                                        onChange={onChangeImage}\n                                        maxNumber={maxNumber}\n                                        dataURLKey=\"data_url\"\n                                        onError={onError} // 추가\n                                    >\n                                        {({\n                                            imageList,\n                                            onImageUpload,\n                                            onImageUpdate,\n                                            onImageRemove,\n                                            isDragging,\n                                            dragProps,\n                                        }) => (\n                                            // write your building UI\n\n                                            <div className=\"upload__image-wrapper\">\n                                                <br />\n                                                <Button\n                                                    variant=\"outline-light\"\n                                                    style={{\n                                                        background: \"#e85255\",\n                                                        fontSize: \"1.3rem\",\n                                                    }}\n                                                    onClick={(e) => {\n                                                        e.preventDefault();\n                                                        onImageUpload();\n                                                    }}\n                                                    {...dragProps}\n                                                >\n                                                    사진 추가\n                                                </Button>\n                                                <br />\n                                                &nbsp;\n                                                {imageList.map(\n                                                    (image, index) => (\n                                                        <div\n                                                            key={index}\n                                                            className=\"image-item\"\n                                                        >\n                                                            <img\n                                                                src={\n                                                                    image[\n                                                                        \"data_url\"\n                                                                    ]\n                                                                }\n                                                                alt=\"\"\n                                                                width=\"700\"\n                                                            />\n                                                            <div className=\"image-item__btn-wrapper\">\n                                                                <br />\n                                                                <Button\n                                                                    variant=\"outline-light\"\n                                                                    style={{\n                                                                        background:\n                                                                            \"#e85255\",\n                                                                        fontSize:\n                                                                            \"1.3rem\",\n                                                                    }}\n                                                                    onClick={(\n                                                                        e\n                                                                    ) => {\n                                                                        e.preventDefault();\n                                                                        onImageUpdate(\n                                                                            index\n                                                                        );\n                                                                    }}\n                                                                >\n                                                                    수정\n                                                                </Button>{\" \"}\n                                                                <Button\n                                                                    variant=\"outline-light\"\n                                                                    style={{\n                                                                        background:\n                                                                            \"#e85255\",\n                                                                        fontSize:\n                                                                            \"1.3rem\",\n                                                                    }}\n                                                                    onClick={(\n                                                                        e\n                                                                    ) => {\n                                                                        e.preventDefault();\n                                                                        onImageRemove(\n                                                                            index\n                                                                        );\n                                                                    }}\n                                                                >\n                                                                    삭제\n                                                                </Button>\n                                                            </div>\n                                                            <br />\n                                                        </div>\n                                                    )\n                                                )}\n                                            </div>\n                                        )}\n                                    </ImageUploading>\n                                    <Col>\n                                        <p>\n                                            {`이미지는 최대 ${maxNumber}개까지만 첨부할 수 있습니다`}\n                                        </p>\n                                        <br />\n                                    </Col>\n                                </Form.Group>\n                                <Button\n                                    type=\"submit\"\n                                    variant=\"outline-light\"\n                                    style={{\n                                        background: \"#e85255\",\n                                        fontSize: \"1.3rem\",\n                                    }}\n                                    onClick={onClickHandler}\n                                >\n                                    상품 등록\n                                </Button>\n                            </Form>\n                        </Col>\n                    </Row>\n                </div>\n            </Container>\n        </div>\n    );\n}\n\nexport default ProductRegister;\n","/home/seung/projects/All-In-One-front/src/components/CategoryBanner.js",["175","176","177"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Container, Navbar, Nav, NavDropdown, Col, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport function CategoryDirection({ tag1, tag2, tag3, tag4, tag5 }) {\n    let expression = \"홈\";\n\n    if (tag1) expression += ` > ${tag1}`;\n    if (tag2) expression += ` > ${tag2}`;\n    if (tag3) expression += ` > ${tag3}`;\n    if (tag4) expression += ` > ${tag4}`;\n    if (tag5) expression += ` > ${tag5}`;\n    let tags = expression.split(\" > \");\n    let last = tags[tags.length - 1];\n    expression = expression.substring(0, expression.length - last.length);\n    // console.log(expression)\n    return (\n        <div style={{ marginTop: 50, marginBottom: 50, fontSize: \"1.4rem\" }}>\n            <span>\n                <Link\n                    to=\"/\"\n                    style={{ textDecoration: \"none\", color: \"inherit\" }}\n                >\n                    {expression}\n                </Link>\n            </span>\n            <span style={{ fontWeight: \"bolder\", color: \"#e85255\" }}>\n                {last}\n            </span>\n        </div>\n    );\n}\n\nfunction CategoryBanner() {\n    const { isLoggedIn } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n    }));\n\n    const { kind } = useSelector((state) => ({\n        kind: state.category.payload,\n    }));\n    const display_category = kind.map((k, index) => {\n        let path = \"/category/\" + k.pk;\n        return (\n            <Col lg=\"1\" sm=\"2\" xs=\"3\">\n                <Nav.Item>\n                    <Nav.Link\n                        href={path}\n                        style={{ color: \"white\", padding: 5 }}\n                    >\n                        {k.kind}\n                    </Nav.Link>\n                </Nav.Item>\n            </Col>\n        );\n    });\n\n    return (\n        <div\n            style={{\n                background: \"#e85255\",\n                fontSize: \"1.3rem\",\n                paddingTop: 5,\n                paddingBottom: 5,\n                color: \"white\",\n            }}\n        >\n            <Nav variant=\"pills\" defaultActiveKey=\"/home\">\n                <Container>\n                    <Row>\n                        <Col lg=\"1\" sm=\"1\" xs=\"1\">\n                            <Nav.Item>\n                                <Nav.Link\n                                    href=\"/\"\n                                    style={{ color: \"white\", padding: 5 }}\n                                >\n                                    홈\n                                </Nav.Link>\n                            </Nav.Item>\n                        </Col>\n\n                        {display_category}\n                    </Row>\n                </Container>\n            </Nav>\n        </div>\n    );\n}\n\nexport default CategoryBanner;\n","/home/seung/projects/All-In-One-front/src/components/ProductDetail.js",["178","179","180","181","182","183","184","185"],"import {\n    ListGroup,\n    Container,\n    Button,\n    Form,\n    Row,\n    Col,\n    ListGroupItem,\n} from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport EmptyHeartImg from \"../assets/images/heart.png\";\nimport HeartImg from \"../assets/images/heart_pressed.png\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport { setMoney, setDate } from \"./Convenient\";\nimport Rating from \"./Rating\";\nimport Modal from \"./Modal\";\n\nfunction ProductDetail({ match, history }) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [modalContents, setModalContents] = useState(\"\");\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n\n    const [amount, setAmount] = useState(1);\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n    const [like, setLike] = useState({ checked: false });\n    const [images, setImages] = useState([]);\n    const [product, setProduct] = useState({});\n    const [seller, setSeller] = useState({});\n\n    const fetchProduct = async () => {\n        let res = await axios.get(\"/apis/v1/product/\" + match.params.number);\n        let tmp = res.data.payload;\n        setProduct({\n            ...res.data.payload,\n            product_id: match.params.number,\n        });\n        setImages(tmp.image);\n\n        let res_seller = await axios.get(\"/apis/v1/user/\" + tmp.seller_id);\n        setSeller(res_seller.data.payload);\n\n        // check likes\n\n        if (isLoggedIn) {\n            let body = {\n                seller_id: res.data.payload.seller_id,\n                buyer_id: userData.user_id,\n                product_id: parseInt(match.params.number),\n            };\n            let res_likes = await axios.post(\"/apis/v1/carts/check\", body);\n            setLike(res_likes.data.payload);\n        }\n    };\n\n    useEffect(() => {\n        fetchProduct();\n    }, [match.params.number, like.checked]);\n\n    const onClickOrder = (e) => {\n        if (isLoggedIn === false || userData == null) {\n            setModalOpen(true);\n            setModalContents(\"로그인 후 이용하세요.\");\n            history.replace(\"/login\");\n        } else if (userData.user_id == product.seller_id) {\n            setModalOpen(true);\n            setModalContents(\"판매자가 구매할 수 없습니다.\");\n            e.preventDefault();\n        } else if (amount < 1 || amount > product.quantity) {\n            setModalOpen(true);\n            setModalContents(\"수량이 올바르지 않습니다.\");\n            e.preventDefault();\n        }\n    };\n\n    const onClickCart = async () => {\n        if (isLoggedIn === false) {\n            setModalOpen(true);\n            setModalContents(\"로그인 후 이용하세요.\");\n            return;\n        }\n\n        if (like.checked) {\n            await axios.delete(`/apis/v1/carts/${like[0]._id}`);\n            setLike({ checked: false });\n        } else {\n            let body = {\n                seller_id: product.seller_id,\n                buyer_id: userData.user_id,\n                product_id: parseInt(product.product_id),\n            };\n            await axios.post(\"/apis/v1/carts/\", body);\n            setLike({ checked: true });\n        }\n    };\n\n    const onChangeHandler = (e) => {\n        const { value } = e.target;\n        setAmount(parseInt(value));\n    };\n\n    const displayImages = () => {\n        if (images.length == 1) {\n            return;\n        }\n        return images.slice(1).map((img) => (\n            <ListGroupItem>\n                <br />\n                <img\n                    style={{\n                        width: \"60vw\",\n                    }}\n                    src={img}\n                ></img>\n                <br />\n                <br />\n            </ListGroupItem>\n        ));\n    };\n\n    return (\n        <div>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n            <Container>\n                <CategoryDirection\n                    tag1={product.category}\n                    tag2={product.name}\n                />\n                <Row>\n                    <Col xs=\"12\" sm=\"12\" lg=\"7\">\n                        <img\n                            style={{\n                                width: \"90%\",\n                                height: \"auto\",\n                            }}\n                            src={images[0]}\n                        ></img>\n                    </Col>\n                    <Col xs=\"12\" sm=\"10\" lg=\"5\">\n                        <Row style={{ paddingTop: 5 }}>\n                            <Rating user={seller} area={product.area} />\n                        </Row>\n                        <hr />\n\n                        <Row style={{ marginTop: 20, paddingTop: 20 }}>\n                            <Col xs=\"9\" sm=\"9\">\n                                <p\n                                    style={{\n                                        marginLeft: 20,\n                                        fontSize: \"2.2rem\",\n                                        fontWeight: \"bolder\",\n                                    }}\n                                >\n                                    {product.name}\n                                </p>\n                            </Col>\n                            <Col xs=\"3\" sm=\"3\">\n                                <img\n                                    style={{ width: \"2rem\" }}\n                                    src={\n                                        like.checked ? HeartImg : EmptyHeartImg\n                                    }\n                                    onClick={onClickCart}\n                                ></img>\n                            </Col>\n                        </Row>\n\n                        <p style={{ fontSize: \"2rem\", margin: 20 }}>\n                            {setMoney(product.price)} ₩\n                        </p>\n                        <p style={{ fontSize: \"1.5rem\", margin: 20 }}>\n                            남은 수량: {product.quantity}\n                        </p>\n                        <Row style={{ fontSize: \"1.5rem\", padding: 20 }}>\n                            <Col xs=\"6\" sm=\"12\" lg={4}>\n                                <p>선택 수량:</p>\n                            </Col>\n\n                            <Col xs=\"6\" sm=\"9\" lg={4}>\n                                <Form>\n                                    <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                        <Form.Control\n                                            style={{ fontSize: \"1.5rem\" }}\n                                            type=\"number\"\n                                            onChange={onChangeHandler}\n                                            value={amount}\n                                        />\n                                    </Form.Group>\n                                </Form>\n                            </Col>\n                        </Row>\n                        <Col>\n                            <p style={{ fontSize: \"3em\", margin: 20 }}>\n                                {product.price\n                                    ? (product.price * amount)\n                                          .toString()\n                                          .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                                    : product.price * amount}{\" \"}\n                                ₩\n                            </p>\n                        </Col>\n\n                        <Col xs=\"12\">\n                            <Link\n                                to={\n                                    isLoggedIn\n                                        ? {\n                                              pathname: `/purchase`,\n                                              state: {\n                                                  product: product,\n                                                  demand_amount: amount,\n                                              },\n                                          }\n                                        : \"/product/\" + match.params.number\n                                }\n                                style={{ textDecoration: \"none\" }}\n                            >\n                                <div className=\"d-grid gap-2\">\n                                    <button\n                                        className=\"emptyButton\"\n                                        onClick={onClickOrder}\n                                        style={{\n                                            fontSize: \"1.3rem\",\n                                            margin: 20,\n                                            height: 50,\n                                        }}\n                                    >\n                                        구매하기\n                                    </button>\n                                </div>\n                            </Link>\n                        </Col>\n                    </Col>\n                </Row>\n\n                <Row style={{ marginTop: 80 }}>\n                    <Col>\n                        <ListGroup>\n                            <ListGroupItem>\n                                <p style={{ margin: 10, fontSize: \"2rem\" }}>\n                                    상품 상세{\" \"}\n                                </p>\n                            </ListGroupItem>\n\n                            {displayImages()}\n\n                            <ListGroupItem>\n                                <p style={{ margin: 20, fontSize: \"2rem\" }}>\n                                    {product.description}\n                                </p>\n                            </ListGroupItem>\n                        </ListGroup>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default ProductDetail;\n","/home/seung/projects/All-In-One-front/src/components/OrderList.js",["186","187","188","189","190","191","192"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ListGroup, Container, Row, Col, Button } from \"react-bootstrap\";\nimport Title from \"./Title\";\nimport { useSelector } from \"react-redux\";\nimport placeholder from \"../assets/images/placeholder2.jpg\";\nimport EmptyCheck from \"./EmptyCheck\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport { setMoney, setDate } from \"./Convenient\";\nimport Modal from \"./Modal\";\n\nfunction OrderList({ history }) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [modalContents, setModalContents] = useState(\"\");\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    const [flag, setFlag] = useState(true);\n    const [orders, setOrders] = useState([]);\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n\n    const fetchOrders = async () => {\n        await axios.get(\"/apis/v1/order/\" + userData.user_id).then((res) => {\n            console.log(res.data.payload);\n            let tmp_orders = res.data.payload.filter(\n                (order) => order.sales_stage != \"SO\"\n            );\n            let orderlist = tmp_orders.map((order, index) => {\n                return (\n                    <ListGroup.Item key={index}>\n                        <Row style={{ padding: 10 }}>\n                            <Col sm=\"6\" lg=\"5\" xs=\"12\">\n                                <img\n                                    style={{\n                                        height: \"auto\",\n                                        maxWidth: \"100%\",\n                                        padding: 10,\n                                    }}\n                                    src={\n                                        order.base64_image_url\n                                            ? order.base64_image_url\n                                            : placeholder\n                                    }\n                                ></img>\n                            </Col>\n                            <Col sm=\"6\" lg={{ span: 6, offset: 1 }} xs=\"12\">\n                                <div style={{ paddingTop: 10 }}>\n                                    <p\n                                        style={{\n                                            fontSize: \"1.5rem\",\n                                            fontWeight: \"bold\",\n                                        }}\n                                    >\n                                        {order.name}\n                                    </p>\n                                    <p style={{ fontSize: \"1.3rem\" }}>\n                                        주문 수량: {order.demand_quantity}\n                                    </p>\n                                    <p style={{ fontSize: \"1.3rem\" }}>\n                                        지불 금액: {setMoney(order.price)} ₩\n                                    </p>\n                                    <p style={{ fontSize: \"1.3rem\" }}>\n                                        주문일: {setDate(order.created_at)}\n                                    </p>\n                                    <p style={{ fontSize: \"1.4rem\" }}>\n                                        주문 상태:{\" \"}\n                                        {order.sales_stage == \"S\" ? (\n                                            <span style={{ color: \"red\" }}>\n                                                판매자의 확인을 기다려주세요\n                                            </span>\n                                        ) : (\n                                            <span\n                                                style={{\n                                                    color: \"green\",\n                                                    fontWeight: \"bold\",\n                                                }}\n                                            >\n                                                예약되었습니다! 판매자와\n                                                거래하세요\n                                            </span>\n                                        )}\n                                    </p>\n                                </div>\n                                <Row>\n                                    <Col lg=\"6\" xs=\"12\">\n                                        <div className=\"d-grid gap-2\">\n                                            <button\n                                                className=\"emptyButton\"\n                                                style={{\n                                                    height: 40,\n                                                    fontSize: \"1.3rem\",\n                                                    marginTop: 10,\n                                                }}\n                                                onClick={() => {\n                                                    connectSeller(\n                                                        order.seller_id\n                                                    );\n                                                }}\n                                            >\n                                                판매자에게 연락하기\n                                            </button>\n                                        </div>\n                                    </Col>\n                                    <Col lg=\"6\" xs=\"12\">\n                                        <div className=\"d-grid gap-2\">\n                                            <button\n                                                className=\"filledButton\"\n                                                style={{\n                                                    height: 40,\n                                                    fontSize: \"1.3rem\",\n                                                    marginTop: 10,\n                                                }}\n                                                onClick={() => {\n                                                    onDeleteOrder(\n                                                        order.order_id\n                                                    );\n                                                }}\n                                            >\n                                                주문 취소하기\n                                            </button>\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </Col>\n\n                            <br />\n                        </Row>\n                    </ListGroup.Item>\n                );\n            });\n            setOrders(orderlist);\n        });\n    };\n\n    useEffect(() => {\n        fetchOrders();\n    }, [userData.user_id, flag]);\n\n    const connectSeller = async (seller_id) => {\n        let res = await axios.get(`/apis/v1/user/${seller_id}`);\n        let tmp = res.data.payload.phone_number;\n        let phone_number =\n            tmp.slice(0, 3) + \"-\" + tmp.slice(3, 7) + \"-\" + tmp.slice(7, 11);\n        setModalOpen(true);\n        setModalContents(`[${phone_number}]로 연락해주세요!`);\n    };\n\n    const onDeleteOrder = (order_id) => {\n        axios\n            .delete(`/apis/v1/order/${order_id}`)\n            .then((res) => {\n                alert(\"주문이 취소되었습니다.\");\n                setFlag(!flag);\n            })\n            .catch((e) => {\n                alert(\"문제가 발생했습니다. 관리자에게 문의해주세요\");\n            });\n    };\n\n    return (\n        <div>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n            <Container>\n                <CategoryDirection tag1={\"주문 목록\"}></CategoryDirection>\n\n                <EmptyCheck\n                    text={\"주문한 상품이 없습니다\"}\n                    items={orders}\n                ></EmptyCheck>\n            </Container>\n        </div>\n    );\n}\n\nexport default OrderList;\n","/home/seung/projects/All-In-One-front/src/components/PurchasePage.js",["193","194","195","196"],"import { ListGroup, Container, Button, Form, Row, Col } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport { setMoney, setDate } from \"./Convenient\";\nimport Modal from \"./Modal\";\n\nfunction PurchasePage({ location, history }) {\n    const [modalOpen, setModalOpen] = useState(false);\n\n    const [modalContents, setModalContents] = useState(\"\");\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    const { product, demand_amount } = location.state;\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n    console.log(product);\n    console.log(demand_amount);\n\n    const [purchaseData, setPurchaseData] = useState({\n        address: null,\n        email_address: null,\n    });\n    const { address, email_address } = purchaseData;\n\n    const orderProduct = async () => {\n        if (!(address && email_address)) {\n            setModalOpen(true);\n            setModalContents(\"모든 항목을 입력해 주세요\");\n            return;\n        }\n        let body = {\n            ...product,\n            product_id: product.product_id,\n            seller_id: product.seller_id,\n            buyer_id: userData.user_id,\n            demand_amount: demand_amount,\n            address: address,\n            quantity: product.quantity,\n            email_address: email_address,\n        };\n        console.log(body);\n        await axios\n            .post(\"/apis/v1/order\", body)\n            .then((res) => {\n                history.replace(\"/orderlist\");\n            })\n            .catch((e) => {\n                // 정보가 없을 때 처리\n                alert(\"주문에 실패하였습니다. 관리자에게 문의해 주세요\");\n            });\n    };\n\n    const onClickOrder = () => {\n        if (isLoggedIn === false) {\n            alert(\"로그인 후 이용하세요.\");\n            return;\n        }\n        orderProduct();\n    };\n\n    const onChangeHandler = (e) => {\n        const { name, value } = e.target;\n        setPurchaseData({\n            ...purchaseData,\n            [name]: value,\n        });\n    };\n\n    return (\n        <div>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n            <Container>\n                <CategoryDirection\n                    tag1={product.category}\n                    tag2={product.name}\n                    tag3={\"구매하기\"}\n                ></CategoryDirection>\n                <br />\n                <p\n                    style={{\n                        fontSize: \"1.6rem\",\n                        fontWeight: \"bold\",\n                        margin: 15,\n                    }}\n                >\n                    상품 정보를 확인하세요\n                </p>\n                <hr />\n                <Row>\n                    <Form style={{ fontSize: \"1.3rem\" }}>\n                        <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                            <Col\n                                lg={{ span: 4, offset: 1 }}\n                                sm={{ span: 4, offset: 1 }}\n                                xs={{ span: 5, offset: 1 }}\n                            >\n                                <Form.Label style={{ padding: 5 }}>\n                                    카테고리\n                                </Form.Label>\n                            </Col>\n\n                            <Col lg=\"4\" sm=\"6\" xs=\"6\">\n                                <Form.Control\n                                    style={{ fontSize: \"1.3rem\" }}\n                                    plaintext\n                                    readOnly\n                                    defaultValue={product.category}\n                                />\n                            </Col>\n                        </Form.Group>\n                        <Form.Group\n                            as={Row}\n                            className=\"mb-3\"\n                            controlId=\"formPlaintextEmail\"\n                        >\n                            <Col\n                                lg={{ span: 4, offset: 1 }}\n                                sm={{ span: 4, offset: 1 }}\n                                xs={{ span: 5, offset: 1 }}\n                            >\n                                <Form.Label style={{ padding: 5 }}>\n                                    상품명\n                                </Form.Label>\n                            </Col>\n\n                            <Col lg=\"4\" sm=\"6\" xs=\"6\">\n                                <Form.Control\n                                    style={{ fontSize: \"1.3rem\" }}\n                                    plaintext\n                                    readOnly\n                                    defaultValue={product.name}\n                                />\n                            </Col>\n                        </Form.Group>\n                        <Form.Group\n                            as={Row}\n                            className=\"mb-3\"\n                            controlId=\"formPlaintextEmail\"\n                        >\n                            <Col\n                                lg={{ span: 4, offset: 1 }}\n                                sm={{ span: 4, offset: 1 }}\n                                xs={{ span: 5, offset: 1 }}\n                            >\n                                <Form.Label style={{ padding: 5 }}>\n                                    상품 가격\n                                </Form.Label>\n                            </Col>\n\n                            <Col lg=\"4\" sm=\"6\" xs=\"6\">\n                                <Form.Control\n                                    style={{ fontSize: \"1.3rem\" }}\n                                    plaintext\n                                    readOnly\n                                    defaultValue={setMoney(product.price)}\n                                />\n                            </Col>\n                        </Form.Group>\n                        <Form.Group\n                            as={Row}\n                            className=\"mb-3\"\n                            controlId=\"formPlaintextEmail\"\n                        >\n                            <Col\n                                lg={{ span: 4, offset: 1 }}\n                                sm={{ span: 4, offset: 1 }}\n                                xs={{ span: 5, offset: 1 }}\n                            >\n                                <Form.Label style={{ padding: 5 }}>\n                                    상품 수량\n                                </Form.Label>\n                            </Col>\n\n                            <Col lg=\"4\" sm=\"6\" xs=\"6\">\n                                <Form.Control\n                                    style={{ fontSize: \"1.3rem\" }}\n                                    plaintext\n                                    readOnly\n                                    defaultValue={product.quantity}\n                                />\n                            </Col>\n                        </Form.Group>\n                    </Form>\n\n                    <p\n                        style={{\n                            fontSize: \"1.6rem\",\n                            fontWeight: \"bold\",\n                            marginTop: 50,\n                            margin: 15,\n                        }}\n                    >\n                        구매 정보를 입력하세요\n                    </p>\n                    <hr />\n\n                    <Form>\n                        <Form.Group\n                            as={Row}\n                            controlId=\"exampleForm.ControlInput1\"\n                        >\n                            <Col\n                                lg={{ span: 4, offset: 1 }}\n                                sm={{ span: 4, offset: 1 }}\n                                xs={{ span: 5, offset: 1 }}\n                            >\n                                <Form.Label\n                                    style={{ fontSize: \"1.3rem\", margin: 10 }}\n                                >\n                                    구매 수량\n                                </Form.Label>\n                            </Col>\n\n                            <Col lg=\"2\" sm=\"2\" xs=\"4\">\n                                <Form.Control\n                                    name=\"demand_amount\"\n                                    value={demand_amount}\n                                    disabled\n                                />\n                            </Col>\n                        </Form.Group>\n\n                        <Form.Group\n                            as={Row}\n                            controlId=\"exampleForm.ControlInput1\"\n                        >\n                            <Col\n                                lg={{ span: 4, offset: 1 }}\n                                sm={{ span: 4, offset: 1 }}\n                                xs={{ span: 5, offset: 1 }}\n                            >\n                                <Form.Label\n                                    style={{ fontSize: \"1.3rem\", margin: 10 }}\n                                >\n                                    이메일 주소\n                                </Form.Label>\n                            </Col>\n\n                            <Col lg=\"6\" sm=\"6\" xs=\"6\">\n                                <Form.Control\n                                    name=\"email_address\"\n                                    value={email_address}\n                                    onChange={onChangeHandler}\n                                    placeholder=\"거래 정보를 받을 이메일을 적어주세요\"\n                                />\n                            </Col>\n                        </Form.Group>\n\n                        <Form.Group\n                            as={Row}\n                            controlId=\"exampleForm.ControlInput1\"\n                        >\n                            <Col\n                                lg={{ span: 4, offset: 1 }}\n                                sm={{ span: 4, offset: 1 }}\n                                xs={{ span: 5, offset: 1 }}\n                            >\n                                <Form.Label\n                                    style={{ fontSize: \"1.3rem\", margin: 10 }}\n                                >\n                                    거래 장소\n                                </Form.Label>\n                            </Col>\n                            <Col lg=\"6\" sm=\"6\" xs=\"6\">\n                                <Form.Control\n                                    name=\"address\"\n                                    value={address}\n                                    onChange={onChangeHandler}\n                                    placeholder=\"거래 선호 지역을 적어주세요\"\n                                />\n                            </Col>\n                        </Form.Group>\n\n                        <br />\n                    </Form>\n                    <Col\n                        lg={{ span: 6, offset: 5 }}\n                        sm={{ span: 6, offset: 5 }}\n                        xs={{ span: 12 }}\n                    >\n                        <h1>총 가격: {product.price * demand_amount}원</h1>\n                        <div className=\"d-grid gap-2\">\n                            <br />\n                            <button\n                                style={{ fontSize: \"1.4rem\" }}\n                                className=\"emptyButton\"\n                                onClick={onClickOrder}\n                            >\n                                구매하기\n                            </button>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default PurchasePage;\n","/home/seung/projects/All-In-One-front/src/components/Profile.js",["197","198","199"],"import React, { useState } from \"react\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport Title from \"./Title\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { loginAction, logoutAction } from \"../modules/user\";\nimport { CategoryDirection } from \"./CategoryBanner\";\n\nfunction Profile({ history }) {\n    const dispatch = useDispatch();\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n\n    console.log(userData);\n\n    const [user, setUser] = useState({\n        username: userData.username,\n        email: userData.useremail,\n        phone_number: userData.phone_number,\n    });\n    const { username, email, phone_number } = user;\n    const user_id = userData.user_id;\n\n    const onChangeHandler = (e) => {\n        const { name, value } = e.target;\n        setUser({\n            ...user,\n            [name]: value,\n        });\n    };\n    const onClickEditHandler = async (e) => {\n        e.preventDefault();\n        let body = {\n            user_id: user_id,\n            username: username,\n            useremail: email,\n            phone_number: phone_number,\n        };\n        await axios\n            .post(`/apis/v1/user/${user_id}`, body)\n            .then((response) => {\n                alert(\"사용자 정보 수정 완료\");\n                dispatch(loginAction(body));\n            })\n            .catch((e) => {\n                alert(\"사용자 정보 수정 실패\");\n            });\n    };\n\n    const onClickDeleteHandler = async (e) => {\n        e.preventDefault();\n        await axios\n            .delete(`/apis/v1/user/${user_id}`)\n            .then((response) => {\n                console.log(response);\n                alert(\"회원 탈퇴 완료\");\n                dispatch(logoutAction());\n                history.replace(\"/\");\n            })\n            .catch((e) => {\n                alert(\"회원 탈퇴 실패\");\n            });\n    };\n\n    return (\n        <div>\n            <Container>\n                <CategoryDirection tag1={\"내정보 관리\"}></CategoryDirection>\n                <br />\n                <div style={{ fontSize: \"1.2rem\" }}>\n                    <Row>\n                        <Col\n                            lg={{ span: 10, offset: 3 }}\n                            sm={{ span: 12, offset: 0 }}\n                        >\n                            <Form>\n                                <Form.Group\n                                    as={Row}\n                                    controlId=\"exampleForm.ControlInput1\"\n                                >\n                                    <Form.Label\n                                        column\n                                        sm=\"2\"\n                                        lg=\"1\"\n                                        style={{ padding: 10 }}\n                                    >\n                                        아이디\n                                    </Form.Label>\n                                    <Col sm=\"8\" lg=\"6\">\n                                        <Form.Control\n                                            size=\"lg\"\n                                            name=\"username\"\n                                            value={username}\n                                            onChange={onChangeHandler}\n                                            placeholder=\"ID를 입력해주세요\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n                                <br />\n                                <Form.Group\n                                    as={Row}\n                                    controlId=\"exampleForm.ControlInput1\"\n                                >\n                                    <Form.Label\n                                        column\n                                        sm=\"2\"\n                                        lg=\"1\"\n                                        style={{ padding: 10 }}\n                                    >\n                                        이메일\n                                    </Form.Label>\n                                    <Col sm=\"8\" lg=\"6\">\n                                        <Form.Control\n                                            size=\"lg\"\n                                            name=\"email\"\n                                            value={email}\n                                            onChange={onChangeHandler}\n                                            placeholder=\"email을 입력해주세요\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n                                <br />\n                                <Form.Group\n                                    as={Row}\n                                    controlId=\"exampleForm.ControlInput1\"\n                                >\n                                    <Form.Label\n                                        column\n                                        sm=\"2\"\n                                        lg=\"1\"\n                                        style={{ padding: 10 }}\n                                    >\n                                        전화번호\n                                    </Form.Label>\n                                    <Col sm=\"8\" lg=\"6\">\n                                        <Form.Control\n                                            size=\"lg\"\n                                            name=\"phone_number\"\n                                            value={phone_number}\n                                            onChange={onChangeHandler}\n                                            placeholder=\"대시(-) 없이 입력해주세요\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n                                <br />\n\n                                <Row>\n                                    <Col\n                                        lg={{ span: 2, offset: 3 }}\n                                        sm={{ span: 3, offset: 4 }}\n                                    >\n                                        <div className=\"d-grid gap-2\">\n                                            <button\n                                                className=\"filledButton\"\n                                                style={{\n                                                    fontSize: \"1.3rem\",\n                                                    height: 40,\n                                                }}\n                                                onClick={onClickEditHandler}\n                                            >\n                                                수정\n                                            </button>\n                                            <span> </span>\n                                        </div>\n                                    </Col>\n                                    <Col\n                                        lg={{ span: 2, offset: 0 }}\n                                        sm={{ span: 3, offset: 0 }}\n                                    >\n                                        <div className=\"d-grid gap-2\">\n                                            <button\n                                                className=\"emptyButton\"\n                                                style={{\n                                                    fontSize: \"1.3rem\",\n                                                    height: 40,\n                                                }}\n                                                onClick={onClickDeleteHandler}\n                                            >\n                                                회원 탈퇴\n                                            </button>\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </Form>\n                        </Col>\n                    </Row>\n                </div>\n            </Container>\n        </div>\n    );\n}\n\nexport default Profile;\n","/home/seung/projects/All-In-One-front/src/components/Banner.js",["200","201","202","203","204"],"import React from \"react\";\nimport {\n    Container,\n    Row,\n    Col,\n    Nav,\n    Navbar,\n    Form,\n    FormControl,\n    Button,\n    InputGroup,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport bucket from \"../assets/images/bucket.png\";\nconst Banner = () => {\n    return (\n        <div style={{ paddingBottom: 30 }}>\n            <hr />\n\n            <Container>\n                <Row>\n                    <Col\n                        lg={{ span: 3, offset: 0 }}\n                        sm={{ span: 3, offset: 0 }}\n                    >\n                        <Navbar.Brand href=\"#home\">\n                            <Link\n                                to=\"/\"\n                                style={{\n                                    textDecoration: \"none\",\n                                    color: \"inherit\",\n                                }}\n                            >\n                                <img src={bucket} style={{ width: 70 }}></img>\n                            </Link>\n                        </Navbar.Brand>\n                    </Col>\n                </Row>\n\n                <Form>\n                    <Row className=\"align-items-center\">\n                        <Col lg={{ span: 3 }} sm={{ span: 12 }} xs=\"12\">\n                            <Link\n                                to=\"/\"\n                                style={{\n                                    textDecoration: \"none\",\n                                    color: \"inherit\",\n                                }}\n                            >\n                                <h2 style={{ color: \"black\" }}>\n                                    My Shopping Mall\n                                </h2>\n                            </Link>\n                        </Col>\n                        <Col lg={{ span: 6 }} sm={{ span: 9 }} xs=\"9\">\n                            <Form.Control\n                                size=\"lg\"\n                                id=\"inlineFormInputName\"\n                                placeholder=\"검색어를 입력하세요\"\n                            />\n                        </Col>\n                        <Col lg={{ span: 3 }} sm={{ span: 3 }} xs=\"3\">\n                            <button\n                                className=\"emptyButton\"\n                                style={{\n                                    width: \"5em\",\n                                    height: 50,\n                                    fontSize: \"1.3rem\",\n                                }}\n                            >\n                                Search\n                            </button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        </div>\n    );\n};\n\nexport default Banner;\n","/home/seung/projects/All-In-One-front/src/components/MySales.js",["205","206","207","208","209"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ListGroup, Container, Row, Col, Button } from \"react-bootstrap\";\nimport Title from \"./Title\";\nimport { useSelector } from \"react-redux\";\nimport placeholder from \"../assets/images/placeholder2.jpg\";\nimport { Link } from \"react-router-dom\";\nimport EmptyCheck from \"./EmptyCheck\";\nimport { setDate, setMoney } from \"./Convenient\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport Modal from \"./Modal\";\n\nfunction MySales({ history }) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [modalContents, setModalContents] = useState(\"\");\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n\n    const [flag, setFlag] = useState(true);\n    const [products, setProducts] = useState([]);\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n\n    const fetchOrders = async () => {\n        const res = await axios.get(\n            \"/apis/v1/product/user/\" + userData.user_id\n        );\n        let product_list = res.data.payload.filter((p) => p.valid === true);\n        product_list = product_list.map((product, index) => {\n            let path = \"/mysales/\" + product.pk;\n            return (\n                <ListGroup.Item key={index}>\n                    <Row style={{ padding: 30 }}>\n                        <Col\n                            sm={{ span: 6, offset: 0 }}\n                            lg={{ span: 5, offset: 0 }}\n                            xs=\"12\"\n                        >\n                            <Link\n                                style={{\n                                    textDecoration: \"none\",\n                                    color: \"inherit\",\n                                }}\n                                key={index}\n                                to={path}\n                            >\n                                <img\n                                    style={{ maxWidth: \"100%\", height: \"auto\" }}\n                                    src={\n                                        product.base64_image_url\n                                            ? product.base64_image_url\n                                            : placeholder\n                                    }\n                                ></img>\n                            </Link>\n                        </Col>\n\n                        <Col sm=\"6\" lg={{ span: 5, offset: 1 }} xs=\"12\">\n                            <div style={{ paddingTop: 10 }}>\n                                <p\n                                    style={{\n                                        fontSize: \"1.5rem\",\n                                        fontWeight: \"bold\",\n                                    }}\n                                >\n                                    {product.name}\n                                </p>\n                                <p style={{ fontSize: \"1.3rem\" }}>\n                                    총 수량: {product.quantity}\n                                </p>\n                                <p style={{ fontSize: \"1.2rem\" }}>\n                                    가격: {setMoney(product.price)} ₩\n                                </p>\n                                <p style={{ fontSize: \"1.2rem\" }}>\n                                    등록 날짜: {setDate(product.created_at)}\n                                </p>\n                                <Link\n                                    style={{\n                                        textDecoration: \"none\",\n                                        color: \"inherit\",\n                                    }}\n                                    key={index}\n                                    to={path}\n                                >\n                                    <p\n                                        style={{\n                                            fontSize: \"1.3rem\",\n                                            color: \"green\",\n                                        }}\n                                    >\n                                        주문한 사람이 있는지 확인해주세요!\n                                    </p>\n                                </Link>\n                                <Button\n                                    variant=\"outline-light\"\n                                    style={{\n                                        fontSize: \"1rem\",\n                                        background: \"#e85255\",\n                                        fontSize: \"1.3rem\",\n                                    }}\n                                    onClick={(e) =>\n                                        onDeleteProduct(product.pk, e)\n                                    }\n                                >\n                                    상품 등록 취소\n                                </Button>\n                            </div>\n                        </Col>\n                    </Row>\n                </ListGroup.Item>\n            );\n        });\n        setProducts(product_list);\n    };\n\n    const onDeleteProduct = async (product_id, e) => {\n        setModalOpen(true);\n        setModalContents(\"상품 등록을 취소합니다\");\n        axios\n            .delete(`/apis/v1/product/${product_id}`)\n            .then((res) => {\n                setFlag(!flag);\n            })\n            .catch((e) => {\n                setModalOpen(true);\n                setModalContents(\"문제가 발생했습니다. 관리자에게 문의하세요.\");\n            });\n    };\n\n    useEffect(() => {\n        fetchOrders();\n    }, [userData.user_id, flag]);\n\n    return (\n        <div>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n\n            <Container>\n                <CategoryDirection tag1={\"내 상품 목록\"}></CategoryDirection>\n\n                <EmptyCheck\n                    text={\"등록한 상품이 없습니다\"}\n                    items={products}\n                ></EmptyCheck>\n            </Container>\n        </div>\n    );\n}\n\nexport default MySales;\n","/home/seung/projects/All-In-One-front/src/components/PurchaseList.js",["210","211","212","213","214","215","216","217","218"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ListGroup, Container, Row, Col } from \"react-bootstrap\";\nimport Title from \"./Title\";\nimport { useSelector } from \"react-redux\";\nimport placeholder from \"../assets/images/placeholder2.jpg\";\nimport good from \"../assets/images/good.png\";\nimport bad from \"../assets/images/bad.png\";\n\nimport EmptyCheck from \"./EmptyCheck\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport { setMoney, setDate } from \"./Convenient\";\nimport Modal from \"./Modal\";\nimport Rating from \"./Rating\";\n\nfunction PurchaseList({ history }) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [modalContents, setModalContents] = useState(\"\");\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    var products = [];\n    const [orders, setOrders] = useState([]);\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n    const [flag, setFlag] = useState(true);\n\n    const fetchUserInfo = async (userId, orderId) => {\n        let res = await axios.get(\"/apis/v1/user/\" + userId);\n        setModalOpen(true);\n        let data = res.data.payload;\n        setModalContents(\n            <Container>\n                <Rating user={data}></Rating>\n                <Row style={{ marginTop: 20 }}>\n                    <Col>이메일: {data.useremail}</Col>\n                </Row>\n                <Row style={{ marginTop: 20 }}>\n                    <Col>계정 생성일: {setDate(data.created_at)}</Col>\n                </Row>\n                <Row style={{ marginTop: 20 }}>\n                    <Col\n                        lg={{ span: 4, offset: 2 }}\n                        sm={{ span: 4, offset: 2 }}\n                        xs={{ span: 4, offset: 2 }}\n                    >\n                        <img\n                            style={{ width: 30, height: 30 }}\n                            src={good}\n                            onClick={() => evaluateSellerGood(userId, orderId)}\n                        ></img>\n                        <button\n                            style={{ background: \"white\", color: \"green\" }}\n                            onClick={() => evaluateSellerGood(userId, orderId)}\n                        >\n                            좋아요!\n                        </button>\n                    </Col>\n                    <Col lg={{ span: 4 }} sm={{ span: 4 }} xs={{ span: 4 }}>\n                        <img\n                            style={{ width: 30, height: 30 }}\n                            src={bad}\n                            onClick={() => evaluateSellerBad(userId, orderId)}\n                        ></img>\n                        <button\n                            style={{ background: \"white\", color: \"red\" }}\n                            onClick={() => evaluateSellerBad(userId, orderId)}\n                        >\n                            싫어요!\n                        </button>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    };\n\n    const evaluateSellerGood = async (userId, orderId) => {\n        await axios.get(`/apis/v1/ratings/${userId}/up`);\n        await axios.post(`/apis/v1/order/${orderId}`, { rating_check: true });\n\n        setModalOpen(false);\n        setFlag(!flag);\n    };\n    const evaluateSellerBad = async (userId, orderId) => {\n        await axios.get(`/apis/v1/ratings/${userId}/down`);\n        await axios.post(`/apis/v1/order/${orderId}`, { rating_check: true });\n        setModalOpen(false);\n        setFlag(!flag);\n    };\n\n    const fetchOrders = async () => {\n        let res = await axios.get(\"/apis/v1/order/\" + userData.user_id);\n        let tmp_order = res.data.payload.filter(\n            (order) => order.sales_stage == \"SO\"\n        );\n\n        let orderlist = tmp_order.map((order, index) => {\n            return (\n                <ListGroup.Item key={index}>\n                    <Row style={{ margin: 30 }}>\n                        <Col sm=\"6\" lg=\"5\" xs=\"12\">\n                            <img\n                                style={{\n                                    height: \"auto\",\n                                    maxWidth: \"100%\",\n                                    height: \"auto\",\n                                }}\n                                src={\n                                    order.base64_image_url\n                                        ? order.base64_image_url\n                                        : placeholder\n                                }\n                            ></img>\n                        </Col>\n                        <Col sm=\"6\" lg={{ span: 6, offset: 1 }} xs=\"12\">\n                            <div style={{ paddingTop: 10 }}>\n                                <p\n                                    style={{\n                                        fontSize: \"1.5rem\",\n                                        fontWeight: \"bold\",\n                                    }}\n                                >\n                                    {order.name}\n                                </p>\n                                <p style={{ fontSize: \"1.3rem\" }}>\n                                    구매량: {order.demand_quantity}\n                                </p>\n                                <p style={{ fontSize: \"1.3rem\" }}>\n                                    지불 금액: {setMoney(order.price)} ₩\n                                </p>\n                                <p style={{ fontSize: \"1.3rem\" }}>\n                                    주문 날짜: {setDate(order.created_at)}\n                                </p>\n                                {!order.rating_check ? (\n                                    <div>\n                                        <p\n                                            style={{\n                                                fontSize: \"1.3rem\",\n                                                color: \"blue\",\n                                            }}\n                                        >\n                                            판매자의 매너를 평가해볼까요?\n                                        </p>\n                                        <button\n                                            className=\"emptyButton\"\n                                            onClick={() =>\n                                                fetchUserInfo(\n                                                    order.seller_id,\n                                                    order.order_id\n                                                )\n                                            }\n                                            style={{\n                                                height: \"4rem\",\n                                                fontSize: \"1.3rem\",\n                                            }}\n                                        >\n                                            매너 평가하기\n                                        </button>\n                                    </div>\n                                ) : (\n                                    <div>\n                                        <p\n                                            style={{\n                                                fontSize: \"1.3rem\",\n                                                color: \"green\",\n                                            }}\n                                        >\n                                            매너 평가를 완료했습니다.\n                                        </p>\n                                    </div>\n                                )}\n                            </div>\n                        </Col>\n                    </Row>\n                </ListGroup.Item>\n            );\n        });\n\n        setOrders(orderlist);\n    };\n\n    useEffect(() => {\n        fetchOrders();\n    }, [userData.user_id, flag]);\n\n    return (\n        <div>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n\n            <Container>\n                <CategoryDirection tag1={\"구매 목록\"}></CategoryDirection>\n                <EmptyCheck\n                    text={\"구매한 상품이 없습니다\"}\n                    items={orders}\n                ></EmptyCheck>\n            </Container>\n        </div>\n    );\n}\n\nexport default PurchaseList;\n","/home/seung/projects/All-In-One-front/src/components/LikeList.js",["219","220","221","222","223","224","225"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ListGroup, Container, Row, Col, Button } from \"react-bootstrap\";\nimport Title from \"./Title\";\nimport { useSelector } from \"react-redux\";\nimport EmptyCheck from \"./EmptyCheck\";\nimport { Link } from \"react-router-dom\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport { setDate, setMoney } from \"./Convenient\";\n\nfunction Likes({ history }) {\n    const [carts, setCarts] = useState([]);\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n\n    const fetchCarts = async () => {\n        let res = await axios.get(\"/apis/v1/carts/users/\" + userData.user_id);\n        let cartList = res.data.payload;\n        let res_product = await axios.get(\"/apis/v1/product\");\n\n        let productList = res_product.data.payload;\n        cartList = cartList.map((cart, index) => {\n            console.log(productList);\n            const tmp_product = productList.find(\n                (product) => product.pk == cart.productId\n            );\n            if (!tmp_product) {\n                return;\n            }\n            let path = `/product/${tmp_product.pk}`;\n            return (\n                <div>\n                    <Link\n                        to={path}\n                        style={{ textDecoration: \"none\", color: \"inherit\" }}\n                    >\n                        <ListGroup.Item key={index}>\n                            <Row style={{ margin: 30 }}>\n                                <Col sm=\"6\" lg=\"6\" xs=\"12\">\n                                    <img\n                                        style={{\n                                            height: \"auto\",\n                                            maxWidth: \"100%\",\n                                            objectFit: \"cover\",\n                                        }}\n                                        src={tmp_product.base64_image_url}\n                                    ></img>\n                                </Col>\n                                <Col sm=\"6\" lg=\"6\" xs=\"12\">\n                                    <div style={{ marginLeft: 20 }}>\n                                        <p\n                                            style={{\n                                                fontSize: \"1.5rem\",\n                                                fontWeight: \"bold\",\n                                                marginLeft: 20,\n                                                paddingTop: 20,\n                                            }}\n                                        >\n                                            {tmp_product.name}\n                                        </p>\n                                        <p\n                                            style={{\n                                                fontSize: \"1.3rem\",\n                                                marginLeft: 20,\n                                            }}\n                                        >\n                                            남은 수량: {tmp_product.quantity}\n                                        </p>\n                                        <p\n                                            style={{\n                                                fontSize: \"1.3rem\",\n                                                marginLeft: 20,\n                                            }}\n                                        >\n                                            {setMoney(tmp_product.price)} ₩\n                                        </p>\n                                        <p\n                                            style={{\n                                                fontSize: \"1.3rem\",\n                                                marginLeft: 20,\n                                            }}\n                                        >\n                                            찜한 날짜: {setDate(cart.createdAt)}\n                                        </p>\n\n                                        <br />\n                                    </div>\n                                </Col>\n                            </Row>\n                        </ListGroup.Item>\n                    </Link>\n                </div>\n            );\n        });\n\n        setCarts(cartList);\n    };\n\n    useEffect(() => {\n        fetchCarts();\n    }, [userData.user_id]);\n\n    return (\n        <div>\n            <Container>\n                <CategoryDirection tag1={\"찜 목록\"}></CategoryDirection>\n\n                <EmptyCheck\n                    text={\"찜한 상품이 없습니다\"}\n                    items={carts ? carts : []}\n                ></EmptyCheck>\n            </Container>\n        </div>\n    );\n}\n\nexport default Likes;\n","/home/seung/projects/All-In-One-front/src/components/NotFound.js",[],"/home/seung/projects/All-In-One-front/src/components/MySalesDetail.js",["226","227","228","229","230","231","232","233","234","235","236","237","238"],"import React, { useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { ListGroup, Container, Row, Col, Card } from \"react-bootstrap\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport { useSelector } from \"react-redux\";\nimport arrow from \"../assets/images/arrow.png\";\nimport EmptyBox from \"../assets/images/box.png\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport { setMoney, setDate } from \"./Convenient\";\nimport Rating from \"./Rating\";\nimport Modal from \"./Modal\";\n\nfunction MySalesDetail({ history, match }) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [modalContents, setModalContents] = useState(\"\");\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    const [btnValue, setBtnValue] = useState(\"\");\n    const [orders, setOrders] = useState([]);\n    const [images, setImages] = useState([]);\n    const [product, setProduct] = useState({});\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n\n    const fetchProduct = async () => {\n        let res = await axios.get(\"/apis/v1/product/\" + match.params.number);\n\n        setProduct({\n            ...res.data.payload,\n            product_id: match.params.number,\n        });\n        let image_list = await res.data.payload.image.map((img) => (\n            <div>\n                <br />\n                <img\n                    style={{\n                        maxWidth: \"100%\",\n                        height: \"auto\",\n                    }}\n                    src={img}\n                ></img>\n                <br />\n                <br />\n            </div>\n        ));\n        setImages(image_list);\n    };\n\n    const fetchUserInfo = async (userId) => {\n        let res = await axios.get(\"/apis/v1/user/\" + userId);\n        setModalOpen(true);\n        let data = res.data.payload;\n        setModalContents(\n            <Container>\n                <Rating user={data}></Rating>\n                <Row style={{ marginTop: 20 }}>\n                    <Col>이메일: {data.useremail}</Col>\n                </Row>\n                <Row style={{ marginTop: 20 }}>\n                    <Col>계정 생성일: {setDate(data.created_at)}</Col>\n                </Row>\n            </Container>\n        );\n    };\n\n    const fetchOrders = async () => {\n        let res = await axios.get(\"/apis/v1/order/sale/\" + match.params.number);\n        let tmp_orders = res.data.payload.filter(\n            (order) => order.sales_stage != \"SO\"\n        );\n\n        console.log(tmp_orders);\n        let orderlist = tmp_orders.map((order, index) => {\n            let sale_status = \"\";\n            if (order.sales_stage == \"S\") sale_status = \"판매 중\";\n            else if (order.sales_stage == \"SR\") sale_status = \"예약 중\";\n            else sale_status = \"판매 완료\";\n\n            return (\n                <ListGroup.Item key={index}>\n                    <Row style={{ margin: 20 }}>\n                        <Col>\n                            <p style={{ fontSize: \"1.5rem\" }}>\n                                주문자 선호 장소: {order.address}\n                            </p>\n                            <p style={{ fontSize: \"1.5rem\" }}>\n                                연락처: {order.phone_number}\n                            </p>\n                            <p style={{ fontSize: \"1.5rem\" }}>\n                                주문량: {order.demand_quantity}\n                            </p>\n                            <p style={{ fontSize: \"1.5rem\" }}>\n                                가격: {setMoney(order.price)} 원\n                            </p>\n                            <p style={{ fontSize: \"1.5rem\" }}>\n                                주문 일짜: {setDate(order.created_at)}\n                            </p>\n                        </Col>\n                        <Col>\n                            <Row>\n                                <Row>\n                                    <Col>\n                                        <button\n                                            className=\"emptyButton\"\n                                            onClick={() =>\n                                                fetchUserInfo(order.buyer_id)\n                                            }\n                                            style={{\n                                                height: \"4rem\",\n                                                fontSize: \"1.3rem\",\n                                            }}\n                                        >\n                                            주문자 정보 보기\n                                        </button>\n                                    </Col>\n                                </Row>\n                                <Row style={{ marginTop: 20 }}>\n                                    <Col lg=\"3\" sm=\"4\" xs=\"12\">\n                                        <div className=\"dropdown\">\n                                            <button\n                                                style={{\n                                                    height: \"4rem\",\n                                                    padding: 10,\n                                                    width: 100,\n                                                }}\n                                                className=\"dropdown-button \"\n                                            >\n                                                {btnValue\n                                                    ? btnValue\n                                                    : sale_status}\n                                            </button>\n                                            <div class=\"dropdown-content\">\n                                                <a\n                                                    name=\"예약 중\"\n                                                    onClick={(e) => {\n                                                        onClickHandler(\n                                                            {\n                                                                order,\n                                                                product_id:\n                                                                    match.params\n                                                                        .number,\n                                                            },\n                                                            e\n                                                        );\n                                                    }}\n                                                >\n                                                    예약 중\n                                                </a>\n                                                <a\n                                                    name=\"판매 완료\"\n                                                    onClick={(e) => {\n                                                        onClickHandler(\n                                                            {\n                                                                order,\n                                                                product_id:\n                                                                    match.params\n                                                                        .number,\n                                                            },\n                                                            e\n                                                        );\n                                                    }}\n                                                >\n                                                    판매 완료\n                                                </a>\n                                                <a\n                                                    name=\"거래 취소\"\n                                                    onClick={(e) => {\n                                                        onClickHandler(\n                                                            {\n                                                                order,\n                                                                product_id:\n                                                                    match.params\n                                                                        .number,\n                                                            },\n                                                            e\n                                                        );\n                                                    }}\n                                                >\n                                                    거래 취소\n                                                </a>\n                                            </div>\n                                        </div>\n                                    </Col>\n                                    <Col lg=\"6\" sm=\"12\" xs=\"12\">\n                                        <p\n                                            style={{\n                                                fontSize: \"1.2rem\",\n                                                padding: 10,\n                                                color: \"red\",\n                                            }}\n                                        >\n                                            주문 상태를 조회해주세요!\n                                        </p>\n                                    </Col>\n                                </Row>\n                            </Row>\n                        </Col>\n                    </Row>\n                </ListGroup.Item>\n            );\n        });\n        setOrders(orderlist);\n    };\n\n    useEffect(() => {\n        fetchProduct();\n        fetchOrders();\n    }, [userData.user_id, btnValue]);\n\n    const onClickHandler = async (orderData, e) => {\n        const { product_id, order } = orderData;\n\n        if (e.target.name === \"판매 완료\") {\n            let data = {\n                sales_stage: \"SO\",\n                product_id,\n                demand_quantity: order.demand_quantity,\n                total_quantity: order.total_quantity,\n            };\n\n            axios\n                .post(\"/apis/v1/order/\" + order.order_id, data)\n                .then((res) => {\n                    setModalOpen(true);\n                    setModalContents(\"거래가 완료되었습니다\");\n                })\n                .catch((e) => {\n                    setModalOpen(true);\n                    setModalContents(\"Error: 관리자에게 문의하세요\");\n                });\n        } else if (e.target.name === \"예약 중\") {\n            let data = { sales_stage: \"SR\" };\n            axios\n                .post(\"/apis/v1/order/\" + order.order_id, data)\n                .then((res) => {\n                    setModalOpen(true);\n                    setModalContents(\"거래가 예약되었습니다\");\n                })\n                .catch((e) => {\n                    setModalOpen(true);\n                    setModalContents(\"Error: 관리자에게 문의하세요\");\n                });\n        } else {\n            axios\n                .delete(\"/apis/v1/order/\" + order.order_id)\n                .then((res) => {\n                    setModalOpen(true);\n                    setModalContents(\"주문이 취소되었습니다.\");\n                })\n                .catch((e) => {\n                    setModalOpen(true);\n                    setModalContents(\"Error: 관리자에게 문의하세요\");\n                });\n        }\n        setBtnValue(e.target.name);\n    };\n\n    return (\n        <div>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n            <Container>\n                <CategoryDirection\n                    tag1={\"내 상품 목록\"}\n                    tag2={product.name}\n                ></CategoryDirection>\n\n                <Accordion style={{ marginTop: 100 }}>\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                            <p style={{ fontSize: \"1.7rem\", margin: 15 }}>\n                                내 상품 확인하기\n                            </p>\n                        </Accordion.Toggle>\n\n                        <Accordion.Collapse eventKey=\"0\">\n                            <Card.Body>\n                                <Row className=\"justify-content-md-center\">\n                                    <Col>\n                                        <ListGroup>\n                                            <ListGroup.Item\n                                                style={{ fontSize: \"1.3rem\" }}\n                                            >\n                                                카테고리: {product.category}\n                                            </ListGroup.Item>\n                                            <ListGroup.Item\n                                                style={{ fontSize: \"1.3rem\" }}\n                                            >\n                                                상품명: {product.name}\n                                            </ListGroup.Item>\n                                            <ListGroup.Item\n                                                style={{ fontSize: \"1.3rem\" }}\n                                            >\n                                                가격: {setMoney(product.price)}{\" \"}\n                                                원\n                                            </ListGroup.Item>\n                                            <ListGroup.Item\n                                                style={{ fontSize: \"1.3rem\" }}\n                                            >\n                                                수량: {product.quantity}\n                                            </ListGroup.Item>\n                                            <ListGroup.Item\n                                                style={{ fontSize: \"1.3rem\" }}\n                                            >\n                                                설명: {product.description}\n                                            </ListGroup.Item>\n                                            <ListGroup.Item\n                                                style={{ fontSize: \"1.3rem\" }}\n                                            >\n                                                등록일:{\" \"}\n                                                {setDate(product.created_at)}\n                                            </ListGroup.Item>\n\n                                            <ListGroup.Item>\n                                                {images}\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                        <br />\n                                    </Col>\n                                </Row>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                </Accordion>\n\n                <ListGroup style={{ marginTop: 20 }}>\n                    {orders.length == 0 ? (\n                        <div>\n                            <br />\n                            <p style={{ fontSize: \"1.7rem\" }}>\n                                아직 주문한 사람이 없네요...\n                            </p>\n                            <img\n                                style={{ maxWidth: \"50%\", height: \"auto\" }}\n                                src={EmptyBox}\n                            ></img>\n                        </div>\n                    ) : (\n                        <div>\n                            <br />\n                            <p\n                                className=\"primaryColor\"\n                                style={{ fontSize: \"1.8rem\", margin: 20 }}\n                            >\n                                주문 요청이 들어왔어요!\n                            </p>\n                            {orders}\n                        </div>\n                    )}\n                </ListGroup>\n            </Container>\n        </div>\n    );\n}\n\nexport default MySalesDetail;\n","/home/seung/projects/All-In-One-front/src/modules/user.js",[],"/home/seung/projects/All-In-One-front/src/modules/category.js",[],"/home/seung/projects/All-In-One-front/src/components/Modal.js",[],"/home/seung/projects/All-In-One-front/src/components/Loading.js",["239","240"],"import react from \"react\";\nimport DisplayProducts from \"./MakeCard\";\nimport { Container, Spinner, Row, Col } from \"react-bootstrap\";\nconst Loading = ({ products }) => {\n    if (products.length == 0)\n        return (\n            <Container>\n                <Row>\n                    <Col\n                        lg={{ span: 2, offset: 5 }}\n                        xs={{ span: 3, offset: 5 }}\n                        md={{ span: 6, offset: 5 }}\n                    >\n                        <Spinner\n                            style={{\n                                marginTop: 100,\n                                marginBottom: 100,\n                                width: 50,\n                                height: 50,\n                            }}\n                            animation=\"border\"\n                            variant=\"primary\"\n                        ></Spinner>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    return (\n        <div>\n            <div style={{ marginTop: 30 }} />\n            <DisplayProducts products={products} />\n        </div>\n    );\n};\n\nexport default Loading;\n","/home/seung/projects/All-In-One-front/src/components/Title.js",[],"/home/seung/projects/All-In-One-front/src/components/Rating.js",["241","242","243"],"import { Col, Row } from \"react-bootstrap\";\nimport ther from \"../assets/images/ther.png\";\nimport userImage from \"../assets/images/user2.png\";\nfunction Rating({ user, area }) {\n    if (!user) {\n        return;\n    }\n\n    let { username, temperature, celcius } = user;\n    let tmp = <div></div>;\n    let temp_type;\n\n    if (celcius) {\n        temp_type = temperature + \"℃\";\n    } else {\n        temp_type = temperature + \"°F\";\n    }\n\n    if (!temperature) {\n        tmp = (\n            <div style={{ padding: 10, fontSize: \"1.2rem\", color: \"black\" }}>\n                {\"36.5℃\"}\n            </div>\n        );\n    } else if (temperature > 36.5) {\n        tmp = (\n            <div\n                style={{\n                    padding: 15,\n                    fontSize: \"1.3rem\",\n                    color: \"green\",\n                    fontWeight: \"bold\",\n                }}\n            >\n                {temp_type}\n            </div>\n        );\n    } else if (temperature == 36.5) {\n        tmp = (\n            <div\n                style={{ padding: 15, fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n            >\n                {temp_type}\n            </div>\n        );\n    } else {\n        tmp = <p style={{ fontSize: \"1.2rem\", color: \"red\" }}>{temp_type}</p>;\n    }\n    return (\n        <Row style={{ marginTop: 20, paddingTop: 20 }}>\n            <Col xs=\"3\" sm=\"3\" lg=\"2\">\n                <img\n                    style={{ maxWidth: \"100%\", height: \"auto\" }}\n                    src={userImage}\n                />\n            </Col>\n\n            <Col xs=\"3\" sm=\"4\" lg=\"4\">\n                {area ? (\n                    <div>\n                        <Row>{username}</Row>\n                        <Row style={{ padding: 1 }}>{area ? area : \"\"}</Row>\n                    </div>\n                ) : (\n                    <div>\n                        <Row>\n                            <p style={{ fontSize: \"1.5rem\", padding: 10 }}>\n                                {username}\n                            </p>\n                        </Row>\n                    </div>\n                )}\n            </Col>\n            <Col xs=\"6\" sm=\"5\" lg=\"6\">\n                <Row>\n                    <Col\n                        xs=\"5\"\n                        sm=\"6\"\n                        lg={{ span: 3, offset: 4 }}\n                        style={{ paddingTop: 0 }}\n                    >\n                        {tmp}\n                    </Col>\n                    <Col xs=\"5\" sm=\"6\" lg=\"4\">\n                        <img\n                            style={{ maxWidth: \"100%\", height: \"auto\" }}\n                            src={ther}\n                        />\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    );\n}\n\nexport default Rating;\n","/home/seung/projects/All-In-One-front/src/components/Convenient.js",[],"/home/seung/projects/All-In-One-front/src/components/EmptyCheck.js",["244","245","246","247"],"import React from \"react\";\nimport { Row, Col, ListGroup } from \"react-bootstrap\";\nimport EmptyBox from \"../assets/images/box.png\";\nimport MakeCard from \"./MakeCard\";\nconst EmptyCheck = ({ text, items }) => {\n    if (items.length == 0) {\n        return (\n            <Row>\n                <Col\n                    lg={{ span: 6, offset: 3 }}\n                    sm={{ span: 9, offset: 1 }}\n                    xs={{ span: 12 }}\n                >\n                    <p style={{ fontSize: \"2rem\", marginTop: 50 }}>{text}</p>\n                    <img\n                        style={{ margin: 100, maxWidth: \"50%\", height: \"auto\" }}\n                        src={EmptyBox}\n                    ></img>\n                </Col>\n            </Row>\n        );\n    } else {\n        return <ListGroup>{items}</ListGroup>;\n    }\n};\n\nexport function EmptyCheckProductByCategory({ text, items }) {\n    if (items.length == 0) {\n        return (\n            <Row>\n                <Col lg={{ span: 6, offset: 3 }} sm={{ span: 12, offset: 0 }}>\n                    <p style={{ fontSize: \"2rem\", marginTop: 50 }}>{text}</p>\n                    <img\n                        style={{ margin: 100, maxWidth: \"50%\", height: \"auto\" }}\n                        src={EmptyBox}\n                    ></img>\n                </Col>\n            </Row>\n        );\n    } else {\n        return <MakeCard products={items}></MakeCard>;\n    }\n}\n\nexport default EmptyCheck;\n","/home/seung/projects/All-In-One-front/src/components/AreaButton.js",[],"/home/seung/projects/All-In-One-front/src/components/MakeCard.js",[],{"ruleId":"248","severity":1,"message":"249","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":26},{"ruleId":"248","severity":1,"message":"252","line":2,"column":10,"nodeType":"250","messageId":"251","endLine":2,"endColumn":21},{"ruleId":"248","severity":1,"message":"253","line":6,"column":21,"nodeType":"250","messageId":"251","endLine":6,"endColumn":27},{"ruleId":"248","severity":1,"message":"254","line":6,"column":29,"nodeType":"250","messageId":"251","endLine":6,"endColumn":36},{"ruleId":"255","severity":1,"message":"256","line":40,"column":8,"nodeType":"257","endLine":40,"endColumn":10,"suggestions":"258"},{"ruleId":"248","severity":1,"message":"259","line":2,"column":10,"nodeType":"250","messageId":"251","endLine":2,"endColumn":14},{"ruleId":"248","severity":1,"message":"252","line":4,"column":10,"nodeType":"250","messageId":"251","endLine":4,"endColumn":21},{"ruleId":"248","severity":1,"message":"260","line":5,"column":27,"nodeType":"250","messageId":"251","endLine":5,"endColumn":33},{"ruleId":"248","severity":1,"message":"252","line":3,"column":10,"nodeType":"250","messageId":"251","endLine":3,"endColumn":21},{"ruleId":"248","severity":1,"message":"261","line":3,"column":23,"nodeType":"250","messageId":"251","endLine":3,"endColumn":34},{"ruleId":"248","severity":1,"message":"260","line":4,"column":27,"nodeType":"250","messageId":"251","endLine":4,"endColumn":33},{"ruleId":"248","severity":1,"message":"262","line":5,"column":8,"nodeType":"250","messageId":"251","endLine":5,"endColumn":14},{"ruleId":"248","severity":1,"message":"263","line":6,"column":8,"nodeType":"250","messageId":"251","endLine":6,"endColumn":13},{"ruleId":"264","severity":1,"message":"265","line":17,"column":40,"nodeType":"266","messageId":"267","endLine":17,"endColumn":42},{"ruleId":"255","severity":1,"message":"268","line":30,"column":8,"nodeType":"257","endLine":30,"endColumn":29,"suggestions":"269"},{"ruleId":"264","severity":1,"message":"265","line":37,"column":57,"nodeType":"266","messageId":"267","endLine":37,"endColumn":59},{"ruleId":"248","severity":1,"message":"261","line":2,"column":23,"nodeType":"250","messageId":"251","endLine":2,"endColumn":34},{"ruleId":"248","severity":1,"message":"270","line":18,"column":13,"nodeType":"250","messageId":"251","endLine":18,"endColumn":23},{"ruleId":"248","severity":1,"message":"271","line":62,"column":17,"nodeType":"250","messageId":"251","endLine":62,"endColumn":21},{"ruleId":"264","severity":1,"message":"265","line":86,"column":18,"nodeType":"266","messageId":"267","endLine":86,"endColumn":20},{"ruleId":"264","severity":1,"message":"265","line":88,"column":18,"nodeType":"266","messageId":"267","endLine":88,"endColumn":20},{"ruleId":"248","severity":1,"message":"253","line":3,"column":21,"nodeType":"250","messageId":"251","endLine":3,"endColumn":27},{"ruleId":"248","severity":1,"message":"272","line":3,"column":34,"nodeType":"250","messageId":"251","endLine":3,"endColumn":45},{"ruleId":"248","severity":1,"message":"270","line":36,"column":13,"nodeType":"250","messageId":"251","endLine":36,"endColumn":23},{"ruleId":"248","severity":1,"message":"260","line":4,"column":5,"nodeType":"250","messageId":"251","endLine":4,"endColumn":11},{"ruleId":"248","severity":1,"message":"273","line":17,"column":20,"nodeType":"250","messageId":"251","endLine":17,"endColumn":27},{"ruleId":"255","severity":1,"message":"274","line":65,"column":8,"nodeType":"257","endLine":65,"endColumn":43,"suggestions":"275"},{"ruleId":"264","severity":1,"message":"265","line":72,"column":37,"nodeType":"266","messageId":"267","endLine":72,"endColumn":39},{"ruleId":"264","severity":1,"message":"265","line":110,"column":27,"nodeType":"266","messageId":"267","endLine":110,"endColumn":29},{"ruleId":"276","severity":1,"message":"277","line":116,"column":17,"nodeType":"278","endLine":121,"endColumn":18},{"ruleId":"276","severity":1,"message":"277","line":140,"column":25,"nodeType":"278","endLine":146,"endColumn":26},{"ruleId":"276","severity":1,"message":"277","line":167,"column":33,"nodeType":"278","endLine":173,"endColumn":34},{"ruleId":"248","severity":1,"message":"260","line":3,"column":42,"nodeType":"250","messageId":"251","endLine":3,"endColumn":48},{"ruleId":"248","severity":1,"message":"263","line":4,"column":8,"nodeType":"250","messageId":"251","endLine":4,"endColumn":13},{"ruleId":"248","severity":1,"message":"270","line":20,"column":13,"nodeType":"250","messageId":"251","endLine":20,"endColumn":23},{"ruleId":"264","severity":1,"message":"279","line":29,"column":46,"nodeType":"266","messageId":"267","endLine":29,"endColumn":48},{"ruleId":"276","severity":1,"message":"277","line":36,"column":33,"nodeType":"278","endLine":47,"endColumn":34},{"ruleId":"264","severity":1,"message":"265","line":70,"column":60,"nodeType":"266","messageId":"267","endLine":70,"endColumn":62},{"ruleId":"255","severity":1,"message":"280","line":140,"column":8,"nodeType":"257","endLine":140,"endColumn":32,"suggestions":"281"},{"ruleId":"248","severity":1,"message":"282","line":1,"column":10,"nodeType":"250","messageId":"251","endLine":1,"endColumn":19},{"ruleId":"248","severity":1,"message":"260","line":1,"column":32,"nodeType":"250","messageId":"251","endLine":1,"endColumn":38},{"ruleId":"248","severity":1,"message":"249","line":3,"column":10,"nodeType":"250","messageId":"251","endLine":3,"endColumn":19},{"ruleId":"248","severity":1,"message":"273","line":6,"column":20,"nodeType":"250","messageId":"251","endLine":6,"endColumn":27},{"ruleId":"248","severity":1,"message":"260","line":2,"column":37,"nodeType":"250","messageId":"251","endLine":2,"endColumn":43},{"ruleId":"248","severity":1,"message":"263","line":3,"column":8,"nodeType":"250","messageId":"251","endLine":3,"endColumn":13},{"ruleId":"248","severity":1,"message":"270","line":11,"column":13,"nodeType":"250","messageId":"251","endLine":11,"endColumn":23},{"ruleId":"248","severity":1,"message":"283","line":6,"column":5,"nodeType":"250","messageId":"251","endLine":6,"endColumn":8},{"ruleId":"248","severity":1,"message":"284","line":9,"column":5,"nodeType":"250","messageId":"251","endLine":9,"endColumn":16},{"ruleId":"248","severity":1,"message":"260","line":10,"column":5,"nodeType":"250","messageId":"251","endLine":10,"endColumn":11},{"ruleId":"248","severity":1,"message":"285","line":11,"column":5,"nodeType":"250","messageId":"251","endLine":11,"endColumn":15},{"ruleId":"276","severity":1,"message":"277","line":34,"column":33,"nodeType":"278","endLine":34,"endColumn":73},{"ruleId":"248","severity":1,"message":"263","line":4,"column":8,"nodeType":"250","messageId":"251","endLine":4,"endColumn":13},{"ruleId":"248","severity":1,"message":"270","line":22,"column":13,"nodeType":"250","messageId":"251","endLine":22,"endColumn":23},{"ruleId":"276","severity":1,"message":"277","line":50,"column":33,"nodeType":"278","endLine":57,"endColumn":34},{"ruleId":"286","severity":1,"message":"287","line":102,"column":41,"nodeType":"288","messageId":"267","endLine":102,"endColumn":49},{"ruleId":"255","severity":1,"message":"280","line":135,"column":8,"nodeType":"257","endLine":135,"endColumn":32,"suggestions":"289"},{"ruleId":"248","severity":1,"message":"263","line":4,"column":8,"nodeType":"250","messageId":"251","endLine":4,"endColumn":13},{"ruleId":"248","severity":1,"message":"290","line":22,"column":9,"nodeType":"250","messageId":"251","endLine":22,"endColumn":17},{"ruleId":"248","severity":1,"message":"270","line":24,"column":13,"nodeType":"250","messageId":"251","endLine":24,"endColumn":23},{"ruleId":"276","severity":1,"message":"277","line":49,"column":25,"nodeType":"278","endLine":53,"endColumn":26},{"ruleId":"276","severity":1,"message":"277","line":62,"column":25,"nodeType":"278","endLine":66,"endColumn":26},{"ruleId":"264","severity":1,"message":"265","line":96,"column":42,"nodeType":"266","messageId":"267","endLine":96,"endColumn":44},{"ruleId":"276","severity":1,"message":"277","line":104,"column":29,"nodeType":"278","endLine":115,"endColumn":30},{"ruleId":"286","severity":1,"message":"291","line":108,"column":37,"nodeType":"288","messageId":"267","endLine":108,"endColumn":43},{"ruleId":"255","severity":1,"message":"280","line":186,"column":8,"nodeType":"257","endLine":186,"endColumn":32,"suggestions":"292"},{"ruleId":"248","severity":1,"message":"260","line":3,"column":42,"nodeType":"250","messageId":"251","endLine":3,"endColumn":48},{"ruleId":"248","severity":1,"message":"263","line":4,"column":8,"nodeType":"250","messageId":"251","endLine":4,"endColumn":13},{"ruleId":"248","severity":1,"message":"270","line":13,"column":13,"nodeType":"250","messageId":"251","endLine":13,"endColumn":23},{"ruleId":"264","severity":1,"message":"265","line":27,"column":41,"nodeType":"266","messageId":"267","endLine":27,"endColumn":43},{"ruleId":"293","severity":1,"message":"294","line":30,"column":17,"nodeType":"295","messageId":"296","endLine":30,"endColumn":24},{"ruleId":"276","severity":1,"message":"277","line":42,"column":37,"nodeType":"278","endLine":49,"endColumn":38},{"ruleId":"255","severity":1,"message":"297","line":103,"column":8,"nodeType":"257","endLine":103,"endColumn":26,"suggestions":"298"},{"ruleId":"248","severity":1,"message":"299","line":1,"column":38,"nodeType":"250","messageId":"251","endLine":1,"endColumn":45},{"ruleId":"248","severity":1,"message":"300","line":6,"column":8,"nodeType":"250","messageId":"251","endLine":6,"endColumn":13},{"ruleId":"248","severity":1,"message":"270","line":23,"column":13,"nodeType":"250","messageId":"251","endLine":23,"endColumn":23},{"ruleId":"276","severity":1,"message":"277","line":38,"column":17,"nodeType":"278","endLine":44,"endColumn":18},{"ruleId":"264","severity":1,"message":"279","line":72,"column":42,"nodeType":"266","messageId":"267","endLine":72,"endColumn":44},{"ruleId":"264","severity":1,"message":"265","line":78,"column":35,"nodeType":"266","messageId":"267","endLine":78,"endColumn":37},{"ruleId":"264","severity":1,"message":"265","line":79,"column":40,"nodeType":"266","messageId":"267","endLine":79,"endColumn":42},{"ruleId":"301","severity":1,"message":"302","line":136,"column":49,"nodeType":"278","endLine":149,"endColumn":50},{"ruleId":"301","severity":1,"message":"302","line":152,"column":49,"nodeType":"278","endLine":165,"endColumn":50},{"ruleId":"301","severity":1,"message":"302","line":168,"column":49,"nodeType":"278","endLine":181,"endColumn":50},{"ruleId":"255","severity":1,"message":"303","line":211,"column":8,"nodeType":"257","endLine":211,"endColumn":36,"suggestions":"304"},{"ruleId":"264","severity":1,"message":"265","line":331,"column":36,"nodeType":"266","messageId":"267","endLine":331,"endColumn":38},{"ruleId":"276","severity":1,"message":"277","line":337,"column":29,"nodeType":"278","endLine":340,"endColumn":30},{"ruleId":"248","severity":1,"message":"305","line":1,"column":8,"nodeType":"250","messageId":"251","endLine":1,"endColumn":13},{"ruleId":"264","severity":1,"message":"265","line":5,"column":25,"nodeType":"266","messageId":"267","endLine":5,"endColumn":27},{"ruleId":"264","severity":1,"message":"265","line":38,"column":28,"nodeType":"266","messageId":"267","endLine":38,"endColumn":30},{"ruleId":"276","severity":1,"message":"277","line":52,"column":17,"nodeType":"278","endLine":55,"endColumn":19},{"ruleId":"276","severity":1,"message":"277","line":85,"column":25,"nodeType":"278","endLine":88,"endColumn":27},{"ruleId":"264","severity":1,"message":"265","line":6,"column":22,"nodeType":"266","messageId":"267","endLine":6,"endColumn":24},{"ruleId":"276","severity":1,"message":"277","line":15,"column":21,"nodeType":"278","endLine":18,"endColumn":22},{"ruleId":"264","severity":1,"message":"265","line":28,"column":22,"nodeType":"266","messageId":"267","endLine":28,"endColumn":24},{"ruleId":"276","severity":1,"message":"277","line":33,"column":21,"nodeType":"278","endLine":36,"endColumn":22},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'Navbar' is defined but never used.","'Spinner' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCategory'. Either include it or remove the dependency array.","ArrayExpression",["306"],"'Link' is defined but never used.","'Button' is defined but never used.","'useDispatch' is defined but never used.","'Banner' is defined but never used.","'Title' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array.",["307"],"'isLoggedIn' is assigned a value but never used.","'name' is assigned a value but never used.","'NavDropdown' is defined but never used.","'setDate' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchProduct'. Either include it or remove the dependency array.",["308"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'fetchOrders'. Either include it or remove the dependency array.",["309"],"'ListGroup' is defined but never used.","'Nav' is defined but never used.","'FormControl' is defined but never used.","'InputGroup' is defined but never used.","no-dupe-keys","Duplicate key 'fontSize'.","ObjectExpression",["310"],"'products' is assigned a value but never used.","Duplicate key 'height'.",["311"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","React Hook useEffect has a missing dependency: 'fetchCarts'. Either include it or remove the dependency array.",["312"],"'useMemo' is defined but never used.","'arrow' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'fetchOrders' and 'fetchProduct'. Either include them or remove the dependency array.",["313"],"'react' is defined but never used.",{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"320","fix":"322"},{"desc":"320","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},"Update the dependencies array to be: [fetchCategory]",{"range":"328","text":"329"},"Update the dependencies array to be: [fetchProducts, match.params.number]",{"range":"330","text":"331"},"Update the dependencies array to be: [match.params.number, like.checked, fetchProduct]",{"range":"332","text":"333"},"Update the dependencies array to be: [userData.user_id, flag, fetchOrders]",{"range":"334","text":"335"},{"range":"336","text":"335"},{"range":"337","text":"335"},"Update the dependencies array to be: [fetchCarts, userData.user_id]",{"range":"338","text":"339"},"Update the dependencies array to be: [userData.user_id, btnValue, fetchProduct, fetchOrders]",{"range":"340","text":"341"},[1225,1227],"[fetchCategory]",[969,990],"[fetchProducts, match.params.number]",[2041,2076],"[match.params.number, like.checked, fetchProduct]",[6831,6855],"[userData.user_id, flag, fetchOrders]",[5582,5606],[7879,7903],[4467,4485],"[fetchCarts, userData.user_id]",[9835,9863],"[userData.user_id, btnValue, fetchProduct, fetchOrders]"]