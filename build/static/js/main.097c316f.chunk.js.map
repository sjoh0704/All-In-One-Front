{"version":3,"sources":["modules/user.js","components/CategoryBanner.js","components/Modal.js","components/Login.js","components/Logout.js","assets/images/bucket.png","components/Banner.js","components/Register.js","modules/category.js","assets/images/placeholder2.jpg","components/Convenient.js","components/MakeCard.js","components/Loading.js","components/Home.js","components/Move.js","components/AreaButton.js","components/ProductRegister.js","assets/images/box.png","components/EmptyCheck.js","components/ProductByCategory.js","components/UserBanner.js","assets/images/heart.png","assets/images/heart_pressed.png","assets/images/ther.png","assets/images/user2.png","components/Rating.js","components/ProductDetail.js","components/OrderList.js","components/PurchasePage.js","components/Profile.js","components/MySales.js","assets/images/good.png","assets/images/bad.png","components/PurchaseList.js","components/MySalesDetail.js","components/LikeList.js","components/NotFound.js","App.js","reportWebVitals.js","modules/index.js","index.js"],"names":["LOGIN_USER","LOGOUT_USER","loginAction","requestData","type","payload","logoutAction","initialState","isLoggedIn","user","state","action","CategoryDirection","tag1","tag2","tag3","tag4","tag5","expression","tags","split","last","length","substring","style","marginTop","marginBottom","fontSize","to","textDecoration","color","fontWeight","CategoryBanner","useSelector","display_category","kind","category","map","k","index","path","pk","Col","lg","sm","xs","Nav","Item","Link","href","padding","background","paddingTop","paddingBottom","variant","defaultActiveKey","Container","Row","Modal","props","open","close","btnName","customBtn","className","onClick","children","Login","history","useState","modalOpen","setModalOpen","modalContents","setModalContents","dispatch","useDispatch","username","password","userData","setUserData","onChangeHandler","e","target","name","value","Form","onSubmit","preventDefault","body","axios","post","then","response","replace","data","catch","Group","as","controlId","span","offset","Label","margin","Control","size","onChange","placeholder","fontFamily","height","Logout","get","res","Banner","Navbar","Brand","src","bucket","width","id","Register","email","phone_number","SET_CATEGORY","setDate","time","date","tmp","console","log","hour","min","setMoney","amount","toString","MakeCard","products","filter","product","quantity","bg","Card","border","Img","objectFit","base64_image_url","Body","Title","Text","price","Loading","md","Spinner","animation","Home","Setproducts","fetchProducts","a","product_list","p","valid","fetchCategory","category_list","fields","useEffect","ControlledCarousel","setIndex","Carousel","activeIndex","onSelect","selectedIndex","alt","minWidth","Caption","Move","AreaButton","area","class","autofocus","label","ProductRegister","setArea","images","setImages","displayCategory","description","setProduct","column","rows","multiple","imageList","addUpdateIndex","maxNumber","dataURLKey","onError","errors","files","alert","onImageUpload","onImageUpdate","onImageRemove","dragProps","isDragging","Button","image","category_id","findIndex","image_list","img","data_url","undefined","seller_id","user_id","EmptyCheckProductByCategory","text","items","maxWidth","EmptyBox","EmptyCheck","ListGroup","ProductByCategory","match","setProducts","params","number","filtered_product_list","UserBanner","Rating","temp_type","temperature","celcius","userImage","ther","ProductDetail","setAmount","checked","like","setLike","seller","setSeller","fetchProduct","product_id","res_seller","buyer_id","parseInt","res_likes","onClickCart","delete","_id","marginLeft","HeartImg","EmptyHeartImg","pathname","demand_amount","ListGroupItem","slice","displayImages","OrderList","flag","setFlag","orders","setOrders","fetchOrders","orderlist","order","sales_stage","demand_quantity","created_at","connectSeller","onDeleteOrder","order_id","PurchasePage","location","address","email_address","purchaseData","setPurchaseData","orderProduct","plaintext","readOnly","defaultValue","disabled","Profile","useremail","setUser","onClickEditHandler","onClickDeleteHandler","MySales","onDeleteProduct","PurchaseList","fetchUserInfo","userId","orderId","good","evaluateSellerGood","bad","evaluateSellerBad","rating_check","tmp_order","MySalesDetail","btnValue","setBtnValue","tmp_orders","sale_status","onClickHandler","orderData","total_quantity","Accordion","Toggle","Header","eventKey","Collapse","Likes","carts","setCarts","fetchCarts","cartList","res_product","productList","cart","tmp_product","find","productId","createdAt","NotFound","fluid","App","Fragment","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","persistConfig","key","storage","rootReducer","combineReducers","persistedReducer","persistReducer","store","createStore","composeWithDevTools","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.097c316f.chunk.js","sourcesContent":["const LOGIN_USER = 'LOGIN_USER'; \nconst LOGOUT_USER = 'LOGOUT_USER';\n\n\nexport const loginAction = (requestData) => {\n    return {\n      type: LOGIN_USER,\n      payload: requestData,\n    };\n  };\n  \n  export const logoutAction = () => {\n\n    return {\n      type: LOGOUT_USER,\n      payload: {}\n    };\n  };\n\n  const initialState = {\n    payload: null,\n    isLoggedIn: false\n  };\n  \n  const user = (state = initialState, action) => {\n    switch (action.type) {\n      case (LOGIN_USER):\n        return ({\n          ...state,\n          payload: action.payload,\n          isLoggedIn: true\n        });\n      case (LOGOUT_USER):\n        return ({\n          ...state,\n          payload: action.payload,\n          isLoggedIn: false\n        });\n      default:\n        return state\n    }\n  };\n  \n  export default user;","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Container, Navbar, Nav, NavDropdown, Col, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport function CategoryDirection({ tag1, tag2, tag3, tag4, tag5 }) {\n    let expression = \"홈\";\n\n    if (tag1) expression += ` > ${tag1}`;\n    if (tag2) expression += ` > ${tag2}`;\n    if (tag3) expression += ` > ${tag3}`;\n    if (tag4) expression += ` > ${tag4}`;\n    if (tag5) expression += ` > ${tag5}`;\n    let tags = expression.split(\" > \");\n    let last = tags[tags.length - 1];\n    expression = expression.substring(0, expression.length - last.length);\n    // console.log(expression)\n    return (\n        <div style={{ marginTop: 50, marginBottom: 50, fontSize: \"1.4rem\" }}>\n            <span>\n                <Link\n                    to=\"/\"\n                    style={{ textDecoration: \"none\", color: \"inherit\" }}\n                >\n                    {expression}\n                </Link>\n            </span>\n            <span style={{ fontWeight: \"bolder\", color: \"#e85255\" }}>\n                {last}\n            </span>\n        </div>\n    );\n}\n\nfunction CategoryBanner() {\n    const { isLoggedIn } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n    }));\n\n    const { kind } = useSelector((state) => ({\n        kind: state.category.payload,\n    }));\n    const display_category = kind.map((k, index) => {\n        let path = \"/category/\" + k.pk;\n        return (\n            <Col lg=\"1\" sm=\"2\" xs=\"3\">\n                <Nav.Item>\n                    <Nav.Link\n                        href={path}\n                        style={{ color: \"white\", padding: 5 }}\n                    >\n                        {k.kind}\n                    </Nav.Link>\n                </Nav.Item>\n            </Col>\n        );\n    });\n\n    return (\n        <div\n            style={{\n                background: \"#e85255\",\n                fontSize: \"1.3rem\",\n                paddingTop: 5,\n                paddingBottom: 5,\n                color: \"white\",\n            }}\n        >\n            <Nav variant=\"pills\" defaultActiveKey=\"/home\">\n                <Container>\n                    <Row>\n                        <Col lg=\"1\" sm=\"1\" xs=\"1\">\n                            <Nav.Item>\n                                <Nav.Link\n                                    href=\"/\"\n                                    style={{ color: \"white\", padding: 5 }}\n                                >\n                                    홈\n                                </Nav.Link>\n                            </Nav.Item>\n                        </Col>\n\n                        {display_category}\n                    </Row>\n                </Container>\n            </Nav>\n        </div>\n    );\n}\n\nexport default CategoryBanner;\n","import React from \"react\";\nimport \"../assets/css/modal.css\";\n\nconst Modal = (props) => {\n    // 열기, 닫기, 모달 헤더 텍스트를 부모로부터 받아옴\n    const { open, close, btnName, customBtn } = props;\n    let header = \"My Shopping Mall says\";\n\n    return (\n        // 모달이 열릴때 openModal 클래스가 생성된다.\n        <div className={open ? \"openModal modal\" : \"modal\"}>\n            {open ? (\n                <section>\n                    <header>\n                        {header}\n                        <button className=\"close\" onClick={close}>\n                            {\" \"}\n                            &times;{\" \"}\n                        </button>\n                    </header>\n                    <main style={{ fontSize: \"1.3rem\" }}>{props.children}</main>\n                    <footer>\n                        <button\n                            className=\"close\"\n                            onClick={customBtn ? customBtn : close}\n                        >\n                            {\" \"}\n                            {btnName ? btnName : \"close\"}{\" \"}\n                        </button>\n                    </footer>\n                </section>\n            ) : null}\n        </div>\n    );\n};\n\nexport default Modal;\n","import { loginAction } from \"../modules/user\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Form, Container, Button, Row, Col } from \"react-bootstrap\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport \"../App.css\";\nimport Modal from \"./Modal\";\n\nfunction Login({ history }) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    const [modalContents, setModalContents] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const [userData, setUserData] = useState({\n        username: \"\",\n        password: \"\",\n    });\n    const { username, password } = userData;\n\n    const onChangeHandler = (e) => {\n        const { name, value } = e.target;\n        setUserData({\n            ...userData,\n            [name]: value,\n        });\n    };\n    const onClickHandler = (e) => {\n        e.preventDefault();\n        let body = {\n            username: username,\n            password: password,\n        };\n        axios\n            .post(\"/apis/v1/user/login\", body)\n            .then((response) => {\n                history.replace(\"/\");\n                dispatch(loginAction(response.data.payload));\n            })\n            .catch((e) => {\n                setModalOpen(true);\n                setModalContents(\"아이디와 패스워드를 확인해 주세요\");\n            });\n    };\n\n    return (\n        <Container>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n            <CategoryDirection tag1={\"로그인\"}></CategoryDirection>\n            <br />\n            <div style={{ fontSize: \"1.3rem\" }}>\n                <Form onSubmit={onClickHandler}>\n                    <Form.Group as={Row} controlId=\"exampleForm.ControlInput1\">\n                        <Col\n                            sm={{ span: 2, offset: 2 }}\n                            lg={{ span: 1, offset: 3 }}\n                        >\n                            <Form.Label style={{ margin: 10 }}>\n                                아이디\n                            </Form.Label>\n                        </Col>\n                        <Col\n                            lg={{ span: 4, offset: 0 }}\n                            sm={{ span: 8, offset: 0 }}\n                        >\n                            <Form.Control\n                                size=\"lg\"\n                                name=\"username\"\n                                value={username}\n                                onChange={onChangeHandler}\n                                placeholder=\"아이디를 입력해주세요\"\n                            />\n                        </Col>\n                    </Form.Group>\n                    <br />\n                    <Form.Group as={Row} controlId=\"exampleForm.ControlInput1\">\n                        <Col\n                            sm={{ span: 2, offset: 2 }}\n                            lg={{ span: 1, offset: 3 }}\n                        >\n                            <Form.Label style={{ margin: 5 }}>\n                                패스워드\n                            </Form.Label>\n                        </Col>\n                        <Col\n                            lg={{ span: 4, offset: 0 }}\n                            sm={{ span: 8, offset: 0 }}\n                        >\n                            <Form.Control\n                                style={{ fontFamily: \"ubuntu\" }}\n                                size=\"lg\"\n                                type=\"password\"\n                                name=\"password\"\n                                value={password}\n                                onChange={onChangeHandler}\n                                placeholder=\"패스워드를 입력해주세요\"\n                            />\n                        </Col>\n                    </Form.Group>\n                    <br />\n                    <Row>\n                        <Col\n                            lg={{ span: 5, offset: 3 }}\n                            sm={{ span: 10, offset: 2 }}\n                        >\n                            <div className=\"d-grid gap-2\">\n                                <button\n                                    style={{ height: 50 }}\n                                    type=\"submit\"\n                                    className=\"filledButton\"\n                                >\n                                    로그인\n                                </button>\n                            </div>\n                        </Col>\n                    </Row>\n\n                    <Row style={{ marginTop: 15 }}>\n                        <Col\n                            lg={{ span: 5, offset: 3 }}\n                            sm={{ span: 10, offset: 2 }}\n                        >\n                            <div className=\"d-grid gap-2\">\n                                <button\n                                    style={{ height: 50 }}\n                                    className=\"emptyButton\"\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        history.replace(\"/register\");\n                                    }}\n                                >\n                                    회원가입\n                                </button>\n                            </div>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        </Container>\n    );\n\n    // return (<div style ={{\n    //     display : 'flex', justifyContent : 'center', alignItems: 'center',\n    //     width : '100%', height : '100vh'\n    // }}>\n    //     <form style ={{display : 'flex', flexDirection:'column'}}\n    //         onSubmit={onClickHandler}>\n    //         <label>username</label>\n    //         <input name = \"username\" value = {username} onChange={onChangeHandler}/>\n    //         <label>Password</label>\n    //         <input name = \"password\" value = {password} onChange={onChangeHandler}/>\n    //         <br/>\n    //         <button type = 'submit'>\n    //             Login\n    //         </button>\n    //     </form>\n    // </div>);\n}\n\nexport default Login;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { logoutAction } from \"../modules/user\";\nimport { useDispatch } from \"react-redux\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport Modal from \"./Modal\";\nfunction Logout({ history }) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [modalContents, setModalContents] = useState(\"\");\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    const dispatch = useDispatch();\n\n    const onClickHandler = () => {\n        axios\n            .get(\"/apis/v1/user/logout\")\n            .then((res) => {\n                dispatch(logoutAction());\n                history.replace(\"/\");\n            })\n            .catch((e) => {\n                setModalOpen(true);\n                setModalContents(\n                    \"로그아웃에 실패했습니다. 관리자에게 문의해 주세요.\"\n                );\n            });\n    };\n    return (\n        <div>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n            <Container>\n                <CategoryDirection tag1={\"로그아웃\"}></CategoryDirection>\n                <br />\n                <Row>\n                    <Col\n                        lg={{ span: 4, offset: 4 }}\n                        sm={{ span: 6, offset: 3 }}\n                    >\n                        <h3>정말 로그아웃 하시겠습니까?</h3>\n                        <br />\n                        <br />\n                        <div className=\"d-grid gap-2\">\n                            <button\n                                className=\"emptyButton\"\n                                style={{\n                                    fontSize: \"1.3rem\",\n                                    height: 45,\n                                }}\n                                onClick={onClickHandler}\n                            >\n                                로그아웃\n                            </button>\n                            <br />\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default Logout;\n","export default __webpack_public_path__ + \"static/media/bucket.57eaf514.png\";","import React from \"react\";\nimport {\n    Container,\n    Row,\n    Col,\n    Nav,\n    Navbar,\n    Form,\n    FormControl,\n    Button,\n    InputGroup,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport bucket from \"../assets/images/bucket.png\";\nconst Banner = () => {\n    return (\n        <div style={{ paddingBottom: 30 }}>\n            <hr />\n\n            <Container>\n                <Row>\n                    <Col\n                        lg={{ span: 3, offset: 0 }}\n                        sm={{ span: 3, offset: 0 }}\n                    >\n                        <Navbar.Brand href=\"#home\">\n                            <Link\n                                to=\"/\"\n                                style={{\n                                    textDecoration: \"none\",\n                                    color: \"inherit\",\n                                }}\n                            >\n                                <img src={bucket} style={{ width: 70 }}></img>\n                            </Link>\n                        </Navbar.Brand>\n                    </Col>\n                </Row>\n\n                <Form>\n                    <Row className=\"align-items-center\">\n                        <Col lg={{ span: 3 }} sm={{ span: 12 }} xs=\"12\">\n                            <Link\n                                to=\"/\"\n                                style={{\n                                    textDecoration: \"none\",\n                                    color: \"inherit\",\n                                }}\n                            >\n                                <h2 style={{ color: \"black\" }}>\n                                    My Shopping Mall\n                                </h2>\n                            </Link>\n                        </Col>\n                        <Col lg={{ span: 6 }} sm={{ span: 9 }} xs=\"9\">\n                            <Form.Control\n                                size=\"lg\"\n                                id=\"inlineFormInputName\"\n                                placeholder=\"검색어를 입력하세요\"\n                            />\n                        </Col>\n                        <Col lg={{ span: 3 }} sm={{ span: 3 }} xs=\"3\">\n                            <button\n                                className=\"emptyButton\"\n                                style={{\n                                    width: \"5em\",\n                                    height: 50,\n                                    fontSize: \"1.3rem\",\n                                }}\n                            >\n                                Search\n                            </button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        </div>\n    );\n};\n\nexport default Banner;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Form, Container, Button, Row, Col } from \"react-bootstrap\";\nimport Banner from \"./Banner\";\nimport Title from \"./Title\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport Modal from \"./Modal\";\n\nfunction Register({ history }) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    const [modalContents, setModalContents] = useState(\"\");\n\n    const [userData, setUserData] = useState({\n        username: \"\",\n        password: \"\",\n        email: \"\",\n        phone_number: \"\",\n    });\n    const { username, password, email, phone_number } = userData;\n\n    const onChangeHandler = (e) => {\n        const { name, value } = e.target;\n        setUserData({\n            ...userData,\n            [name]: value,\n        });\n    };\n    const onClickHandler = (e) => {\n        e.preventDefault();\n        let body = {\n            username: username,\n            password: password,\n            email: email,\n            phone_number: phone_number,\n        };\n\n        if (!(username && password && email && phone_number)) {\n            setModalOpen(true);\n            setModalContents(\"모든 항목을 입력해 주세요\");\n            return;\n        }\n\n        axios\n            .post(\"/apis/v1/user\", body)\n            .then((response) => {\n                history.replace(\"/login\");\n            })\n            .catch((e) => {\n                setModalOpen(true);\n                setModalContents(\n                    \"회원가입에 실패했습니다. 관리자에게 문의해 주세요.\"\n                );\n            });\n\n        setUserData({\n            username: \"\",\n            password: \"\",\n            email: \"\",\n            phone_number: \"\",\n        });\n    };\n    return (\n        <Container>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n            <CategoryDirection tag1={\"회원가입\"}></CategoryDirection>\n            <br />\n            <div style={{ fontSize: \"1.3rem\" }}>\n                <Form onSubmit={onClickHandler}>\n                    <Form.Group as={Row} controlId=\"exampleForm.ControlInput1\">\n                        <Col\n                            sm={{ span: 2, offset: 1 }}\n                            lg={{ span: 1, offset: 2 }}\n                        >\n                            <Form.Label style={{ margin: 5 }}>\n                                아이디\n                            </Form.Label>\n                        </Col>\n                        <Col\n                            lg={{ span: 6, offset: 0 }}\n                            sm={{ span: 8, offset: 0 }}\n                        >\n                            <Form.Control\n                                name=\"username\"\n                                value={username}\n                                onChange={onChangeHandler}\n                                placeholder=\"아이디를 입력해주세요\"\n                            />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group\n                        style={{ paddingTop: 15 }}\n                        as={Row}\n                        controlId=\"exampleForm.ControlInput1\"\n                    >\n                        <Col\n                            sm={{ span: 2, offset: 1 }}\n                            lg={{ span: 1, offset: 2 }}\n                        >\n                            <Form.Label style={{ margin: 5 }}>\n                                이메일\n                            </Form.Label>\n                        </Col>\n                        <Col\n                            lg={{ span: 6, offset: 0 }}\n                            sm={{ span: 8, offset: 0 }}\n                        >\n                            <Form.Control\n                                name=\"email\"\n                                value={email}\n                                onChange={onChangeHandler}\n                                placeholder=\"이메일을 입력해주세요\"\n                            />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group\n                        style={{ paddingTop: 15 }}\n                        as={Row}\n                        controlId=\"exampleForm.ControlInput1\"\n                    >\n                        <Col\n                            sm={{ span: 2, offset: 1 }}\n                            lg={{ span: 1, offset: 2 }}\n                        >\n                            <Form.Label style={{ margin: 5 }}>\n                                패스워드\n                            </Form.Label>\n                        </Col>\n                        <Col\n                            lg={{ span: 6, offset: 0 }}\n                            sm={{ span: 8, offset: 0 }}\n                        >\n                            <Form.Control\n                                style={{ fontFamily: \"ubuntu\" }}\n                                type=\"password\"\n                                name=\"password\"\n                                value={password}\n                                onChange={onChangeHandler}\n                                placeholder=\"패스워드를 입력해 주세요\"\n                            />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group\n                        style={{ paddingTop: 15 }}\n                        as={Row}\n                        controlId=\"exampleForm.ControlInput1\"\n                    >\n                        <Col\n                            sm={{ span: 2, offset: 1 }}\n                            lg={{ span: 1, offset: 2 }}\n                        >\n                            <Form.Label style={{ margin: 5 }}>\n                                전화번호\n                            </Form.Label>\n                        </Col>\n                        <Col\n                            lg={{ span: 6, offset: 0 }}\n                            sm={{ span: 8, offset: 0 }}\n                        >\n                            <Form.Control\n                                name=\"phone_number\"\n                                value={phone_number}\n                                onChange={onChangeHandler}\n                                placeholder=\"대시(-) 없이 입력해 주세요\"\n                            />\n                        </Col>\n                    </Form.Group>\n\n                    <Row style={{ marginTop: 30 }}>\n                        <Col\n                            lg={{ span: 6, offset: 3 }}\n                            sm={{ span: 10, offset: 2 }}\n                        >\n                            <div className=\"d-grid gap-2\">\n                                <button\n                                    style={{ height: 50 }}\n                                    type=\"submit\"\n                                    className=\"emptyButton\"\n                                >\n                                    회원가입\n                                </button>\n                            </div>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        </Container>\n    );\n\n    // return (<div style ={{\n    //     display : 'flex', justifyContent : 'center', alignItems: 'center',\n    //     width : '100%', height : '100vh'\n    // }}>\n    //     <form style ={{display : 'flex', flexDirection:'column'}}\n    //         onSubmit={onClickHandler}>\n    //         <label>ID</label>\n    //         <input name = \"username\" value = {username} onChange={onChangeHandler}/>\n    //         <label>Email</label>\n    //         <input name = \"email\" value = {email} onChange={onChangeHandler}/>\n    //         <label>Password</label>\n    //         <input name = \"password\" value = {password} onChange={onChangeHandler}/>\n\n    //         <br/>\n    //         <button type = 'submit'>\n    //             Register\n    //         </button>\n    //     </form>\n    // </div>);\n}\n\nexport default Register;\n","const SET_CATEGORY = 'SET_CATEGORY'; \n\n\nexport const setCategory = (requestData) => {\n    return {\n      type: SET_CATEGORY,\n      payload: requestData,\n    };\n  };\n\n  const initialState = {\n    payload: [],\n  };\n  \n  const category = (state = initialState, action) => {\n    switch (action.type) {\n      case (SET_CATEGORY):\n        return ({\n          ...state,\n          payload: action.payload\n        });\n      default:\n        return state\n    }\n  };\n  \n  export default category;","export default __webpack_public_path__ + \"static/media/placeholder2.1bc1e84a.jpg\";","export function setDate(time) {\n    if (!time) return time;\n    let [date, tmp] = time.split(\"T\");\n    console.log(date);\n    let [hour, min] = tmp.split(\":\");\n    console.log(hour, min);\n    let _date = `${date} ${hour}:${min}`;\n    return _date;\n}\n\nexport function setMoney(amount) {\n    let _amount = amount\n        ? amount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n        : amount;\n\n    return _amount;\n}\n","import { Row, Col, Card } from \"react-bootstrap\";\nimport placeholder from \"../assets/images/placeholder2.jpg\";\nimport { Link } from \"react-router-dom\";\nimport { setMoney } from \"./Convenient\";\n// id가 필요하다!!\nconst MakeCard = ({ products }) => {\n    products = products.filter((product) => product.quantity > 0);\n    products = products.map((product, index) => {\n        let path = \"/product/\" + product.id;\n        return (\n            <Col lg={4} sm={6} key={index} bg={\"Light\"}>\n                <Link\n                    style={{ textDecoration: \"none\", color: \"inherit\" }}\n                    key={index}\n                    to={path}\n                >\n                    <Card border=\"secondary\" style={{ height: \"29rem\" }}>\n                        <Row>\n                            <Card.Img\n                                variant=\"top\"\n                                style={{ height: \"22rem\", objectFit: \"cover\" }}\n                                src={\n                                    product.base64_image_url\n                                        ? product.base64_image_url\n                                        : placeholder\n                                }\n                            />\n                        </Row>\n\n                        <Card.Body style={{ marginTop: 4 }}>\n                            <Card.Title style={{ fontSize: \"1.4rem\" }}>\n                                {product.name}\n                            </Card.Title>\n                            <Card.Text\n                                style={{\n                                    fontSize: \"1.5rem\",\n                                    fontWeight: \"bolder\",\n                                }}\n                            >\n                                {setMoney(product.price)} ₩\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Link>\n                <br />\n            </Col>\n        );\n    });\n    return <Row>{products}</Row>;\n};\n\nexport default MakeCard;\n","import react from \"react\";\nimport DisplayProducts from \"./MakeCard\";\nimport { Container, Spinner, Row, Col } from \"react-bootstrap\";\nconst Loading = ({ products }) => {\n    if (products.length == 0)\n        return (\n            <Container>\n                <Row>\n                    <Col\n                        lg={{ span: 2, offset: 5 }}\n                        xs={{ span: 3, offset: 5 }}\n                        md={{ span: 6, offset: 5 }}\n                    >\n                        <Spinner\n                            style={{\n                                marginTop: 100,\n                                marginBottom: 100,\n                                width: 50,\n                                height: 50,\n                            }}\n                            animation=\"border\"\n                            variant=\"primary\"\n                        ></Spinner>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    return (\n        <div>\n            <div style={{ marginTop: 30 }} />\n            <DisplayProducts products={products} />\n        </div>\n    );\n};\n\nexport default Loading;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setCategory } from \"../modules/category\";\nimport axios from \"axios\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport { Container, Navbar, Spinner } from \"react-bootstrap\";\nimport Loading from \"./Loading\";\n\nexport default function Home(props) {\n    const [products, Setproducts] = useState([]);\n\n    const dispatch = useDispatch();\n    const fetchProducts = async () => {\n        let res = await axios.get(\"/apis/v1/product\");\n        let product_list = res.data.payload.filter((p) => p.valid === true);\n        product_list = product_list.map((data) => {\n            return {\n                ...data,\n                id: data.pk,\n            };\n        });\n        Setproducts(product_list);\n    };\n\n    const fetchCategory = async () => {\n        let res = await axios.get(\"/apis/v1/category\");\n\n        let category_list = res.data.map((data) => {\n            return {\n                kind: data.fields.kind,\n                pk: data.pk,\n            };\n        });\n        dispatch(setCategory(category_list));\n    };\n\n    useEffect(() => {\n        fetchProducts();\n        fetchCategory();\n    }, []);\n\n    return (\n        <div>\n            <div>\n                <ControlledCarousel />\n\n                <br />\n                <Container>\n                    <div style={{ marginTop: 30 }} />\n                    <h3>오늘의 상품 추천</h3>\n\n                    <hr />\n                    <Loading products={products} />\n                </Container>\n            </div>\n        </div>\n    );\n}\n\nfunction ControlledCarousel() {\n    const [index, setIndex] = useState(0);\n\n    const handleSelect = (selectedIndex, e) => {\n        setIndex(selectedIndex);\n    };\n    return (\n        <Carousel activeIndex={index} onSelect={handleSelect}>\n            <Carousel.Item>\n                <img\n                    className=\"d-block w-100\"\n                    src=\"https://img.lovepik.com//back_pic/05/72/43/975bbd3c7e54c21.jpg_wh860.jpg\"\n                    alt=\"First slide\"\n                    style={{\n                        minWidth: \"100%\",\n                        height: \"30rem\",\n                    }}\n                />\n                <Carousel.Caption>\n                    {/* <h3>First slide label</h3>\n                    <p>First slide label ~~~~</p> */}\n                </Carousel.Caption>\n            </Carousel.Item>\n            <Carousel.Item>\n                <img\n                    className=\"d-block w-100\"\n                    src=\"https://image.freepik.com/free-vector/the-interior-of-mall-banner-scene-inside-a-shopping-store-at-night_93732-21.jpg\"\n                    alt=\"Second slide\"\n                    style={{\n                        minWidth: \"100%\",\n                        height: \"30rem\",\n                    }}\n                />\n\n                <Carousel.Caption>\n                    {/* <h3>Second slide label</h3>\n                    <p>아무거나 적어 </p> */}\n                </Carousel.Caption>\n            </Carousel.Item>\n            <Carousel.Item>\n                <img\n                    className=\"d-block w-100\"\n                    src=\"https://i.pinimg.com/originals/b9/42/dd/b942dd80ac8cba56dd90dc539d2040c0.jpg\"\n                    alt=\"Third slide\"\n                    style={{\n                        minWidth: \"100%\",\n                        height: \"30rem\",\n                    }}\n                />\n                <Carousel.Caption>\n                    {/* <h3>Third slide label</h3>\n                    <p>\n                    세번째\n                    </p> */}\n                </Carousel.Caption>\n            </Carousel.Item>\n        </Carousel>\n    );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nconst Move = () => {\n    return (\n        <div>\n            <br />\n            <br />\n            <br />\n            <br />\n            <hr />\n            <br />\n            <Container>\n                <br />\n                <ul>\n                    <li>\n                        <a href=\"https://github.com/sjoh0704\">\n                            https://github.com/sjoh0704\n                        </a>\n                    </li>\n                    <li>\n                        <a href=\"https://seungjuitmemo.tistory.com/\">\n                            https://seungjuitmemo.tistory.com/\n                        </a>\n                    </li>\n                    <br />\n\n                    {/* <li><Link to=\"http://naver.com\" style={{textDecoration:'none', color:'inherit'}}>Home</Link></li>\n                <li><Link to=\"/login\" style={{textDecoration:'none', color:'inherit'}}>Login</Link></li>\n                <li><Link to=\"/logout\"style={{textDecoration:'none', color:'inherit'}}>Logout</Link></li>\n                <li><Link to=\"/register\"style={{textDecoration:'none', color:'inherit'}}>Register</Link></li>\n                <li><Link to=\"/product/register\"style={{textDecoration:'none', color:'inherit'}}>ProductRegister</Link></li>\n                <li><Link to=\"/category/1\"style={{textDecoration:'none', color:'inherit'}}>ProductByCategory</Link></li>\n                <li><Link to=\"/orderlist\"style={{textDecoration:'none', color:'inherit'}}>OrderList</Link></li> */}\n                </ul>\n            </Container>\n        </div>\n    );\n};\n\nexport default Move;\n","import { Col, Row } from \"react-bootstrap\";\n\nconst AreaButton = (props) => {\n    const { onChange, area } = props;\n    return (\n        <Row>\n            <Col>\n                <div className=\"dropdown\">\n                    <button\n                        className=\"dropdown-button\"\n                        style={{ height: \"auto\", padding: 10 }}\n                        onClick={(e) => {\n                            e.preventDefault();\n                        }}\n                    >\n                        {area}\n                    </button>\n                    <div\n                        class=\"dropdown-content\"\n                        style={{ padding: 0, minWidth: 300 }}\n                    >\n                        <select\n                            autofocus\n                            style={{ width: 300 }}\n                            onChange={onChange}\n                        >\n                            <optgroup label=\"서울\">\n                                <option value=\"서울 강남/역삼/삼성/논현\">\n                                    강남/역삼/삼성/논현\n                                </option>\n                                <option value=\"서울 서초/신사/방배\">\n                                    서초/신사/방배\n                                </option>\n                                <option value=\"서울 잠실/잠실새내\">\n                                    잠실/잠실새내\n                                </option>\n                                <option value=\"서울 신림/서울대/사당/동작\">\n                                    신림/서울대/사당/동작\n                                </option>\n                                <option value=\"서울 화곡/까치산/양천/목동\">\n                                    화곡/까치산/양천/목동\n                                </option>\n                                <option value=\"서울 신촌/홍대/합정\">\n                                    신촌/홍대/합정\n                                </option>\n                                <option value=\"서울 종로/대학로/동묘앞역\">\n                                    종로/대학로/동묘앞역\n                                </option>\n                                <option value=\"서울 이태원/용산/서울역/명동/회현\">\n                                    이태원/용산/서울역/명동/회현\n                                </option>\n                                <option value=\"서울 회기/고려대/청량리/신설동\">\n                                    회기/고려대/청량리/신설동\n                                </option>\n                                <option value=\"서울 건대/군자/구의\">\n                                    건대/군자/구의\n                                </option>\n                                <option value=\"서울 수유/미아\">\n                                    수유/미아\n                                </option>\n                                <option value=\"서울 태릉/노원/도봉/창동\">\n                                    태릉/노원/도봉/창동\n                                </option>\n                                <option value=\"서울 영등포/여의도\">\n                                    영등포/여의도\n                                </option>\n                                <option value=\"서울 천호/길동/둔촌\">\n                                    천호/길동/둔촌\n                                </option>\n                                <option value=\"서울 구로/금천/오류/신도림\">\n                                    구로/금천/오류/신도림\n                                </option>\n                                <option value=\"서울 연신내/불광/응암\">\n                                    연신내/불광/응암\n                                </option>\n                                <option value=\"서울 성신여대/성북/월곡\">\n                                    성신여대/성북/월곡\n                                </option>\n                                <option value=\"서울 동대문/을지로/충무로/신당/약수\">\n                                    동대문/을지로/충무로/신당/약수\n                                </option>\n                                <option value=\"서울 장안동/답십리\">\n                                    장안동/답십리\n                                </option>\n                                <option value=\"서울 왕십리/성수/금호\">\n                                    왕십리/성수/금호\n                                </option>\n                                <option value=\"서울 상봉/중랑/면목\">\n                                    상봉/중랑/면목\n                                </option>\n                            </optgroup>\n                            <optgroup label=\"경기\">\n                                <option value=\"경기 수원 인계/권선/영통\">\n                                    수원 인계/권선/영통\n                                </option>\n                                <option value=\"경기 안양/평촌/인덕원/과천\">\n                                    안양/평촌/인덕원/과천\n                                </option>\n                                <option value=\"경기 용인\">용인</option>\n                                <option value=\"경기 하남/광주/여주/이천\">\n                                    하남/광주/여주/이천\n                                </option>\n                                <option value=\"경기 안산 고잔/상록수/선부동/월피동\">\n                                    고잔/상록수/선부동/월피동\n                                </option>\n                                <option value=\"경기 시흥/월곶\">\n                                    시흥/월곶\n                                </option>\n                                <option value=\"경기 평택/송탄/안성\">\n                                    평택/송탄/안성\n                                </option>\n                                <option value=\"경기 김포\">김포</option>\n                                <option value=\"경기 구리\">구리</option>\n                                <option value=\"경기 남양주(오남/조안/화도/진접)\">\n                                    남양주(오남/조안/화도/진접)\n                                </option>\n                                <option value=\"경기 양주/동두천/연천\">\n                                    양주/동두천/연천\n                                </option>\n                                <option value=\"경기 가평/청평\">\n                                    가평/청평\n                                </option>\n                                <option value=\"경기 수원역/구운/장안/세류\">\n                                    수원역/구운/장안/세류\n                                </option>\n                                <option value=\"경기 성남/분당/위례\">\n                                    성남/분당/위례\n                                </option>\n                                <option value=\"경기 동탄/화성/오산/병점\">\n                                    동탄/화성/오산/병점\n                                </option>\n                                <option value=\"경기 안산 중앙역\">\n                                    안산 중앙역\n                                </option>\n                                <option value=\"경기 군포/의왕/금정/산본\">\n                                    군포/의왕/금정/산본\n                                </option>\n                                <option value=\"경기 광명\">광명</option>\n                                <option value=\"경기 부천\">부천</option>\n                                <option value=\"경기 파주\">파주</option>\n                                <option value=\"경기 의정부\">의정부</option>\n                                <option value=\"경기 남양주(다산/별내/와부/호평)\">\n                                    남양주(다산/별내/와부/호평)\n                                </option>\n                                <option value=\"경기 포천\">포천</option>\n                                <option value=\"경기 양평\">양평</option>\n                                <option value=\"경기 제부도/대부도\">\n                                    제부도/대부도\n                                </option>\n                            </optgroup>\n                            <optgroup label=\"인천\">\n                                <option value=\"인천 부평\">부평</option>\n                                <option value=\"인천 서구(석남,서구청,검단)\">\n                                    서구(석남,서구청,검단)\n                                </option>\n                                <option value=\"인천 주안\">주안</option>\n                                <option value=\"인천 인천공항/을왕리/영종도\">\n                                    인천공항/을왕리/영종도\n                                </option>\n                                <option value=\"인천 강화/옹진\">\n                                    강화/옹진\n                                </option>\n                                <option value=\"인천 남동구(소래포구/호구포)\">\n                                    남동구(소래포구/호구포)\n                                </option>\n                                <option value=\"인천 구월\">구월</option>\n                                <option value=\"인천 계양(작전,경인교대)\">\n                                    계양(작전,경인교대)\n                                </option>\n                                <option value=\"인천 송도/연수\">\n                                    송도/연수\n                                </option>\n                                <option value=\"인천 중구(월미도/신포/동인천/연안부두)\">\n                                    중구(월미도/신포/동인천/연안부두)\n                                </option>\n                                <option value=\"인천 동암/간석\">\n                                    동암/간석\n                                </option>\n                                <option value=\"인천 용현/숭의/도화/동구\">\n                                    용현/숭의/도화/동구\n                                </option>\n                            </optgroup>\n                            <optgroup label=\"강원\">\n                                <option value=\"강원 춘천/강촌\">\n                                    춘천/강촌\n                                </option>\n                                <option value=\"강원 원주\">원주</option>\n                                <option value=\"강원 경포대/사천/주문진/정동진\">\n                                    경포대/사천/주문진/정동진\n                                </option>\n                                <option value=\"강원 영월/정선\">\n                                    영월/정선\n                                </option>\n                                <option value=\"강원 양양(서피비치/낙산)\">\n                                    양양(서피비치/낙산)\n                                </option>\n                                <option value=\"강원 화천/철원/인제/양구\">\n                                    화천/철원/인제/양구\n                                </option>\n                                <option value=\"강원 강릉역/교동/옥계\">\n                                    강릉역/교동/옥계\n                                </option>\n                                <option value=\"강원 속초/고성\">\n                                    속초/고성\n                                </option>\n                                <option value=\"강원 동해/삼척/태백\">\n                                    동해/삼척/태백\n                                </option>\n                                <option value=\"강원 홍천/횡성\">\n                                    홍천/횡성\n                                </option>\n                            </optgroup>\n                            <optgroup label=\"제주\">\n                                <option value=\"제주 제주시/제주공항\">\n                                    제주시/제주공항\n                                </option>\n                                <option value=\"제주 서귀포시\">서귀포시</option>\n                                <option value=\"제주 하귀/애월/한림/협재\">\n                                    하귀/애월/한림/협재\n                                </option>\n                            </optgroup>\n                            <optgroup label=\"대전\">\n                                <option value=\"대전 서구(둔산/용문/월평)\">\n                                    서구(둔산/용문/월평)\n                                </option>\n                                <option value=\"대전 유성구\">유성구</option>\n                                <option value=\"대전 중구(은행/대흥/선화/유천)\">\n                                    중구(은행/대흥/선화/유천)\n                                </option>\n                                <option value=\"대전 동구(용전/복합터미널)\">\n                                    동구(용전/복합터미널)\n                                </option>\n                                <option value=\"대전 대덕구(중리/신탄진)\">\n                                    대덕구(중리/신탄진)\n                                </option>\n                            </optgroup>\n                            <optgroup label=\"충북\">\n                                <option value=\"충북 광산구\">광산구</option>\n                                <option value=\"충북 청주 홍덕구/서원구\">\n                                    청주 홍덕구/서원구\n                                </option>\n                                <option value=\"충북 청주 상당구/청원구\">\n                                    청주 상당구/청원구\n                                </option>\n                                <option value=\"충북 충주/수안보\">\n                                    충주/수안보\n                                </option>\n                                <option value=\"충북 제천/단양\">\n                                    제천/단양\n                                </option>\n                                <option value=\"충북 진천/음성\">\n                                    진천/음성\n                                </option>\n                                <option value=\"충북 보은/괴산/증평/영동\">\n                                    보은/괴산/증평/영동\n                                </option>\n                            </optgroup>\n                            <optgroup label=\"충남/세종\">\n                                <option value=\"충남/세종 천안서북구\">\n                                    천안서북구\n                                </option>\n                                <option value=\"충남/세종 천안동남구\">\n                                    천안동남구\n                                </option>\n                                <option value=\"충남/세종 아산\">아산</option>\n                                <option value=\"충남/세종 공주/동학/세종\">\n                                    공주/동학/세종\n                                </option>\n                                <option value=\"충남/세종 계룡/금산/논산/청양\">\n                                    계룡/금산/논산/청양\n                                </option>\n                                <option value=\"충남/세종 예산/홍성\">\n                                    예산/홍성\n                                </option>\n                                <option value=\"충남/세종 당진\">당진</option>\n                                <option value=\"충남/세종 서천/부여\">\n                                    서천/부여\n                                </option>\n                                <option value=\"충남/세종 보령/대천해수욕장\">\n                                    보령/대천해수욕장\n                                </option>\n                                <option value=\"충남/세종 태안/안면도/서산\">\n                                    태안/안면도/서산\n                                </option>\n                            </optgroup>\n                            <optgroup label=\"부산\">\n                                <option value=\"부산 해운대/센텀시티/재송\">\n                                    해운대/센텀시티/재송\n                                </option>\n                                <option value=\"부산 송정/기장/정관\">\n                                    송정/기장/정관\n                                </option>\n                                <option value=\"부산 광안리/수영\">\n                                    광안리/수영\n                                </option>\n                                <option value=\"부산 경성대/대연/용호동/문현\">\n                                    경성대/대연/용호동/문현\n                                </option>\n                                <option value=\"부산 서면/양정/초읍/부산시민공원\">\n                                    서면/양정/초읍/부산시민공원\n                                </option>\n                                <option value=\"부산 남포동/중앙동/태종대/송도/영도\">\n                                    남포동/중앙동/태종대/송도/영도\n                                </option>\n                                <option value=\"부산 부산역/범일동/부산진역\">\n                                    부산역/범일동/부산진역\n                                </option>\n                                <option value=\"부산 연산/토곡\">\n                                    연산/토곡\n                                </option>\n                                <option value=\"부산 동래/사직/온천장/부산대/구서/서동\">\n                                    동래/사직/온천장/부산대/구서/서동\n                                </option>\n                                <option value=\"부산 사상/엄궁/학장\">\n                                    사상/엄궁/학장\n                                </option>\n                                <option value=\"부산 덕천/화명/만덕/구포\">\n                                    덕천/화명/만덕/구포\n                                </option>\n                                <option value=\"부산 하단/명지/김해공항\">\n                                    하단/명지/김해공항\n                                </option>\n                                <option value=\"부산 다대포/강서/신호/과정/지사\">\n                                    다대포/강서/신호/과정/지사\n                                </option>\n                            </optgroup>\n                            <optgroup label=\"광주\">\n                                <option value=\"광주 광산구\">광산구</option>\n                                <option value=\"광주 서구\">서구</option>\n                                <option value=\"광주 남구\">남구</option>\n                                <option value=\"광주 동구\">동구</option>\n                                <option value=\"대전 대덕구\">대덕구</option>\n                            </optgroup>\n                            <optgroup label=\"울산\">\n                                <option value=\"울산 남구/중구\">\n                                    남구/중구\n                                </option>\n                                <option value=\"울산 동구/북구/울주군\">\n                                    동구/북구/울주군\n                                </option>\n                            </optgroup>\n                            <optgroup label=\"경남\">\n                                <option value=\"경남 창원 상남동/용호동/중앙동\">\n                                    창원 상남동/용호동/중앙동\n                                </option>\n                                <option value=\"경남 창원 명서동/봉곡동/팔용동\">\n                                    창원 명서동/봉곡동/팔용동\n                                </option>\n                                <option value=\"경남 창원 북면온천/창원종합버스터미널\">\n                                    창원 북면온천/창원종합버스터미널\n                                </option>\n                                <option value=\"경남 마산\">마산</option>\n                                <option value=\"경남 진해\">진해</option>\n\n                                <option value=\"경남 김해/장유\">\n                                    김해/장유\n                                </option>\n                                <option value=\"경남 양산/밀양\">\n                                    김해/장유\n                                </option>\n                                <option value=\"경남 진주\">김해/장유</option>\n\n                                <option value=\"경남 거제/통영/고성\">\n                                    거제/통영/고성\n                                </option>\n                                <option value=\"경남 사천/남해\">\n                                    사천/남해\n                                </option>\n                                <option value=\"경남 하동/산청/함양\">\n                                    하동/산청/함양\n                                </option>\n                                <option value=\"경남 거창/함안/창녕/합천/의령\">\n                                    거창/함안/창녕/합천/의령\n                                </option>\n                            </optgroup>\n                            <optgroup label=\"대구\">\n                                <option value=\"대구 동성로/서문시장/대구시청\">\n                                    동성로/서문시장/대구시청\n                                </option>\n                            </optgroup>\n                            <optgroup label=\"경북\">\n                                <option value=\"경북 포항/남구\">\n                                    포항/남구\n                                </option>\n                                <option value=\"경북 포항/북구\">\n                                    포항/북구\n                                </option>\n                                <option value=\"경북 경주\">경주</option>\n                                <option value=\"경북 구미\">구미</option>\n                                <option value=\"경북 경산\">경산</option>\n                                <option value=\"경북 안동\">안동</option>\n                                <option value=\"경북 영천/청도\">\n                                    영천/청도\n                                </option>\n                                <option value=\"경북 김천/칠곡/성주\">\n                                    김천/칠곡/성주\n                                </option>\n                                <option value=\"경북 문경/상주/영주\">\n                                    문경/상주/영주\n                                </option>\n                                <option value=\"경북 예천/군위/의성/봉화\">\n                                    예천/군위/의성/봉화\n                                </option>\n                                <option value=\"경북 울진/영덕/청송\">\n                                    울진/영덕/청송\n                                </option>\n                                <option value=\"경북 울릉도\">울릉도</option>\n                            </optgroup>\n                            <optgroup label=\"광주\">\n                                <option value=\"광주 상무지구/금호지구\">\n                                    상무지구/금호지구\n                                </option>\n                                <option value=\"광주 유스퀘어/서구\">\n                                    유스퀘어/서구\n                                </option>\n                                <option value=\"광주 첨단지구/하남지구\">\n                                    첨단지구/하남지구\n                                </option>\n                                <option value=\"광주 송정역/광산구\">\n                                    송정역/광산구\n                                </option>\n                                <option value=\"광주 충장로/대인시장\">\n                                    충장로/대인시장\n                                </option>\n                                <option value=\"광주 국립아시아문화전당\">\n                                    국립아시아문화전당\n                                </option>\n                                <option value=\"광주 광주역/전대사거리\">\n                                    광주역/전대사거리\n                                </option>\n                                <option value=\"광주 동구/남구\">\n                                    동구/남구\n                                </option>\n                                <option value=\"광주 기아챔피언스필드/북구\">\n                                    기아챔피언스필드/북구\n                                </option>\n                            </optgroup>\n                            <optgroup label=\"전남\">\n                                <option value=\"전남 여수\">여수</option>\n                                <option value=\"전남 순천\">순천</option>\n                                <option value=\"전남 광양\">광양</option>\n                                <option value=\"전남 목포/무안/영암/신안\">\n                                    목포/무안/영암/신안\n                                </option>\n                                <option value=\"전남 나주/함평/영광/장성\">\n                                    나주/함평/영광/장성\n                                </option>\n                                <option value=\"전남 담양/곡성/화순/구례\">\n                                    담양/곡성/화순/구례\n                                </option>\n                                <option value=\"전남 해남/완도/진도\">\n                                    해남/완도/진도\n                                </option>\n                                <option value=\"전남 강진/장흥/보성/고흥\">\n                                    강진/장흥/보성/고흥\n                                </option>\n                            </optgroup>\n                            <optgroup label=\"전주/전북\">\n                                <option value=\"전주/전북 덕진구\">덕진구</option>\n                                <option value=\"전주/전북 완산구\">완산구</option>\n                                <option value=\"전주/전북 군산\">군산</option>\n                                <option value=\"전주/전북 익산\">익산</option>\n                                <option value=\"전주/전북 남원/임실/순창\">\n                                    남원/임실/순창\n                                </option>\n                                <option value=\"전주/전북 무주/진안/장수\">\n                                    무주/진안/장수\n                                </option>\n                                <option value=\"전주/전북 정읍/부안/김제/고창\">\n                                    정읍/부안/김제/고창\n                                </option>\n                            </optgroup>\n                        </select>\n                    </div>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default AreaButton;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { Form, Container, Button, Row, Col } from \"react-bootstrap\";\nimport ImageUploading from \"react-images-uploading\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport AreaButton from \"./AreaButton\";\nimport Modal from \"./Modal\";\n\nfunction ProductRegister({ history }) {\n    const [modalOpen, setModalOpen] = useState(false);\n\n    const [modalContents, setModalContents] = useState(\"\");\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    const [area, setArea] = useState(\"지역을 선택해 주세요\");\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n    const { kind } = useSelector((state) => ({\n        kind: state.category.payload,\n    }));\n    const [images, setImages] = useState([]);\n    const maxNumber = 4;\n\n    const onChangeImage = (imageList, addUpdateIndex) => {\n        console.log(imageList, addUpdateIndex);\n        setImages(imageList);\n    };\n\n    const onError = (errors, files) => {\n        if (errors.maxNumber) {\n            alert(`이미지는 ${maxNumber}개까지만 첨부할 수 있습니다`);\n        }\n    };\n\n    const displayCategory = kind.map((k, index) => {\n        return <option>{k.kind}</option>;\n    });\n\n    const [product, setProduct] = useState({\n        name: \"\",\n        category: kind[0].kind,\n        price: null,\n        quantity: 1,\n        description: \"\",\n    });\n\n    const { name, category, price, quantity, description } = product;\n\n    const onChangeHandler = (e) => {\n        const { name, value } = e.target;\n        setProduct({\n            ...product,\n            [name]: value,\n        });\n    };\n\n    const onChangeArea = (e) => {\n        const { name, value } = e.target;\n        setArea(value);\n    };\n\n    const onClickHandler = (e) => {\n        let category_id = kind[kind.findIndex((k) => k.kind === category)].pk;\n        let image_list = images.map((img, index) => img.data_url);\n        e.preventDefault();\n\n        if (\n            !(\n                name &&\n                category_id &&\n                price &&\n                quantity &&\n                description &&\n                image_list.length\n            )\n        ) {\n            setModalOpen(true);\n            setModalContents(\"모든 항목을 입력해 주세요\");\n            return;\n        }\n        if (\n            area == undefined ||\n            area == null ||\n            area == \"지역을 선택해 주세요\"\n        ) {\n            setModalOpen(true);\n            setModalContents(\"거래 지역을 선택해 주세요\");\n            return;\n        }\n        const body = {\n            seller_id: userData.user_id,\n            name: name,\n            category_id: category_id,\n            price: price,\n            quantity: quantity,\n            area: area,\n            description: description,\n            ...image_list, // 용량이 크면 안넘어가\n        };\n\n        axios\n            .post(\"/apis/v1/product\", body)\n            .then((response) => {\n                history.replace(\"/\");\n            })\n            .catch((e) => {\n                setModalOpen(true);\n                setModalContents(\n                    \"상품 등록에 실패하였습니다. 관리자에게 문의하세요.\"\n                );\n            });\n    };\n\n    return (\n        <div>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n\n            <Container>\n                <CategoryDirection tag1={\"판매하기\"}></CategoryDirection>\n                <br />\n                <div style={{ fontSize: \"1.3rem\" }}>\n                    <Row>\n                        <Col\n                            lg={{ span: 11, offset: 2 }}\n                            sm={{ span: 12, offset: 0 }}\n                            xs={{ span: 12 }}\n                        >\n                            <Form>\n                                <Form.Group\n                                    controlId=\"exampleForm.ControlSelect1\"\n                                    as={Row}\n                                >\n                                    <Form.Label column sm=\"2\" lg=\"1\" xs=\"4\">\n                                        카테고리\n                                    </Form.Label>\n                                    <Col sm=\"2\" xs=\"8\">\n                                        <Form.Control\n                                            as=\"select\"\n                                            name=\"category\"\n                                            onChange={onChangeHandler}\n                                            value={category}\n                                        >\n                                            {displayCategory}\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group\n                                    controlId=\"exampleForm.ControlInput1\"\n                                    as={Row}\n                                >\n                                    <Form.Label column sm=\"2\" lg=\"1\" xs=\"4\">\n                                        상품명\n                                    </Form.Label>\n                                    <Col sm=\"10\" lg=\"8\" xs=\"8\">\n                                        <Form.Control\n                                            name=\"name\"\n                                            value={name}\n                                            onChange={onChangeHandler}\n                                            placeholder=\"상품명을 적어주세요\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group\n                                    controlId=\"exampleForm.ControlInput1\"\n                                    as={Row}\n                                >\n                                    <Form.Label column sm=\"2\" lg=\"1\" xs=\"4\">\n                                        가격\n                                    </Form.Label>\n                                    <Col sm=\"4\" lg=\"2\" xs=\"7\">\n                                        <Form.Control\n                                            name=\"price\"\n                                            value={price}\n                                            onChange={onChangeHandler}\n                                            placeholder=\"가격을 적어주세요\"\n                                        />\n                                    </Col>\n                                    <Col xs=\"1\">\n                                        <p>₩</p>\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group\n                                    controlId=\"exampleForm.ControlInput1\"\n                                    as={Row}\n                                >\n                                    <Form.Label column sm=\"2\" lg=\"1\" xs=\"4\">\n                                        수량\n                                    </Form.Label>\n                                    <Col sm=\"2\" lg=\"1\" xs=\"8\">\n                                        <Form.Control\n                                            name=\"quantity\"\n                                            value={quantity}\n                                            onChange={onChangeHandler}\n                                            placeholder=\"수량을 적어주세요\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n\n                                <Row>\n                                    <Col\n                                        sm=\"2\"\n                                        lg=\"1\"\n                                        xs=\"4\"\n                                        style={{ paddingTop: 20 }}\n                                    >\n                                        거래 지역\n                                    </Col>\n                                    <Col\n                                        sm=\"6\"\n                                        lg=\"6\"\n                                        xs=\"6\"\n                                        style={{ paddingTop: 8 }}\n                                    >\n                                        <AreaButton\n                                            onChange={onChangeArea}\n                                            area={area}\n                                        />\n                                    </Col>\n                                </Row>\n                                <br />\n                                <Form.Group\n                                    controlId=\"exampleForm.ControlTextarea1\"\n                                    as={Row}\n                                >\n                                    <Form.Label column sm=\"2\" lg=\"1\">\n                                        상품설명\n                                    </Form.Label>\n                                    <Col sm=\"10\" lg=\"8\">\n                                        <Form.Control\n                                            as=\"textarea\"\n                                            rows={5}\n                                            onChange={onChangeHandler}\n                                            name=\"description\"\n                                            placeholder=\"상품 설명을 적어주세요\"\n                                            value={description}\n                                        />\n                                    </Col>\n                                </Form.Group>\n                                <br />\n                                <Form.Group\n                                    controlId=\"exampleForm.ControlTextarea1\"\n                                    as={Row}\n                                >\n                                    <Form.Label>상품 이미지 등록</Form.Label>\n                                    {/* <Button onClick={onClickGetImage}>이미지 가져오기 </Button> */}\n\n                                    <ImageUploading\n                                        multiple\n                                        value={images}\n                                        onChange={onChangeImage}\n                                        maxNumber={maxNumber}\n                                        dataURLKey=\"data_url\"\n                                        onError={onError} // 추가\n                                    >\n                                        {({\n                                            imageList,\n                                            onImageUpload,\n                                            onImageUpdate,\n                                            onImageRemove,\n                                            isDragging,\n                                            dragProps,\n                                        }) => (\n                                            // write your building UI\n\n                                            <div className=\"upload__image-wrapper\">\n                                                <br />\n                                                <Button\n                                                    variant=\"outline-light\"\n                                                    style={{\n                                                        background: \"#e85255\",\n                                                        fontSize: \"1.3rem\",\n                                                    }}\n                                                    onClick={(e) => {\n                                                        e.preventDefault();\n                                                        onImageUpload();\n                                                    }}\n                                                    {...dragProps}\n                                                >\n                                                    사진 추가\n                                                </Button>\n                                                <br />\n                                                &nbsp;\n                                                {imageList.map(\n                                                    (image, index) => (\n                                                        <div\n                                                            key={index}\n                                                            className=\"image-item\"\n                                                        >\n                                                            <img\n                                                                src={\n                                                                    image[\n                                                                        \"data_url\"\n                                                                    ]\n                                                                }\n                                                                alt=\"\"\n                                                                width=\"700\"\n                                                            />\n                                                            <div className=\"image-item__btn-wrapper\">\n                                                                <br />\n                                                                <Button\n                                                                    variant=\"outline-light\"\n                                                                    style={{\n                                                                        background:\n                                                                            \"#e85255\",\n                                                                        fontSize:\n                                                                            \"1.3rem\",\n                                                                    }}\n                                                                    onClick={(\n                                                                        e\n                                                                    ) => {\n                                                                        e.preventDefault();\n                                                                        onImageUpdate(\n                                                                            index\n                                                                        );\n                                                                    }}\n                                                                >\n                                                                    수정\n                                                                </Button>{\" \"}\n                                                                <Button\n                                                                    variant=\"outline-light\"\n                                                                    style={{\n                                                                        background:\n                                                                            \"#e85255\",\n                                                                        fontSize:\n                                                                            \"1.3rem\",\n                                                                    }}\n                                                                    onClick={(\n                                                                        e\n                                                                    ) => {\n                                                                        e.preventDefault();\n                                                                        onImageRemove(\n                                                                            index\n                                                                        );\n                                                                    }}\n                                                                >\n                                                                    삭제\n                                                                </Button>\n                                                            </div>\n                                                            <br />\n                                                        </div>\n                                                    )\n                                                )}\n                                            </div>\n                                        )}\n                                    </ImageUploading>\n                                    <Col>\n                                        <p>\n                                            {`이미지는 최대 ${maxNumber}개까지만 첨부할 수 있습니다`}\n                                        </p>\n                                        <br />\n                                    </Col>\n                                </Form.Group>\n                                <Button\n                                    type=\"submit\"\n                                    variant=\"outline-light\"\n                                    style={{\n                                        background: \"#e85255\",\n                                        fontSize: \"1.3rem\",\n                                    }}\n                                    onClick={onClickHandler}\n                                >\n                                    상품 등록\n                                </Button>\n                            </Form>\n                        </Col>\n                    </Row>\n                </div>\n            </Container>\n        </div>\n    );\n}\n\nexport default ProductRegister;\n","export default __webpack_public_path__ + \"static/media/box.0feca887.png\";","import React from \"react\";\nimport { Row, Col, ListGroup } from \"react-bootstrap\";\nimport EmptyBox from \"../assets/images/box.png\";\nimport MakeCard from \"./MakeCard\";\nconst EmptyCheck = ({ text, items }) => {\n    if (items.length == 0) {\n        return (\n            <Row>\n                <Col\n                    lg={{ span: 6, offset: 3 }}\n                    sm={{ span: 9, offset: 1 }}\n                    xs={{ span: 12 }}\n                >\n                    <p style={{ fontSize: \"2rem\", marginTop: 50 }}>{text}</p>\n                    <img\n                        style={{ margin: 100, maxWidth: \"50%\", height: \"auto\" }}\n                        src={EmptyBox}\n                    ></img>\n                </Col>\n            </Row>\n        );\n    } else {\n        return <ListGroup>{items}</ListGroup>;\n    }\n};\n\nexport function EmptyCheckProductByCategory({ text, items }) {\n    if (items.length == 0) {\n        return (\n            <Row>\n                <Col lg={{ span: 6, offset: 3 }} sm={{ span: 12, offset: 0 }}>\n                    <p style={{ fontSize: \"2rem\", marginTop: 50 }}>{text}</p>\n                    <img\n                        style={{ margin: 100, maxWidth: \"50%\", height: \"auto\" }}\n                        src={EmptyBox}\n                    ></img>\n                </Col>\n            </Row>\n        );\n    } else {\n        return <MakeCard products={items}></MakeCard>;\n    }\n}\n\nexport default EmptyCheck;\n","import { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { EmptyCheckProductByCategory } from \"./EmptyCheck\";\nimport { CategoryDirection } from \"./CategoryBanner\";\n\nfunction ProductByCategory({ match }) {\n    const { kind } = useSelector((state) => ({\n        kind: state.category.payload,\n    }));\n    const [products, setProducts] = useState([]);\n\n    const fetchProducts = async () => {\n        let res = await axios.get(\"/apis/v1/category/\" + match.params.number);\n        let filtered_product_list = res.data.payload.filter(\n            (product) => product.valid == true\n        );\n        let product_list = filtered_product_list.map((data) => {\n            return {\n                ...data,\n                id: data.pk,\n            };\n        });\n        setProducts(product_list);\n    };\n\n    useEffect(() => {\n        fetchProducts();\n    }, [match.params.number]);\n\n    return (\n        <div>\n            <Container>\n                <CategoryDirection\n                    tag1={\n                        kind[kind.findIndex((k) => k.pk == match.params.number)]\n                            .kind\n                    }\n                ></CategoryDirection>\n\n                <EmptyCheckProductByCategory\n                    text=\"등록된 물건이 없습니다.\"\n                    items={products}\n                ></EmptyCheckProductByCategory>\n            </Container>\n        </div>\n    );\n}\n\nexport default ProductByCategory;\n","import { Container, Row, Col } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../App.css\";\n\nconst UserBanner = () => {\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n\n    const userLoginChecked = () => {\n        if (!isLoggedIn || userData == null) {\n            return (\n                <Col lg={{ span: 6, offset: 11 }} sm={{ span: 8, offset: 10 }}>\n                    <Link to=\"/login\" style={{ textDecoration: \"none\" }}>\n                        <button style={{ background: \"white\", border: \"none\" }}>\n                            로그인\n                        </button>\n                    </Link>\n                    <Link to=\"/register\" style={{ textDecoration: \"none\" }}>\n                        <button style={{ background: \"white\", border: \"none\" }}>\n                            회원가입\n                        </button>\n                    </Link>\n                </Col>\n            );\n        }\n\n        return (\n            <Col lg={{ span: 6, offset: 8 }} sm={{ span: 12, offset: 3 }}>\n                <div style={{ fontSize: \"1.1rem\" }}>\n                    <Link\n                        to=\"/product/register\"\n                        style={{ textDecoration: \"none\" }}\n                    >\n                        <button style={{ background: \"white\", border: \"none\" }}>\n                            판매하기\n                        </button>\n                    </Link>\n                    <Link to=\"/mysales\" style={{ textDecoration: \"none\" }}>\n                        <button style={{ background: \"white\", border: \"none\" }}>\n                            내 상품\n                        </button>\n                    </Link>\n                    <Link to=\"/orderlist\" style={{ textDecoration: \"none\" }}>\n                        <button style={{ background: \"white\", border: \"none\" }}>\n                            주문 목록\n                        </button>\n                    </Link>\n\n                    <Link to=\"/purchaselist\" style={{ textDecoration: \"none\" }}>\n                        <button style={{ background: \"white\", border: \"none\" }}>\n                            구매 목록\n                        </button>\n                    </Link>\n                    <Link to=\"/likes\" style={{ textDecoration: \"none\" }}>\n                        <button style={{ background: \"white\", border: \"none\" }}>\n                            찜 목록\n                        </button>\n                    </Link>\n\n                    <Link to=\"/profile\" style={{ textDecoration: \"none\" }}>\n                        <button style={{ background: \"white\", border: \"none\" }}>\n                            프로필\n                        </button>\n                    </Link>\n                    <Link to=\"/logout\" style={{ textDecoration: \"none\" }}>\n                        <button style={{ background: \"white\", border: \"none\" }}>\n                            로그아웃\n                        </button>\n                    </Link>\n                </div>\n            </Col>\n        );\n    };\n\n    return (\n        <Container>\n            <Row style={{ margin: 10, marginTop: 20 }}>\n                {userLoginChecked()}\n            </Row>\n        </Container>\n    );\n};\n\nexport default UserBanner;\n","export default __webpack_public_path__ + \"static/media/heart.c412cbae.png\";","export default __webpack_public_path__ + \"static/media/heart_pressed.10d77658.png\";","export default __webpack_public_path__ + \"static/media/ther.f668cc66.png\";","export default __webpack_public_path__ + \"static/media/user2.98df88ac.png\";","import { Col, Row } from \"react-bootstrap\";\nimport ther from \"../assets/images/ther.png\";\nimport userImage from \"../assets/images/user2.png\";\nfunction Rating({ user, area }) {\n    if (!user) {\n        return;\n    }\n\n    let { username, temperature, celcius } = user;\n    let tmp = <div></div>;\n    let temp_type;\n\n    if (celcius) {\n        temp_type = temperature + \"℃\";\n    } else {\n        temp_type = temperature + \"°F\";\n    }\n\n    if (!temperature) {\n        tmp = (\n            <div style={{ padding: 10, fontSize: \"1.2rem\", color: \"black\" }}>\n                {\"36.5℃\"}\n            </div>\n        );\n    } else if (temperature > 36.5) {\n        tmp = (\n            <div\n                style={{\n                    padding: 15,\n                    fontSize: \"1.3rem\",\n                    color: \"green\",\n                    fontWeight: \"bold\",\n                }}\n            >\n                {temp_type}\n            </div>\n        );\n    } else if (temperature == 36.5) {\n        tmp = (\n            <div\n                style={{ padding: 15, fontSize: \"1.3rem\", fontWeight: \"bold\" }}\n            >\n                {temp_type}\n            </div>\n        );\n    } else {\n        tmp = <p style={{ fontSize: \"1.2rem\", color: \"red\" }}>{temp_type}</p>;\n    }\n    return (\n        <Row style={{ marginTop: 20, paddingTop: 20 }}>\n            <Col xs=\"3\" sm=\"3\" lg=\"2\">\n                <img\n                    style={{ maxWidth: \"100%\", height: \"auto\" }}\n                    src={userImage}\n                />\n            </Col>\n\n            <Col xs=\"3\" sm=\"4\" lg=\"4\">\n                {area ? (\n                    <div>\n                        <Row>{username}</Row>\n                        <Row style={{ padding: 1 }}>{area ? area : \"\"}</Row>\n                    </div>\n                ) : (\n                    <div>\n                        <Row>\n                            <p style={{ fontSize: \"1.5rem\", padding: 10 }}>\n                                {username}\n                            </p>\n                        </Row>\n                    </div>\n                )}\n            </Col>\n            <Col xs=\"6\" sm=\"5\" lg=\"6\">\n                <Row>\n                    <Col\n                        xs=\"5\"\n                        sm=\"6\"\n                        lg={{ span: 3, offset: 4 }}\n                        style={{ paddingTop: 0 }}\n                    >\n                        {tmp}\n                    </Col>\n                    <Col xs=\"5\" sm=\"6\" lg=\"4\">\n                        <img\n                            style={{ maxWidth: \"100%\", height: \"auto\" }}\n                            src={ther}\n                        />\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    );\n}\n\nexport default Rating;\n","import {\n    ListGroup,\n    Container,\n    Button,\n    Form,\n    Row,\n    Col,\n    ListGroupItem,\n} from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport EmptyHeartImg from \"../assets/images/heart.png\";\nimport HeartImg from \"../assets/images/heart_pressed.png\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport { setMoney, setDate } from \"./Convenient\";\nimport Rating from \"./Rating\";\nimport Modal from \"./Modal\";\n\nfunction ProductDetail({ match, history }) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [modalContents, setModalContents] = useState(\"\");\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n\n    const [amount, setAmount] = useState(1);\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n    const [like, setLike] = useState({ checked: false });\n    const [images, setImages] = useState([]);\n    const [product, setProduct] = useState({});\n    const [seller, setSeller] = useState({});\n\n    const fetchProduct = async () => {\n        let res = await axios.get(\"/apis/v1/product/\" + match.params.number);\n        let tmp = res.data.payload;\n        setProduct({\n            ...res.data.payload,\n            product_id: match.params.number,\n        });\n        setImages(tmp.image);\n\n        let res_seller = await axios.get(\"/apis/v1/user/\" + tmp.seller_id);\n        setSeller(res_seller.data.payload);\n\n        // check likes\n\n        if (isLoggedIn) {\n            let body = {\n                seller_id: res.data.payload.seller_id,\n                buyer_id: userData.user_id,\n                product_id: parseInt(match.params.number),\n            };\n            let res_likes = await axios.post(\"/apis/v1/carts/check\", body);\n            setLike(res_likes.data.payload);\n        }\n    };\n\n    useEffect(() => {\n        fetchProduct();\n    }, [match.params.number, like.checked]);\n\n    const onClickOrder = (e) => {\n        if (isLoggedIn === false || userData == null) {\n            setModalOpen(true);\n            setModalContents(\"로그인 후 이용하세요.\");\n            history.replace(\"/login\");\n        } else if (userData.user_id == product.seller_id) {\n            setModalOpen(true);\n            setModalContents(\"판매자가 구매할 수 없습니다.\");\n            e.preventDefault();\n        } else if (amount < 1 || amount > product.quantity) {\n            setModalOpen(true);\n            setModalContents(\"수량이 올바르지 않습니다.\");\n            e.preventDefault();\n        }\n    };\n\n    const onClickCart = async () => {\n        if (isLoggedIn === false) {\n            setModalOpen(true);\n            setModalContents(\"로그인 후 이용하세요.\");\n            return;\n        }\n\n        if (like.checked) {\n            await axios.delete(`/apis/v1/carts/${like[0]._id}`);\n            setLike({ checked: false });\n        } else {\n            let body = {\n                seller_id: product.seller_id,\n                buyer_id: userData.user_id,\n                product_id: parseInt(product.product_id),\n            };\n            await axios.post(\"/apis/v1/carts/\", body);\n            setLike({ checked: true });\n        }\n    };\n\n    const onChangeHandler = (e) => {\n        const { value } = e.target;\n        setAmount(parseInt(value));\n    };\n\n    const displayImages = () => {\n        if (images.length == 1) {\n            return;\n        }\n        return images.slice(1).map((img) => (\n            <ListGroupItem>\n                <br />\n                <img\n                    style={{\n                        width: \"60vw\",\n                    }}\n                    src={img}\n                ></img>\n                <br />\n                <br />\n            </ListGroupItem>\n        ));\n    };\n\n    return (\n        <div>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n            <Container>\n                <CategoryDirection\n                    tag1={product.category}\n                    tag2={product.name}\n                />\n                <Row>\n                    <Col xs=\"12\" sm=\"12\" lg=\"7\">\n                        <img\n                            style={{\n                                width: \"90%\",\n                                height: \"auto\",\n                            }}\n                            src={images[0]}\n                        ></img>\n                    </Col>\n                    <Col xs=\"12\" sm=\"10\" lg=\"5\">\n                        <Row style={{ paddingTop: 5 }}>\n                            <Rating user={seller} area={product.area} />\n                        </Row>\n                        <hr />\n\n                        <Row style={{ marginTop: 20, paddingTop: 20 }}>\n                            <Col xs=\"9\" sm=\"9\">\n                                <p\n                                    style={{\n                                        marginLeft: 20,\n                                        fontSize: \"2.2rem\",\n                                        fontWeight: \"bolder\",\n                                    }}\n                                >\n                                    {product.name}\n                                </p>\n                            </Col>\n                            <Col xs=\"3\" sm=\"3\">\n                                <img\n                                    style={{ width: \"2rem\" }}\n                                    src={\n                                        like.checked ? HeartImg : EmptyHeartImg\n                                    }\n                                    onClick={onClickCart}\n                                ></img>\n                            </Col>\n                        </Row>\n\n                        <p style={{ fontSize: \"2rem\", margin: 20 }}>\n                            {setMoney(product.price)} ₩\n                        </p>\n                        <p style={{ fontSize: \"1.5rem\", margin: 20 }}>\n                            남은 수량: {product.quantity}\n                        </p>\n                        <Row style={{ fontSize: \"1.5rem\", padding: 20 }}>\n                            <Col xs=\"6\" sm=\"12\" lg={4}>\n                                <p>선택 수량:</p>\n                            </Col>\n\n                            <Col xs=\"6\" sm=\"9\" lg={4}>\n                                <Form>\n                                    <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                        <Form.Control\n                                            style={{ fontSize: \"1.5rem\" }}\n                                            type=\"number\"\n                                            onChange={onChangeHandler}\n                                            value={amount}\n                                        />\n                                    </Form.Group>\n                                </Form>\n                            </Col>\n                        </Row>\n                        <Col>\n                            <p style={{ fontSize: \"3em\", margin: 20 }}>\n                                {product.price\n                                    ? (product.price * amount)\n                                          .toString()\n                                          .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                                    : product.price * amount}{\" \"}\n                                ₩\n                            </p>\n                        </Col>\n\n                        <Col xs=\"12\">\n                            <Link\n                                to={\n                                    isLoggedIn\n                                        ? {\n                                              pathname: `/purchase`,\n                                              state: {\n                                                  product: product,\n                                                  demand_amount: amount,\n                                              },\n                                          }\n                                        : \"/product/\" + match.params.number\n                                }\n                                style={{ textDecoration: \"none\" }}\n                            >\n                                <div className=\"d-grid gap-2\">\n                                    <button\n                                        className=\"emptyButton\"\n                                        onClick={onClickOrder}\n                                        style={{\n                                            fontSize: \"1.3rem\",\n                                            margin: 20,\n                                            height: 50,\n                                        }}\n                                    >\n                                        구매하기\n                                    </button>\n                                </div>\n                            </Link>\n                        </Col>\n                    </Col>\n                </Row>\n\n                <Row style={{ marginTop: 80 }}>\n                    <Col>\n                        <ListGroup>\n                            <ListGroupItem>\n                                <p style={{ margin: 10, fontSize: \"2rem\" }}>\n                                    상품 상세{\" \"}\n                                </p>\n                            </ListGroupItem>\n\n                            {displayImages()}\n\n                            <ListGroupItem>\n                                <p style={{ margin: 20, fontSize: \"2rem\" }}>\n                                    {product.description}\n                                </p>\n                            </ListGroupItem>\n                        </ListGroup>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default ProductDetail;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ListGroup, Container, Row, Col, Button } from \"react-bootstrap\";\nimport Title from \"./Title\";\nimport { useSelector } from \"react-redux\";\nimport placeholder from \"../assets/images/placeholder2.jpg\";\nimport EmptyCheck from \"./EmptyCheck\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport { setMoney, setDate } from \"./Convenient\";\nimport Modal from \"./Modal\";\n\nfunction OrderList({ history }) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [modalContents, setModalContents] = useState(\"\");\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    const [flag, setFlag] = useState(true);\n    const [orders, setOrders] = useState([]);\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n\n    const fetchOrders = async () => {\n        await axios.get(\"/apis/v1/order/\" + userData.user_id).then((res) => {\n            console.log(res.data.payload);\n            let tmp_orders = res.data.payload.filter(\n                (order) => order.sales_stage != \"SO\"\n            );\n            let orderlist = tmp_orders.map((order, index) => {\n                return (\n                    <ListGroup.Item key={index}>\n                        <Row style={{ padding: 10 }}>\n                            <Col sm=\"6\" lg=\"5\" xs=\"12\">\n                                <img\n                                    style={{\n                                        height: \"auto\",\n                                        maxWidth: \"100%\",\n                                        padding: 10,\n                                    }}\n                                    src={\n                                        order.base64_image_url\n                                            ? order.base64_image_url\n                                            : placeholder\n                                    }\n                                ></img>\n                            </Col>\n                            <Col sm=\"6\" lg={{ span: 6, offset: 1 }} xs=\"12\">\n                                <div style={{ paddingTop: 10 }}>\n                                    <p\n                                        style={{\n                                            fontSize: \"1.5rem\",\n                                            fontWeight: \"bold\",\n                                        }}\n                                    >\n                                        {order.name}\n                                    </p>\n                                    <p style={{ fontSize: \"1.3rem\" }}>\n                                        주문 수량: {order.demand_quantity}\n                                    </p>\n                                    <p style={{ fontSize: \"1.3rem\" }}>\n                                        지불 금액: {setMoney(order.price)} ₩\n                                    </p>\n                                    <p style={{ fontSize: \"1.3rem\" }}>\n                                        주문일: {setDate(order.created_at)}\n                                    </p>\n                                    <p style={{ fontSize: \"1.4rem\" }}>\n                                        주문 상태:{\" \"}\n                                        {order.sales_stage == \"S\" ? (\n                                            <span style={{ color: \"red\" }}>\n                                                판매자의 확인을 기다려주세요\n                                            </span>\n                                        ) : (\n                                            <span\n                                                style={{\n                                                    color: \"green\",\n                                                    fontWeight: \"bold\",\n                                                }}\n                                            >\n                                                예약되었습니다! 판매자와\n                                                거래하세요\n                                            </span>\n                                        )}\n                                    </p>\n                                </div>\n                                <Row>\n                                    <Col lg=\"6\" xs=\"12\">\n                                        <div className=\"d-grid gap-2\">\n                                            <button\n                                                className=\"emptyButton\"\n                                                style={{\n                                                    height: 40,\n                                                    fontSize: \"1.3rem\",\n                                                    marginTop: 10,\n                                                }}\n                                                onClick={() => {\n                                                    connectSeller(\n                                                        order.seller_id\n                                                    );\n                                                }}\n                                            >\n                                                판매자에게 연락하기\n                                            </button>\n                                        </div>\n                                    </Col>\n                                    <Col lg=\"6\" xs=\"12\">\n                                        <div className=\"d-grid gap-2\">\n                                            <button\n                                                className=\"filledButton\"\n                                                style={{\n                                                    height: 40,\n                                                    fontSize: \"1.3rem\",\n                                                    marginTop: 10,\n                                                }}\n                                                onClick={() => {\n                                                    onDeleteOrder(\n                                                        order.order_id\n                                                    );\n                                                }}\n                                            >\n                                                주문 취소하기\n                                            </button>\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </Col>\n\n                            <br />\n                        </Row>\n                    </ListGroup.Item>\n                );\n            });\n            setOrders(orderlist);\n        });\n    };\n\n    useEffect(() => {\n        fetchOrders();\n    }, [userData.user_id, flag]);\n\n    const connectSeller = async (seller_id) => {\n        let res = await axios.get(`/apis/v1/user/${seller_id}`);\n        let tmp = res.data.payload.phone_number;\n        let phone_number =\n            tmp.slice(0, 3) + \"-\" + tmp.slice(3, 7) + \"-\" + tmp.slice(7, 11);\n        setModalOpen(true);\n        setModalContents(`[${phone_number}]로 연락해주세요!`);\n    };\n\n    const onDeleteOrder = (order_id) => {\n        axios\n            .delete(`/apis/v1/order/${order_id}`)\n            .then((res) => {\n                alert(\"주문이 취소되었습니다.\");\n                setFlag(!flag);\n            })\n            .catch((e) => {\n                alert(\"문제가 발생했습니다. 관리자에게 문의해주세요\");\n            });\n    };\n\n    return (\n        <div>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n            <Container>\n                <CategoryDirection tag1={\"주문 목록\"}></CategoryDirection>\n\n                <EmptyCheck\n                    text={\"주문한 상품이 없습니다\"}\n                    items={orders}\n                ></EmptyCheck>\n            </Container>\n        </div>\n    );\n}\n\nexport default OrderList;\n","import { ListGroup, Container, Button, Form, Row, Col } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport { setMoney, setDate } from \"./Convenient\";\nimport Modal from \"./Modal\";\n\nfunction PurchasePage({ location, history }) {\n    const [modalOpen, setModalOpen] = useState(false);\n\n    const [modalContents, setModalContents] = useState(\"\");\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    const { product, demand_amount } = location.state;\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n    console.log(product);\n    console.log(demand_amount);\n\n    const [purchaseData, setPurchaseData] = useState({\n        address: null,\n        email_address: null,\n    });\n    const { address, email_address } = purchaseData;\n\n    const orderProduct = async () => {\n        if (!(address && email_address)) {\n            setModalOpen(true);\n            setModalContents(\"모든 항목을 입력해 주세요\");\n            return;\n        }\n        let body = {\n            ...product,\n            product_id: product.product_id,\n            seller_id: product.seller_id,\n            buyer_id: userData.user_id,\n            demand_amount: demand_amount,\n            address: address,\n            quantity: product.quantity,\n            email_address: email_address,\n        };\n        console.log(body);\n        await axios\n            .post(\"/apis/v1/order\", body)\n            .then((res) => {\n                history.replace(\"/orderlist\");\n            })\n            .catch((e) => {\n                // 정보가 없을 때 처리\n                alert(\"주문에 실패하였습니다. 관리자에게 문의해 주세요\");\n            });\n    };\n\n    const onClickOrder = () => {\n        if (isLoggedIn === false) {\n            alert(\"로그인 후 이용하세요.\");\n            return;\n        }\n        orderProduct();\n    };\n\n    const onChangeHandler = (e) => {\n        const { name, value } = e.target;\n        setPurchaseData({\n            ...purchaseData,\n            [name]: value,\n        });\n    };\n\n    return (\n        <div>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n            <Container>\n                <CategoryDirection\n                    tag1={product.category}\n                    tag2={product.name}\n                    tag3={\"구매하기\"}\n                ></CategoryDirection>\n                <br />\n                <p\n                    style={{\n                        fontSize: \"1.6rem\",\n                        fontWeight: \"bold\",\n                        margin: 15,\n                    }}\n                >\n                    상품 정보를 확인하세요\n                </p>\n                <hr />\n                <Row>\n                    <Form style={{ fontSize: \"1.3rem\" }}>\n                        <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                            <Col\n                                lg={{ span: 4, offset: 1 }}\n                                sm={{ span: 4, offset: 1 }}\n                                xs={{ span: 5, offset: 1 }}\n                            >\n                                <Form.Label style={{ padding: 5 }}>\n                                    카테고리\n                                </Form.Label>\n                            </Col>\n\n                            <Col lg=\"4\" sm=\"6\" xs=\"6\">\n                                <Form.Control\n                                    style={{ fontSize: \"1.3rem\" }}\n                                    plaintext\n                                    readOnly\n                                    defaultValue={product.category}\n                                />\n                            </Col>\n                        </Form.Group>\n                        <Form.Group\n                            as={Row}\n                            className=\"mb-3\"\n                            controlId=\"formPlaintextEmail\"\n                        >\n                            <Col\n                                lg={{ span: 4, offset: 1 }}\n                                sm={{ span: 4, offset: 1 }}\n                                xs={{ span: 5, offset: 1 }}\n                            >\n                                <Form.Label style={{ padding: 5 }}>\n                                    상품명\n                                </Form.Label>\n                            </Col>\n\n                            <Col lg=\"4\" sm=\"6\" xs=\"6\">\n                                <Form.Control\n                                    style={{ fontSize: \"1.3rem\" }}\n                                    plaintext\n                                    readOnly\n                                    defaultValue={product.name}\n                                />\n                            </Col>\n                        </Form.Group>\n                        <Form.Group\n                            as={Row}\n                            className=\"mb-3\"\n                            controlId=\"formPlaintextEmail\"\n                        >\n                            <Col\n                                lg={{ span: 4, offset: 1 }}\n                                sm={{ span: 4, offset: 1 }}\n                                xs={{ span: 5, offset: 1 }}\n                            >\n                                <Form.Label style={{ padding: 5 }}>\n                                    상품 가격\n                                </Form.Label>\n                            </Col>\n\n                            <Col lg=\"4\" sm=\"6\" xs=\"6\">\n                                <Form.Control\n                                    style={{ fontSize: \"1.3rem\" }}\n                                    plaintext\n                                    readOnly\n                                    defaultValue={setMoney(product.price)}\n                                />\n                            </Col>\n                        </Form.Group>\n                        <Form.Group\n                            as={Row}\n                            className=\"mb-3\"\n                            controlId=\"formPlaintextEmail\"\n                        >\n                            <Col\n                                lg={{ span: 4, offset: 1 }}\n                                sm={{ span: 4, offset: 1 }}\n                                xs={{ span: 5, offset: 1 }}\n                            >\n                                <Form.Label style={{ padding: 5 }}>\n                                    상품 수량\n                                </Form.Label>\n                            </Col>\n\n                            <Col lg=\"4\" sm=\"6\" xs=\"6\">\n                                <Form.Control\n                                    style={{ fontSize: \"1.3rem\" }}\n                                    plaintext\n                                    readOnly\n                                    defaultValue={product.quantity}\n                                />\n                            </Col>\n                        </Form.Group>\n                    </Form>\n\n                    <p\n                        style={{\n                            fontSize: \"1.6rem\",\n                            fontWeight: \"bold\",\n                            marginTop: 50,\n                            margin: 15,\n                        }}\n                    >\n                        구매 정보를 입력하세요\n                    </p>\n                    <hr />\n\n                    <Form>\n                        <Form.Group\n                            as={Row}\n                            controlId=\"exampleForm.ControlInput1\"\n                        >\n                            <Col\n                                lg={{ span: 4, offset: 1 }}\n                                sm={{ span: 4, offset: 1 }}\n                                xs={{ span: 5, offset: 1 }}\n                            >\n                                <Form.Label\n                                    style={{ fontSize: \"1.3rem\", margin: 10 }}\n                                >\n                                    구매 수량\n                                </Form.Label>\n                            </Col>\n\n                            <Col lg=\"2\" sm=\"2\" xs=\"4\">\n                                <Form.Control\n                                    name=\"demand_amount\"\n                                    value={demand_amount}\n                                    disabled\n                                />\n                            </Col>\n                        </Form.Group>\n\n                        <Form.Group\n                            as={Row}\n                            controlId=\"exampleForm.ControlInput1\"\n                        >\n                            <Col\n                                lg={{ span: 4, offset: 1 }}\n                                sm={{ span: 4, offset: 1 }}\n                                xs={{ span: 5, offset: 1 }}\n                            >\n                                <Form.Label\n                                    style={{ fontSize: \"1.3rem\", margin: 10 }}\n                                >\n                                    이메일 주소\n                                </Form.Label>\n                            </Col>\n\n                            <Col lg=\"6\" sm=\"6\" xs=\"6\">\n                                <Form.Control\n                                    name=\"email_address\"\n                                    value={email_address}\n                                    onChange={onChangeHandler}\n                                    placeholder=\"거래 정보를 받을 이메일을 적어주세요\"\n                                />\n                            </Col>\n                        </Form.Group>\n\n                        <Form.Group\n                            as={Row}\n                            controlId=\"exampleForm.ControlInput1\"\n                        >\n                            <Col\n                                lg={{ span: 4, offset: 1 }}\n                                sm={{ span: 4, offset: 1 }}\n                                xs={{ span: 5, offset: 1 }}\n                            >\n                                <Form.Label\n                                    style={{ fontSize: \"1.3rem\", margin: 10 }}\n                                >\n                                    거래 장소\n                                </Form.Label>\n                            </Col>\n                            <Col lg=\"6\" sm=\"6\" xs=\"6\">\n                                <Form.Control\n                                    name=\"address\"\n                                    value={address}\n                                    onChange={onChangeHandler}\n                                    placeholder=\"거래 선호 지역을 적어주세요\"\n                                />\n                            </Col>\n                        </Form.Group>\n\n                        <br />\n                    </Form>\n                    <Col\n                        lg={{ span: 6, offset: 5 }}\n                        sm={{ span: 6, offset: 5 }}\n                        xs={{ span: 12 }}\n                    >\n                        <h1>총 가격: {product.price * demand_amount}원</h1>\n                        <div className=\"d-grid gap-2\">\n                            <br />\n                            <button\n                                style={{ fontSize: \"1.4rem\" }}\n                                className=\"emptyButton\"\n                                onClick={onClickOrder}\n                            >\n                                구매하기\n                            </button>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default PurchasePage;\n","import React, { useState } from \"react\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport Title from \"./Title\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { loginAction, logoutAction } from \"../modules/user\";\nimport { CategoryDirection } from \"./CategoryBanner\";\n\nfunction Profile({ history }) {\n    const dispatch = useDispatch();\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n\n    console.log(userData);\n\n    const [user, setUser] = useState({\n        username: userData.username,\n        email: userData.useremail,\n        phone_number: userData.phone_number,\n    });\n    const { username, email, phone_number } = user;\n    const user_id = userData.user_id;\n\n    const onChangeHandler = (e) => {\n        const { name, value } = e.target;\n        setUser({\n            ...user,\n            [name]: value,\n        });\n    };\n    const onClickEditHandler = async (e) => {\n        e.preventDefault();\n        let body = {\n            user_id: user_id,\n            username: username,\n            useremail: email,\n            phone_number: phone_number,\n        };\n        await axios\n            .post(`/apis/v1/user/${user_id}`, body)\n            .then((response) => {\n                alert(\"사용자 정보 수정 완료\");\n                dispatch(loginAction(body));\n            })\n            .catch((e) => {\n                alert(\"사용자 정보 수정 실패\");\n            });\n    };\n\n    const onClickDeleteHandler = async (e) => {\n        e.preventDefault();\n        await axios\n            .delete(`/apis/v1/user/${user_id}`)\n            .then((response) => {\n                console.log(response);\n                alert(\"회원 탈퇴 완료\");\n                dispatch(logoutAction());\n                history.replace(\"/\");\n            })\n            .catch((e) => {\n                alert(\"회원 탈퇴 실패\");\n            });\n    };\n\n    return (\n        <div>\n            <Container>\n                <CategoryDirection tag1={\"내정보 관리\"}></CategoryDirection>\n                <br />\n                <div style={{ fontSize: \"1.2rem\" }}>\n                    <Row>\n                        <Col\n                            lg={{ span: 10, offset: 3 }}\n                            sm={{ span: 12, offset: 0 }}\n                        >\n                            <Form>\n                                <Form.Group\n                                    as={Row}\n                                    controlId=\"exampleForm.ControlInput1\"\n                                >\n                                    <Form.Label\n                                        column\n                                        sm=\"2\"\n                                        lg=\"1\"\n                                        style={{ padding: 10 }}\n                                    >\n                                        아이디\n                                    </Form.Label>\n                                    <Col sm=\"8\" lg=\"6\">\n                                        <Form.Control\n                                            size=\"lg\"\n                                            name=\"username\"\n                                            value={username}\n                                            onChange={onChangeHandler}\n                                            placeholder=\"ID를 입력해주세요\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n                                <br />\n                                <Form.Group\n                                    as={Row}\n                                    controlId=\"exampleForm.ControlInput1\"\n                                >\n                                    <Form.Label\n                                        column\n                                        sm=\"2\"\n                                        lg=\"1\"\n                                        style={{ padding: 10 }}\n                                    >\n                                        이메일\n                                    </Form.Label>\n                                    <Col sm=\"8\" lg=\"6\">\n                                        <Form.Control\n                                            size=\"lg\"\n                                            name=\"email\"\n                                            value={email}\n                                            onChange={onChangeHandler}\n                                            placeholder=\"email을 입력해주세요\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n                                <br />\n                                <Form.Group\n                                    as={Row}\n                                    controlId=\"exampleForm.ControlInput1\"\n                                >\n                                    <Form.Label\n                                        column\n                                        sm=\"2\"\n                                        lg=\"1\"\n                                        style={{ padding: 10 }}\n                                    >\n                                        전화번호\n                                    </Form.Label>\n                                    <Col sm=\"8\" lg=\"6\">\n                                        <Form.Control\n                                            size=\"lg\"\n                                            name=\"phone_number\"\n                                            value={phone_number}\n                                            onChange={onChangeHandler}\n                                            placeholder=\"대시(-) 없이 입력해주세요\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n                                <br />\n\n                                <Row>\n                                    <Col\n                                        lg={{ span: 2, offset: 3 }}\n                                        sm={{ span: 3, offset: 4 }}\n                                    >\n                                        <div className=\"d-grid gap-2\">\n                                            <button\n                                                className=\"filledButton\"\n                                                style={{\n                                                    fontSize: \"1.3rem\",\n                                                    height: 40,\n                                                }}\n                                                onClick={onClickEditHandler}\n                                            >\n                                                수정\n                                            </button>\n                                            <span> </span>\n                                        </div>\n                                    </Col>\n                                    <Col\n                                        lg={{ span: 2, offset: 0 }}\n                                        sm={{ span: 3, offset: 0 }}\n                                    >\n                                        <div className=\"d-grid gap-2\">\n                                            <button\n                                                className=\"emptyButton\"\n                                                style={{\n                                                    fontSize: \"1.3rem\",\n                                                    height: 40,\n                                                }}\n                                                onClick={onClickDeleteHandler}\n                                            >\n                                                회원 탈퇴\n                                            </button>\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </Form>\n                        </Col>\n                    </Row>\n                </div>\n            </Container>\n        </div>\n    );\n}\n\nexport default Profile;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ListGroup, Container, Row, Col, Button } from \"react-bootstrap\";\nimport Title from \"./Title\";\nimport { useSelector } from \"react-redux\";\nimport placeholder from \"../assets/images/placeholder2.jpg\";\nimport { Link } from \"react-router-dom\";\nimport EmptyCheck from \"./EmptyCheck\";\nimport { setDate, setMoney } from \"./Convenient\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport Modal from \"./Modal\";\n\nfunction MySales({ history }) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [modalContents, setModalContents] = useState(\"\");\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n\n    const [flag, setFlag] = useState(true);\n    const [products, setProducts] = useState([]);\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n\n    const fetchOrders = async () => {\n        const res = await axios.get(\n            \"/apis/v1/product/user/\" + userData.user_id\n        );\n        let product_list = res.data.payload.filter((p) => p.valid === true);\n        product_list = product_list.map((product, index) => {\n            let path = \"/mysales/\" + product.pk;\n            return (\n                <ListGroup.Item key={index}>\n                    <Row style={{ padding: 30 }}>\n                        <Col\n                            sm={{ span: 6, offset: 0 }}\n                            lg={{ span: 5, offset: 0 }}\n                            xs=\"12\"\n                        >\n                            <Link\n                                style={{\n                                    textDecoration: \"none\",\n                                    color: \"inherit\",\n                                }}\n                                key={index}\n                                to={path}\n                            >\n                                <img\n                                    style={{ maxWidth: \"100%\", height: \"auto\" }}\n                                    src={\n                                        product.base64_image_url\n                                            ? product.base64_image_url\n                                            : placeholder\n                                    }\n                                ></img>\n                            </Link>\n                        </Col>\n\n                        <Col sm=\"6\" lg={{ span: 5, offset: 1 }} xs=\"12\">\n                            <div style={{ paddingTop: 10 }}>\n                                <p\n                                    style={{\n                                        fontSize: \"1.5rem\",\n                                        fontWeight: \"bold\",\n                                    }}\n                                >\n                                    {product.name}\n                                </p>\n                                <p style={{ fontSize: \"1.3rem\" }}>\n                                    총 수량: {product.quantity}\n                                </p>\n                                <p style={{ fontSize: \"1.2rem\" }}>\n                                    가격: {setMoney(product.price)} ₩\n                                </p>\n                                <p style={{ fontSize: \"1.2rem\" }}>\n                                    등록 날짜: {setDate(product.created_at)}\n                                </p>\n                                <Link\n                                    style={{\n                                        textDecoration: \"none\",\n                                        color: \"inherit\",\n                                    }}\n                                    key={index}\n                                    to={path}\n                                >\n                                    <p\n                                        style={{\n                                            fontSize: \"1.3rem\",\n                                            color: \"green\",\n                                        }}\n                                    >\n                                        주문한 사람이 있는지 확인해주세요!\n                                    </p>\n                                </Link>\n                                <Button\n                                    variant=\"outline-light\"\n                                    style={{\n                                        fontSize: \"1rem\",\n                                        background: \"#e85255\",\n                                        fontSize: \"1.3rem\",\n                                    }}\n                                    onClick={(e) =>\n                                        onDeleteProduct(product.pk, e)\n                                    }\n                                >\n                                    상품 등록 취소\n                                </Button>\n                            </div>\n                        </Col>\n                    </Row>\n                </ListGroup.Item>\n            );\n        });\n        setProducts(product_list);\n    };\n\n    const onDeleteProduct = async (product_id, e) => {\n        setModalOpen(true);\n        setModalContents(\"상품 등록을 취소합니다\");\n        axios\n            .delete(`/apis/v1/product/${product_id}`)\n            .then((res) => {\n                setFlag(!flag);\n            })\n            .catch((e) => {\n                setModalOpen(true);\n                setModalContents(\"문제가 발생했습니다. 관리자에게 문의하세요.\");\n            });\n    };\n\n    useEffect(() => {\n        fetchOrders();\n    }, [userData.user_id, flag]);\n\n    return (\n        <div>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n\n            <Container>\n                <CategoryDirection tag1={\"내 상품 목록\"}></CategoryDirection>\n\n                <EmptyCheck\n                    text={\"등록한 상품이 없습니다\"}\n                    items={products}\n                ></EmptyCheck>\n            </Container>\n        </div>\n    );\n}\n\nexport default MySales;\n","export default __webpack_public_path__ + \"static/media/good.01d38d4e.png\";","export default __webpack_public_path__ + \"static/media/bad.b09fe086.png\";","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ListGroup, Container, Row, Col } from \"react-bootstrap\";\nimport Title from \"./Title\";\nimport { useSelector } from \"react-redux\";\nimport placeholder from \"../assets/images/placeholder2.jpg\";\nimport good from \"../assets/images/good.png\";\nimport bad from \"../assets/images/bad.png\";\n\nimport EmptyCheck from \"./EmptyCheck\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport { setMoney, setDate } from \"./Convenient\";\nimport Modal from \"./Modal\";\nimport Rating from \"./Rating\";\n\nfunction PurchaseList({ history }) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [modalContents, setModalContents] = useState(\"\");\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    var products = [];\n    const [orders, setOrders] = useState([]);\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n    const [flag, setFlag] = useState(true);\n\n    const fetchUserInfo = async (userId, orderId) => {\n        let res = await axios.get(\"/apis/v1/user/\" + userId);\n        setModalOpen(true);\n        let data = res.data.payload;\n        setModalContents(\n            <Container>\n                <Rating user={data}></Rating>\n                <Row style={{ marginTop: 20 }}>\n                    <Col>이메일: {data.useremail}</Col>\n                </Row>\n                <Row style={{ marginTop: 20 }}>\n                    <Col>계정 생성일: {setDate(data.created_at)}</Col>\n                </Row>\n                <Row style={{ marginTop: 20 }}>\n                    <Col\n                        lg={{ span: 4, offset: 2 }}\n                        sm={{ span: 4, offset: 2 }}\n                        xs={{ span: 4, offset: 2 }}\n                    >\n                        <img\n                            style={{ width: 30, height: 30 }}\n                            src={good}\n                            onClick={() => evaluateSellerGood(userId, orderId)}\n                        ></img>\n                        <button\n                            style={{ background: \"white\", color: \"green\" }}\n                            onClick={() => evaluateSellerGood(userId, orderId)}\n                        >\n                            좋아요!\n                        </button>\n                    </Col>\n                    <Col lg={{ span: 4 }} sm={{ span: 4 }} xs={{ span: 4 }}>\n                        <img\n                            style={{ width: 30, height: 30 }}\n                            src={bad}\n                            onClick={() => evaluateSellerBad(userId, orderId)}\n                        ></img>\n                        <button\n                            style={{ background: \"white\", color: \"red\" }}\n                            onClick={() => evaluateSellerBad(userId, orderId)}\n                        >\n                            싫어요!\n                        </button>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    };\n\n    const evaluateSellerGood = async (userId, orderId) => {\n        await axios.get(`/apis/v1/ratings/${userId}/up`);\n        await axios.post(`/apis/v1/order/${orderId}`, { rating_check: true });\n\n        setModalOpen(false);\n        setFlag(!flag);\n    };\n    const evaluateSellerBad = async (userId, orderId) => {\n        await axios.get(`/apis/v1/ratings/${userId}/down`);\n        await axios.post(`/apis/v1/order/${orderId}`, { rating_check: true });\n        setModalOpen(false);\n        setFlag(!flag);\n    };\n\n    const fetchOrders = async () => {\n        let res = await axios.get(\"/apis/v1/order/\" + userData.user_id);\n        let tmp_order = res.data.payload.filter(\n            (order) => order.sales_stage == \"SO\"\n        );\n\n        let orderlist = tmp_order.map((order, index) => {\n            return (\n                <ListGroup.Item key={index}>\n                    <Row style={{ margin: 30 }}>\n                        <Col sm=\"6\" lg=\"5\" xs=\"12\">\n                            <img\n                                style={{\n                                    height: \"auto\",\n                                    maxWidth: \"100%\",\n                                    height: \"auto\",\n                                }}\n                                src={\n                                    order.base64_image_url\n                                        ? order.base64_image_url\n                                        : placeholder\n                                }\n                            ></img>\n                        </Col>\n                        <Col sm=\"6\" lg={{ span: 6, offset: 1 }} xs=\"12\">\n                            <div style={{ paddingTop: 10 }}>\n                                <p\n                                    style={{\n                                        fontSize: \"1.5rem\",\n                                        fontWeight: \"bold\",\n                                    }}\n                                >\n                                    {order.name}\n                                </p>\n                                <p style={{ fontSize: \"1.3rem\" }}>\n                                    구매량: {order.demand_quantity}\n                                </p>\n                                <p style={{ fontSize: \"1.3rem\" }}>\n                                    지불 금액: {setMoney(order.price)} ₩\n                                </p>\n                                <p style={{ fontSize: \"1.3rem\" }}>\n                                    주문 날짜: {setDate(order.created_at)}\n                                </p>\n                                {!order.rating_check ? (\n                                    <div>\n                                        <p\n                                            style={{\n                                                fontSize: \"1.3rem\",\n                                                color: \"blue\",\n                                            }}\n                                        >\n                                            판매자의 매너를 평가해볼까요?\n                                        </p>\n                                        <button\n                                            className=\"emptyButton\"\n                                            onClick={() =>\n                                                fetchUserInfo(\n                                                    order.seller_id,\n                                                    order.order_id\n                                                )\n                                            }\n                                            style={{\n                                                height: \"4rem\",\n                                                fontSize: \"1.3rem\",\n                                            }}\n                                        >\n                                            매너 평가하기\n                                        </button>\n                                    </div>\n                                ) : (\n                                    <div>\n                                        <p\n                                            style={{\n                                                fontSize: \"1.3rem\",\n                                                color: \"green\",\n                                            }}\n                                        >\n                                            매너 평가를 완료했습니다.\n                                        </p>\n                                    </div>\n                                )}\n                            </div>\n                        </Col>\n                    </Row>\n                </ListGroup.Item>\n            );\n        });\n\n        setOrders(orderlist);\n    };\n\n    useEffect(() => {\n        fetchOrders();\n    }, [userData.user_id, flag]);\n\n    return (\n        <div>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n\n            <Container>\n                <CategoryDirection tag1={\"구매 목록\"}></CategoryDirection>\n                <EmptyCheck\n                    text={\"구매한 상품이 없습니다\"}\n                    items={orders}\n                ></EmptyCheck>\n            </Container>\n        </div>\n    );\n}\n\nexport default PurchaseList;\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { ListGroup, Container, Row, Col, Card } from \"react-bootstrap\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport { useSelector } from \"react-redux\";\nimport arrow from \"../assets/images/arrow.png\";\nimport EmptyBox from \"../assets/images/box.png\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport { setMoney, setDate } from \"./Convenient\";\nimport Rating from \"./Rating\";\nimport Modal from \"./Modal\";\n\nfunction MySalesDetail({ history, match }) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [modalContents, setModalContents] = useState(\"\");\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    const [btnValue, setBtnValue] = useState(\"\");\n    const [orders, setOrders] = useState([]);\n    const [images, setImages] = useState([]);\n    const [product, setProduct] = useState({});\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n\n    const fetchProduct = async () => {\n        let res = await axios.get(\"/apis/v1/product/\" + match.params.number);\n\n        setProduct({\n            ...res.data.payload,\n            product_id: match.params.number,\n        });\n        let image_list = await res.data.payload.image.map((img) => (\n            <div>\n                <br />\n                <img\n                    style={{\n                        maxWidth: \"100%\",\n                        height: \"auto\",\n                    }}\n                    src={img}\n                ></img>\n                <br />\n                <br />\n            </div>\n        ));\n        setImages(image_list);\n    };\n\n    const fetchUserInfo = async (userId) => {\n        let res = await axios.get(\"/apis/v1/user/\" + userId);\n        setModalOpen(true);\n        let data = res.data.payload;\n        setModalContents(\n            <Container>\n                <Rating user={data}></Rating>\n                <Row style={{ marginTop: 20 }}>\n                    <Col>이메일: {data.useremail}</Col>\n                </Row>\n                <Row style={{ marginTop: 20 }}>\n                    <Col>계정 생성일: {setDate(data.created_at)}</Col>\n                </Row>\n            </Container>\n        );\n    };\n\n    const fetchOrders = async () => {\n        let res = await axios.get(\"/apis/v1/order/sale/\" + match.params.number);\n        let tmp_orders = res.data.payload.filter(\n            (order) => order.sales_stage != \"SO\"\n        );\n\n        console.log(tmp_orders);\n        let orderlist = tmp_orders.map((order, index) => {\n            let sale_status = \"\";\n            if (order.sales_stage == \"S\") sale_status = \"판매 중\";\n            else if (order.sales_stage == \"SR\") sale_status = \"예약 중\";\n            else sale_status = \"판매 완료\";\n\n            return (\n                <ListGroup.Item key={index}>\n                    <Row style={{ margin: 20 }}>\n                        <Col>\n                            <p style={{ fontSize: \"1.5rem\" }}>\n                                주문자 선호 장소: {order.address}\n                            </p>\n                            <p style={{ fontSize: \"1.5rem\" }}>\n                                연락처: {order.phone_number}\n                            </p>\n                            <p style={{ fontSize: \"1.5rem\" }}>\n                                주문량: {order.demand_quantity}\n                            </p>\n                            <p style={{ fontSize: \"1.5rem\" }}>\n                                가격: {setMoney(order.price)} 원\n                            </p>\n                            <p style={{ fontSize: \"1.5rem\" }}>\n                                주문 일짜: {setDate(order.created_at)}\n                            </p>\n                        </Col>\n                        <Col>\n                            <Row>\n                                <Row>\n                                    <Col>\n                                        <button\n                                            className=\"emptyButton\"\n                                            onClick={() =>\n                                                fetchUserInfo(order.buyer_id)\n                                            }\n                                            style={{\n                                                height: \"4rem\",\n                                                fontSize: \"1.3rem\",\n                                            }}\n                                        >\n                                            주문자 정보 보기\n                                        </button>\n                                    </Col>\n                                </Row>\n                                <Row style={{ marginTop: 20 }}>\n                                    <Col lg=\"3\" sm=\"4\" xs=\"12\">\n                                        <div className=\"dropdown\">\n                                            <button\n                                                style={{\n                                                    height: \"4rem\",\n                                                    padding: 10,\n                                                    width: 100,\n                                                }}\n                                                className=\"dropdown-button \"\n                                            >\n                                                {btnValue\n                                                    ? btnValue\n                                                    : sale_status}\n                                            </button>\n                                            <div class=\"dropdown-content\">\n                                                <a\n                                                    name=\"예약 중\"\n                                                    onClick={(e) => {\n                                                        onClickHandler(\n                                                            {\n                                                                order,\n                                                                product_id:\n                                                                    match.params\n                                                                        .number,\n                                                            },\n                                                            e\n                                                        );\n                                                    }}\n                                                >\n                                                    예약 중\n                                                </a>\n                                                <a\n                                                    name=\"판매 완료\"\n                                                    onClick={(e) => {\n                                                        onClickHandler(\n                                                            {\n                                                                order,\n                                                                product_id:\n                                                                    match.params\n                                                                        .number,\n                                                            },\n                                                            e\n                                                        );\n                                                    }}\n                                                >\n                                                    판매 완료\n                                                </a>\n                                                <a\n                                                    name=\"거래 취소\"\n                                                    onClick={(e) => {\n                                                        onClickHandler(\n                                                            {\n                                                                order,\n                                                                product_id:\n                                                                    match.params\n                                                                        .number,\n                                                            },\n                                                            e\n                                                        );\n                                                    }}\n                                                >\n                                                    거래 취소\n                                                </a>\n                                            </div>\n                                        </div>\n                                    </Col>\n                                    <Col lg=\"6\" sm=\"12\" xs=\"12\">\n                                        <p\n                                            style={{\n                                                fontSize: \"1.2rem\",\n                                                padding: 10,\n                                                color: \"red\",\n                                            }}\n                                        >\n                                            주문 상태를 조회해주세요!\n                                        </p>\n                                    </Col>\n                                </Row>\n                            </Row>\n                        </Col>\n                    </Row>\n                </ListGroup.Item>\n            );\n        });\n        setOrders(orderlist);\n    };\n\n    useEffect(() => {\n        fetchProduct();\n        fetchOrders();\n    }, [userData.user_id, btnValue]);\n\n    const onClickHandler = async (orderData, e) => {\n        const { product_id, order } = orderData;\n\n        if (e.target.name === \"판매 완료\") {\n            let data = {\n                sales_stage: \"SO\",\n                product_id,\n                demand_quantity: order.demand_quantity,\n                total_quantity: order.total_quantity,\n            };\n\n            axios\n                .post(\"/apis/v1/order/\" + order.order_id, data)\n                .then((res) => {\n                    setModalOpen(true);\n                    setModalContents(\"거래가 완료되었습니다\");\n                })\n                .catch((e) => {\n                    setModalOpen(true);\n                    setModalContents(\"Error: 관리자에게 문의하세요\");\n                });\n        } else if (e.target.name === \"예약 중\") {\n            let data = { sales_stage: \"SR\" };\n            axios\n                .post(\"/apis/v1/order/\" + order.order_id, data)\n                .then((res) => {\n                    setModalOpen(true);\n                    setModalContents(\"거래가 예약되었습니다\");\n                })\n                .catch((e) => {\n                    setModalOpen(true);\n                    setModalContents(\"Error: 관리자에게 문의하세요\");\n                });\n        } else {\n            axios\n                .delete(\"/apis/v1/order/\" + order.order_id)\n                .then((res) => {\n                    setModalOpen(true);\n                    setModalContents(\"주문이 취소되었습니다.\");\n                })\n                .catch((e) => {\n                    setModalOpen(true);\n                    setModalContents(\"Error: 관리자에게 문의하세요\");\n                });\n        }\n        setBtnValue(e.target.name);\n    };\n\n    return (\n        <div>\n            <Modal open={modalOpen} close={closeModal}>\n                {modalContents}\n            </Modal>\n            <Container>\n                <CategoryDirection\n                    tag1={\"내 상품 목록\"}\n                    tag2={product.name}\n                ></CategoryDirection>\n\n                <Accordion style={{ marginTop: 100 }}>\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                            <p style={{ fontSize: \"1.7rem\", margin: 15 }}>\n                                내 상품 확인하기\n                            </p>\n                        </Accordion.Toggle>\n\n                        <Accordion.Collapse eventKey=\"0\">\n                            <Card.Body>\n                                <Row className=\"justify-content-md-center\">\n                                    <Col>\n                                        <ListGroup>\n                                            <ListGroup.Item\n                                                style={{ fontSize: \"1.3rem\" }}\n                                            >\n                                                카테고리: {product.category}\n                                            </ListGroup.Item>\n                                            <ListGroup.Item\n                                                style={{ fontSize: \"1.3rem\" }}\n                                            >\n                                                상품명: {product.name}\n                                            </ListGroup.Item>\n                                            <ListGroup.Item\n                                                style={{ fontSize: \"1.3rem\" }}\n                                            >\n                                                가격: {setMoney(product.price)}{\" \"}\n                                                원\n                                            </ListGroup.Item>\n                                            <ListGroup.Item\n                                                style={{ fontSize: \"1.3rem\" }}\n                                            >\n                                                수량: {product.quantity}\n                                            </ListGroup.Item>\n                                            <ListGroup.Item\n                                                style={{ fontSize: \"1.3rem\" }}\n                                            >\n                                                설명: {product.description}\n                                            </ListGroup.Item>\n                                            <ListGroup.Item\n                                                style={{ fontSize: \"1.3rem\" }}\n                                            >\n                                                등록일:{\" \"}\n                                                {setDate(product.created_at)}\n                                            </ListGroup.Item>\n\n                                            <ListGroup.Item>\n                                                {images}\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                        <br />\n                                    </Col>\n                                </Row>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                </Accordion>\n\n                <ListGroup style={{ marginTop: 20 }}>\n                    {orders.length == 0 ? (\n                        <div>\n                            <br />\n                            <p style={{ fontSize: \"1.7rem\" }}>\n                                아직 주문한 사람이 없네요...\n                            </p>\n                            <img\n                                style={{ maxWidth: \"50%\", height: \"auto\" }}\n                                src={EmptyBox}\n                            ></img>\n                        </div>\n                    ) : (\n                        <div>\n                            <br />\n                            <p\n                                className=\"primaryColor\"\n                                style={{ fontSize: \"1.8rem\", margin: 20 }}\n                            >\n                                주문 요청이 들어왔어요!\n                            </p>\n                            {orders}\n                        </div>\n                    )}\n                </ListGroup>\n            </Container>\n        </div>\n    );\n}\n\nexport default MySalesDetail;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ListGroup, Container, Row, Col, Button } from \"react-bootstrap\";\nimport Title from \"./Title\";\nimport { useSelector } from \"react-redux\";\nimport EmptyCheck from \"./EmptyCheck\";\nimport { Link } from \"react-router-dom\";\nimport { CategoryDirection } from \"./CategoryBanner\";\nimport { setDate, setMoney } from \"./Convenient\";\n\nfunction Likes({ history }) {\n    const [carts, setCarts] = useState([]);\n    const { isLoggedIn, userData } = useSelector((state) => ({\n        isLoggedIn: state.user.isLoggedIn,\n        userData: state.user.payload,\n    }));\n\n    const fetchCarts = async () => {\n        let res = await axios.get(\"/apis/v1/carts/users/\" + userData.user_id);\n        let cartList = res.data.payload;\n        let res_product = await axios.get(\"/apis/v1/product\");\n\n        let productList = res_product.data.payload;\n        cartList = cartList.map((cart, index) => {\n            console.log(productList);\n            const tmp_product = productList.find(\n                (product) => product.pk == cart.productId\n            );\n            if (!tmp_product) {\n                return;\n            }\n            let path = `/product/${tmp_product.pk}`;\n            return (\n                <div>\n                    <Link\n                        to={path}\n                        style={{ textDecoration: \"none\", color: \"inherit\" }}\n                    >\n                        <ListGroup.Item key={index}>\n                            <Row style={{ margin: 30 }}>\n                                <Col sm=\"6\" lg=\"6\" xs=\"12\">\n                                    <img\n                                        style={{\n                                            height: \"auto\",\n                                            maxWidth: \"100%\",\n                                            objectFit: \"cover\",\n                                        }}\n                                        src={tmp_product.base64_image_url}\n                                    ></img>\n                                </Col>\n                                <Col sm=\"6\" lg=\"6\" xs=\"12\">\n                                    <div style={{ marginLeft: 20 }}>\n                                        <p\n                                            style={{\n                                                fontSize: \"1.5rem\",\n                                                fontWeight: \"bold\",\n                                                marginLeft: 20,\n                                                paddingTop: 20,\n                                            }}\n                                        >\n                                            {tmp_product.name}\n                                        </p>\n                                        <p\n                                            style={{\n                                                fontSize: \"1.3rem\",\n                                                marginLeft: 20,\n                                            }}\n                                        >\n                                            남은 수량: {tmp_product.quantity}\n                                        </p>\n                                        <p\n                                            style={{\n                                                fontSize: \"1.3rem\",\n                                                marginLeft: 20,\n                                            }}\n                                        >\n                                            {setMoney(tmp_product.price)} ₩\n                                        </p>\n                                        <p\n                                            style={{\n                                                fontSize: \"1.3rem\",\n                                                marginLeft: 20,\n                                            }}\n                                        >\n                                            찜한 날짜: {setDate(cart.createdAt)}\n                                        </p>\n\n                                        <br />\n                                    </div>\n                                </Col>\n                            </Row>\n                        </ListGroup.Item>\n                    </Link>\n                </div>\n            );\n        });\n\n        setCarts(cartList);\n    };\n\n    useEffect(() => {\n        fetchCarts();\n    }, [userData.user_id]);\n\n    return (\n        <div>\n            <Container>\n                <CategoryDirection tag1={\"찜 목록\"}></CategoryDirection>\n\n                <EmptyCheck\n                    text={\"찜한 상품이 없습니다\"}\n                    items={carts ? carts : []}\n                ></EmptyCheck>\n            </Container>\n        </div>\n    );\n}\n\nexport default Likes;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nfunction NotFound({ history }) {\n    return (\n        <Container\n            style={{ marginTop: 200, marginBottom: 200 }}\n            className={\"text-center\"}\n            fluid\n        >\n            <h1>404 not found</h1>\n        </Container>\n    );\n}\n\nexport default NotFound;\n","import \"./App.css\";\nimport \"./assets/css/color.css\";\nimport \"./assets/css/dropdown.css\";\nimport Login from \"./components/Login\";\nimport Logout from \"./components/Logout\";\nimport Register from \"./components/Register\";\nimport Home from \"./components/Home\";\nimport Move from \"./components/Move\";\nimport ProductRegister from \"./components/ProductRegister\";\nimport { Route, Switch } from \"react-router-dom\";\nimport ProductByCategory from \"./components/ProductByCategory\";\nimport UserBanner from \"./components/UserBanner\";\nimport Banner from \"./components/Banner\";\nimport CategoryBanner from \"./components/CategoryBanner\";\nimport ProductDetail from \"./components/ProductDetail\";\nimport OrderList from \"./components/OrderList\";\nimport PurchasePage from \"./components/PurchasePage\";\nimport Profile from \"./components/Profile\";\nimport MySales from \"./components/MySales\";\nimport PurchaseList from \"./components/PurchaseList\";\nimport MySalesDetail from \"./components/MySalesDetail\";\nimport Likes from \"./components/LikeList\";\nimport React from \"react\";\nimport NotFound from \"./components/NotFound\";\n\nfunction App() {\n    return (\n        <React.Fragment>\n            <UserBanner />\n            <div style={{ fontFamily: \"twayair\" }}>\n                <Banner />\n                <CategoryBanner />\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/register\" component={Register} />\n                    <Route\n                        exact\n                        path=\"/product/register\"\n                        component={ProductRegister}\n                    />\n                    <Route exact path=\"/logout\" component={Logout} />\n                    <Route\n                        exact\n                        path=\"/category/:number\"\n                        component={ProductByCategory}\n                    />\n                    <Route\n                        exact\n                        path=\"/product/:number\"\n                        component={ProductDetail}\n                    />\n                    <Route exact path=\"/orderlist\" component={OrderList} />\n                    <Route\n                        exact\n                        path=\"/purchaselist\"\n                        component={PurchaseList}\n                    />\n                    <Route exact path=\"/purchase\" component={PurchasePage} />\n                    <Route exact path=\"/profile\" component={Profile} />\n                    <Route exact path=\"/mysales\" component={MySales} />\n                    <Route\n                        exact\n                        path=\"/mysales/:number\"\n                        component={MySalesDetail}\n                    />\n                    <Route exact path=\"/likes\" component={Likes} />\n                    <Route path=\"*\" component={NotFound} />\n                </Switch>\n\n                <Move />\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers} from 'redux'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage';\nimport user from './user'\nimport category from './category'\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n  }\n\nconst rootReducer = combineReducers({\n    user,\n    category,\n\n})\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default persistedReducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { BrowserRouter } from \"react-router-dom\";\n// import registerServiceWorker from './registerServiceWorker';\n// redux-persist\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { persistStore } from \"redux-persist\"; // 추가\nimport persistedReducer from \"./modules\";\nconst store = createStore(persistedReducer, composeWithDevTools());\nconst persistor = persistStore(store);\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate persistor={persistor}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </PersistGate>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n// registerServiceWorker();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}